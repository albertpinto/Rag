 So in the two weeks going forward, we are now going to look at how do you take data science and scale it up, make it into an engineering thing. It's somewhat akin to taking a chemistry lab experiment, successful lab experiment, let us say you have come up with a new way of making better tires or something like that, and then scaling it out to a tire factory. The considerations that come in scale out and engineering are different from the considerations that you have in the lab. In the lab you want to innovate, you want to see that your models are good and they work and solve the problem. But once you have solved the problem in the small at the level of your laptop or some Jupyter notebook or some instances, on work or some instances. The problem still remains. You have an engine that can draw inferences now from data for your particular problem. Like, for example, in this eloquent transformers. Now you have an engine that can do various NLP tasks. It can do translations. It can do and so forth. There are various things that it can do and so forth. There are various things that it can do. Dependency graphs and so on and so forth. But when you take it to production the difference between doing it in your notebook and doing it in production is that in production you don't have one user you have arbitrary many users you don't know how many users will be concurrently exercising your application so considerations like what is the memory footprint what is the throughput how many inferences can you run per minute for example what is the total time that it takes to run the inference so the total time speaks to obviously the performance of your system. The amount, the throughput that you can put speaks to the scalability of your system, how scalable it is. Resilience speaks to the fact that do you have any like all sorts of out of memory error problems, et cetera. When you do concurrent accesses, multiple users are accessing it at the same time, does it crash? Does it stay up? How much memory do you need? And when you do a cloud deployment, do you have a means to do auto scaling? So these days for scaling, pretty much the de facto standard is something called kubernetes it is a orchestration system think of it as a puppet master with a very interesting set of puppets you start out with a few few puppets these are called dockers docker containers and these puppets are sort of the thing in which you put your application there, your code there inside the docker. Now, what the Kubernetes does, if you take the metaphor for a puppeteer, the puppet master, is that it will start off with a small number of puppets who will do their dance, who will provide service to the users, but based on the load profile, it will automatically keep creating new puppets. It will create new Docker instances in the pod. It will elastically scale out based on load, and it will do it in a transparent way so that you have a unique IP address to the client, but internally it does a load balancing across these docker instances and the other beautiful thing is that if one docker instance crashes let us say that it went through overload it had an out of memory error it started crashing automatically the traffic is routed away from the docker instance it has a way to backtrack and then redirect the traffic to other do instances, other puppets to service the request, user request. So these things are important because these things speak to the thing going into the real world, into the wild and actually providing service to users. Now this project that you did, the Eloquent Transformer, assuming that you guys are done with it, it is very ready to now be taken to production. You can. I would suggest you should register if you want to do that, especially if you're going to interview or showcase your work. This would be a good time for you to pick up a domain a domain these days are a couple of dollars one dollar two dollars you can pick up a domain then with that domain you can go to google and if you have a google account map it to your kubernetes and then essentially put your application and see how people use that application. So there will be, it will be the end to end journey of learning machine, machine learning, creating a model, testing the model, validating the model, making sure there is no overfitting, testing the model, and then taking it to deployment, taking it to deployment, taking it to production. And then of course, the pleasure of seeing arbitrary amounts of traffic come and obviously hit your system. Now, when traffic comes, there are two considerations. You have to pay for the hardware. In other words, in cloud, if you scale out to lots of puppets a lot of these docker containers scale but then there is a meter running your hardware utilization is metered and you will end up with a bill right at the end of it and then you have to pay that bill now the way people typically do it is they either get sponsors which i think is a little bit more marketing or it's more, I don't know, sort of hustling around and getting a hold of some corporations. Or the other approach that people do obviously is to open out a little bit of an area in the application, is for advertisement so since it's your web page for example your stream it is producing a web page and you write it in markdown in python you can always give a little bit of an area of maybe at the top for advertisement especially giving a little bit of an area at the very top for advertisement everybody is used to ignoring the banner people do understand that free services have to somehow be paid for and they don't mind that there is advertisement at the top and obviously it sort of that will pay for the hardware cost hopefully. You have to find a way to balance it out. So those are the production considerations that you have to take into consideration. Other thing you could do is once you become, and this is becoming very good at hardware, those are the considerations. And so one of the things that you have to think is where do you stand in knowing these things? I would imagine most of you have different degrees of understanding of infrastructure, of taking things, of cloud technologies and so forth. So these two weeks in some sense you can say is more about taking it, I mean you learn a little bit more about Google Cloud, you learn a little bit more about automation and you learn a little bit more about these things so i want to just gauge how much knowledge currently exists how many of you here are pretty comfortable with kubernetes and docker whether or not it is in gcp or amazon well as you know i did some installation of kubernetes and docker containers just getting somewhat familiar with the installation but not really fully using it so i'm looking forward to developing that further okay that is good anybody else who is familiar with these things i have used uh docker and kubernetes so i'm comfortable okay and did you use it in AWS or GCP or locally? GCP and locally. GCP and locally, this is very good. So would you agree that that would be the Royal road to take to deployment more or less? Oh yes, yeah. Let's do that. So those are considerations. See guys, they too are part of being a data scientist to be able to take your work all the way to production. So let's do that. Now that is what we'll do in the coming two weeks. There is a project that I will release today on Computer Vision. Tentatively I've decided that you have to distinguish between two things which look distinguish between two things which look somewhat similar. One is a pepper tree and it's, as you know, in California, it's very common. And the other, which sometimes can be similar looking, is a weeping willow. Do we know what a weeping willow tree is? Yes. So this project, the way I'm giving it to you is a business case, use case. You have to now parse it and do it end to end. I've taken you to a stage after doing this one project in which I gave very detailed instructions and pretty much a lot of the code came straight from our labs. This one is also from the labs in the sense that we have covered the territory but I will give you guys less hand. So in other words I'll take out the training wheels so that you can develop confidence of taking a business problem and converting it into a full working product on your own. These are the steps. See, people often talk, what does it take to do a startup? Well, startup is a complicated game. You go and get funding and you do advocacy, you hustle around and convince people that your idea is about something you gather together a team and there are those aspects but from a pure technical perspective the first thing that comes is you need to have something to convince people of which means that you need to sit with an idea a business idea and take it to a very thin slice into production. So people, as you know, if you have ever talked to VCs, they are extraordinarily sensitive to whether something is real or it is a paper thin proof of concept. The bar of proof of concept is raising. People want stronger confidence that it is practically a product. All that needs to happen is that it gets scaled out. So you can learn in a simplified form, in a very simplified form, not with all the complexities, how to take a business idea and convert it into a product. So that is your product. So the statement of the problem is as follows. Somebody can give you either an, let you upload an image from your website and say, here's a picture. Tell me whether it's a pepper tree or it's a weeping willow, right? And I'll give you pairwise, such pairwise combinations. The other would be between Jacaranda tree, which is another California native and something else that's very similar. I'll remember what it is. That's a flowering tree and flowering trees. And you have to be able to tell them apart. So by now, all the steps should be pretty clear to you. So what you have to do is, all people can just give you the URL of an image, in which case you have to download the image, and do that differentiation on your own. Once you can do the differentiation, you have to explain why you came to the conclusion, for example, that it's a pepper tree. You have to create the saliency map or the activation map explanation of that AI. So now that I've taught you explanation, the point that I would like to instill is never, never again build a product and make a prediction without trying to also explain that prediction. Right? So and I invite you to take the eloquent transformer product and add explanations to it, add those, those attention, the word attentions, and so on and so forth, to your project, that's an enhancement that you should do to your product. And that will mean a lot, It will be a differentiator. Today, very few people make products that explain themselves. And by doing so, you will have a differentiated product. Both from an interview perspective and if you're thinking of becoming a startup. And also lastly, of course, if you're proposing and pushing a new idea within your own company, it's far more impressive to explain a prediction. People believe or have more confidence in your machine, in your algorithm, much more if it explains itself to human beings in an interpretable way, then the business people will say, aha, I got it. so you have to engender that sort of confidence so here the point would be that you take this picture you tell what it is is it a pepper tree or is it a weeping villa and then you give the saliency map of why you came to that conclusion would you guys like to do that i will not give you any data set at all. You have to therefore in your teams, individual teams, put in effort to gather lots of pictures of both these trees. And I suggest that as a whole class, as a whole batch, all of you, all the teams collaborate in data gathering. I'll give you a sense of how much data you need to train this. To be able to differentiate, you need, in my view, a few hundred data images at least of each kind before you get a good differentiator. Are we together? So you have to be able to differentiate it. The second part of the problem is you'll have to do a neural style transfer. You'll have to take two, three artists. One of them will be Monet. One would be, let's say, Picasso. And one would be, what's his name, Van Gogh, right? And you can pick two, three more artists and you'll have to do a neural style transfer. You'll have to take the trees picture and you'll have to do a neural style transfer and render it in the style of these artists. Are we together? So those are the two goals of your project. A third goal of your project is, which I think you'll enjoy, but it's a stretch goal. You may or may not be able to do it in two weeks. I'll leave it as a stretch goals. Given an image, you need to be able to narrate what is it that the image has what do you see in the image are we together so uh you see there is a there is a child sitting under the pepper tree right something like that can you do a narrative based on the image that you see so that would be your next project i'll give you a short write up, but that is it, right? That is it. So usually what happens is when people, when you are looking for a contract, when you're looking for a project and you talk to some companies, some business, they will not give you a written spec. They will just talk and say, this is what we want. You have to sit and write your a written spec. They will just talk and say, this is what we want. You have to sit and write your own function spec. So see if you guys can create your same function spec in the same way that I created a function spec for the Eloquent Transformers. If you guys feel that it's too hard, I can give you a function spec for that. So where do you guys stand? Do you think you guys can come up with your own function spec or should I write where do you guys stand? Do you think you guys can come up with your own function spec or should I write one articulating all that it should have? All right. Give us like a day or two to give a shot at it, look at our results and... Sure, so Monday I'd like to see our functional spec from all of you in the style of my previous doc, the eloquent transformer. See if you folks can come up with a functional spec like that. It is the first step. So the way you do projects is you capture what the client is saying and then you write a function spec, you review it with the client that this is what you want. with the client that this is what you want right and there are some negotiations in between but then you you think through a technical architecture and then you sort of start iterating you start doing those agile sprints quick sprints in which you quickly iterate and every once in a while you ask the client to join a meeting and see what has been developing so see guys if you can follow that methodology. I'm a little bit worried that you know in this 18-week workshop we kept only two weeks for the projects in an intense form and that is in my view little but the preference in the team was we covered a lot of topics. I hope we have covered just about every topic under the sun in deep learning. But now I would like to focus on the projects. Two weeks, if it takes three weeks or four weeks, that's perfectly fine. Whatever time it takes, I am here. I'll be happy to give you guys time. Let us take this time to do these projects to perfection, guys. And project-based learning is as vital as doing the guided labs or social learning or listening to theory sessions. So please do take the projects very seriously. Don't think that, okay, I have picked up all the topic and projects are optional. They're not. All the research shows that project-based learning is a very, very integral part of learning. So please do take it seriously. So Monday, please come back, each of the teams with a function spec otherwise I'll release a function spec. Now with those words let us start with the review of the existing project. Which of you guys would like to show me your project? Which team would like to go first? Kate, would you like to go first? You and Harini and so forth? Sure. I can do that. Harini, are you okay with that? Yeah, I'm okay. Yeah, Harini and Abhishek yesterday were doing a lot of the coding work. They did incorporate the hate speech and translation I provided. So all three of you present together and step into the... Yeah, you can stay unmuted as long as you don't have crazy stuff going on in the background. Let me bring up my window with the... There we go. Okay. Kate, do you want me to share the screen? All you want to do it, you can do it. I can start off. If there's something I'm missing, you can show. Okay. Okay. I will. Let's talk more. Okay. So, here's our... Oh, beautiful, beautiful. I really like it. Harini shows a very nice image there. So we've got the multiple... Looking at it, I'll give you a little bit of a feedback. See, where you say, like, choose the NFP operations for analysis, it shouldn't be in the page. It is called, you know, the first, you know, the part of the browser that one sees when the page loads, just the top part part it is prime real estate it is absolutely prime real estate and here you may not want to keep functionality so much as doorways to doorways to function like for example choose the nlp operation for down a little bit. Okay. That should go up. And not only that, lemmatization, take a good example, a good visual image of lemmatization. So those checkboxes could become, in some sense, yeah, you can do that, but make them into images. Images to the... Yeah, and move it up, move it up. Move it to menu bar up right okay these are more like your menu okay so the the choosing the nlp operation should be first yeah and then the okay we'll do that sir the input choices okay taking note of that yeah the user will like to know okay what can i do and so what can the answer to that should come what does this functionality this website offer that should be up front otherwise imagine looking at the logo and then it says type in your text and if you don't see the you know the screen doesn't show the part below that And if you don't see the, you know, the screen doesn't show the part below that, then especially on mobile devices, you have already lost the audience because the person is confused. Why am I seeing, why am I asked to enter the text without knowing what it is for? Imagine that you're scrolling up in a cell phone. The other, have you verified that this is a content? Have you checked it out on your cell phone? Easily you can do that. Your cell phone is on the Wi-Fi network. Just see how it looks on your cell phone browser, how it looks on your iPad browser. Just on your phone. Okay, that's an excellent point. And I already know the robustness for some of the input text options with some of the different functions. We already know we need that um yeah that that's that'll be easy for us to change the order that absolutely do that and last thing i would suggest um there are many themes available on the internet if you go to the theme forest and so on and so forth but they they are excellent static web page theme, especially for single, you have a single page theme. So you can really make it production grade. And those things now cost like either they are free or they're like $1.99 or very small 4.99 or something like that. But it can go a long way in your application, which currently has a very technical look to a very consumerish look, audience-facing look. So you may consider going to ThemeForest or somewhere, any of these theming places, picking up a theme. Which ThemeForest did you suggest for a start? ThemeForest. theme forest or somewhere any of these theming places picking up a theme oh which which place did you suggest first start just open a tab and just go to theme forest yeah hit enter and look for simple themes you know not the wordpress themes but And look for simple themes, you know, not the WordPress themes, but yeah, you see that. And pick a responsive one, the ones that will look good because these days, people surf the web mostly on their cell phone and iPads. So the primary audience, I mean, the primary viewing you should do is on the, on the, so simple site templates. Do see this the site templates yeah this is and just go for very simple one-page templates you can just browse and take something very simple like don't pick up something very complicated and pick up something quite inexpensive not the very expensive ones so there are many such websites and if you just google up free a free webpage you can find many many such places people have contributed a lot in the open source uh some free website theme or web page theme. Free website themes. That's it. Yes. Unbelievable. Sorry. Just do restart. If it's throwing an issue, I can share the screen. Yeah, pardon me, I'll relinquish the control while that roots. How rude of it to decide to do that right then. You guys want to show the under development screen? Should I share the screen? Either Abhishek or Karini. Abhishek, what do you want me to do? Go ahead, Arun. Okay. Murphy's law, all applications fail when you are demonstrating it. I'm sure my husband would agree. He used to do software demos as a marketing guy. It's free website themes right yeah this is you're not yourself good with css and uh shall i go for this yeah yes yes you can go with that Yes, yes, you can go with that. No, these are website builders, not website builders. Yeah. Free responsive website templates. Okay. No, no, don't go for the advertisements. Here one? This one? Yeah, let's go there excellent yes so you can pick something simple do you notice that these are simpler and nicer yeah yes you can add a lot of you know color and beauty to your application so do that you guys have been so much effort spend a little bit of money a total budget of let's say $10 or $2 to go register at domain. Another $2, $3 to get a free template and then maybe a hosting fee of like $2 a month or something like that. Well, I do have a website, getemon.com, hosted on GoDaddy. Does the host matter with that? No, host doesn't matter. But you don't want to go that you won't host your Python code. So what you need is and don't do it. You want to learn the Google I mean, the cloud technology isn't so learning production is the part of learning okay so i could yeah posted my name domain and connected to a google cloud that's right though i would say that because the three of you are working on it together as a team pick a neutral name like don't pick a name like if you say kate mon then it won't be doing uh justice to harini or to abhishek so pick a neutral name and then post it. And then in the application, you can mention that you are the three partners or the founders, whatever it is. And then see how much traction you get, how much attention you get. Okay, yeah. We'll do that, so we'll apply the themes and go on it. Let's get back to the application. I mean, yeah, we've got a number of my husband has registered a number of websites so it might be easy for us to just add another one on our host yes okay okay i'll just use one of the samples yeah so here's a hint about the samples. When you instead of saying sample one, sample two, it is far better to get the first sentence up to like, you know, long years ago, we made a twist with destiny. So if you say that, you know, people get a color of the sample they are choosing. Otherwise, think of the drop down from a usability perspective. When you bring the dropdown, it is opaque what text they are choosing, isn't it? So it goes to usability. The first, say, 100 characters, 120 characters of the sentence, of the paragraph. Okay. Wait a minute. Okay. How many languages do you support? Three. Excellent. Just three so far, but we could add more. You have the translation. When you look at the translation at this particular moment, and this again goes to the fact that the menu bar goes to the top now your translation and the original text would be essentially one above the other isn't it yes yes yes sir very good that is the way it should be because okay we change that yeah then they can compare and see compare and see yeah okay put the original okay that's another original text let me just ship these two then they can see the original text and this yeah okay we'll do that and the other thing is these days people don't bother about the submit button what they do is the moment you paste the text in the text box you wait for a pause of about two three seconds and after that you consider that as a subject you immediately invoke the back end to translate okay writes the text immediately the translation takes place because that has an advantage that people can continuously be writing the paragraph and they can see the translations emerge line by line as they're adding more lines to the to the text isn't Anand Oswal, Ph.D.: Always what happens is not Anand Oswal, Ph.D.: The text as you get literally thinking through and writing the text in the upper box they have to keep hitting the submit button yes yeah that's it so you don't have a submit button okay let's go down so it's very good so you have you implemented all the functionality so uh the continuation summarization i think think readability. These three and subject topic detection, these four we are still doing it. There are some issues we are running into, but the rest, everything is implemented. Very good. And we have hate speech. I think that's... Yeah, hate speech is also working. Yeah. And guys, do take it all the way to production. In the next two weeks, of course, that what i'll do i'll teach you guys productionizing and doing that go register a good like or pick a good domain name that kate has go and let's get through the process of uh taking it to production and then put it on your resume about this project okay and then when you interview start with this just send them your website okay good okay write about a blog write a blog about your experience of not about this experience write an experiential blog which is sort of a narrative in which how you learn to build something like that and see what happens is that there are two kinds of blogs people write one is the standard medium kind in which what you do is you throw the code this and then now you do data cleaning and now you do sentiment analysis and here is the code to do that but those are dry a different quality of blog that you write a narrative is when you talk in first-person experience. You bring in a more original color that as a person, as a human being, how do you interact with technology? How do you pick up a technology, learn something, a body of knowledge, and then use it to build something real. And that will be your journey and that will speak volumes compared to and far more eloquently than any resume can do. So start thinking about writing a blog. Those are your goals in this next two or three weeks, those are your goals. Very good, so continue that. Hate speech detection, non-hate, this is it. You told me the interest is, you would say probability of hate is one minus 0.94. 0.something, yeah. I think we need to change how the outputs are being shown, make it more understandable okay so you have to also say see when you see a number like this 0.94 non-hit is it low or high is it 0.949 out of one or is it 0.949 out of 100 because if it is out of one this is this is fairly safe speech that is not hate whereas if it is out of 100 then most likely it is hate speech isn't it so the scale is important in scientific converted to be like non-hate with a 94 confidence or something? Something like that. And you can say out of 94, out, you know, slash 1.0, out of 1. In some way, visually, represent the scale. Actually, this thing really calls for a slider bar. If you can visually show it as a slider bar from 0 to 1, and you can put a pointer there along with the score, that will be very nice. Now, Streamlit has a slider bar from zero to one and you can put a pointer there along with the score that will be very nice now stream it has a slider bar use this yes it does yeah that is it very good this is this is a very very good progress uh continue this and take it to production real-time production okay so so next time we'll implement all four and put in the themes and all that and get back to you. And remember Monday? Everything he suggested. Right. Yeah. Okay. All right. This is the next. Thank you, sir. Thank you. Very good job. Very good job. Really happy to see this. Who would like to go next? Shankar, how about you? you i'm still making progress on the modeling part collecting data labeling and then i've run i run some cases on the summarization part other than that that is nothing much to see and more than that this is related to the work i do is related to my work. Oh, okay. So there is a private, there's a, so you can show me separately. Okay, sure. And next Abhishek is done. Dennis, you and your team. Can I see some progress from you and your team? Sure. You showed it last time. That's it. Yeah, and then we'll fix some bugs. Okay, no, it's all right because some people were not present the last time. So give a quick walkthrough. Pramjit, do you wanna? Yeah. And it's exactly the same as what you saw with Kate right now. At the visual interface. Okay. interface okay I can share the screen just bring it up and show yeah so now guys be creative with the visual design huh you streamed it but be more creative with the visual design as you know the the the markup allows HTML injection, right? So inject your HTML. So can you see the screen now? Yeah. Yeah, so that's about it. I think it's the same walkthrough. Yes, Eloquent Transformers, excellent. So we had this also, I think this is, these are just streamlit features there, right? So the goal here was, I mean, and I was kind of thinking through this in terms of a UI, it was not about putting it into a production use case. It is about functionally hitting all the things that we wanted to, plus kind of using Streamlit, right? That's all that was the goal then. All right. But the question now, Asif, you said, does streamlet allow for skinning with other templates? Of course you can do that. Oh, okay. So that, need to look at how that does it, okay. You have to see in real life, these are mashups. You have to just figure it out. I'll give you a hint, it can be done. So do it. Okay, yeah. Yep, so this is, I mean, it's exactly the same thing. When I kind of showed this to Harini last time. So that's basically the same flow that they've also adopted. So there's nothing much to show here in terms of, I got some sample texts so that there is something there to use rather than having to type it all out and um yeah you you want to do a translation you pick it pick a language to translate um have you got out on your cell phone pardon have you checked it out on your cell phone? I didn't. Yeah, I wasn't thinking about the responsive design aspect of it. So I haven't looked at it specifically yet. But remember, at this moment, I want each of your teams to create your own website where you do that. When you do go to production, guys, this is a request. You don't have to follow it, but I would strongly request that somewhere you mentioned project under Support Vectors, refer to Support Vectors in some way. It will encourage other people to come and learn from us. I would request that and do go to production. And if you have, I mean, go to production all the way on your own. If I was there, the Port Vector's website, I mean the campus, then of course I would have fired up one of the servers and you could have gone to production on the servers themselves with your domain names. That's the aspect that I'm keen on learning, Asif. I was hoping that that's what you're going to do today in terms of so i think so i think some of us have you know hands-on product development experience right now in the cloud technologies most of us don't the part from getting from streamlit into putting it into a containerized world where you know it can auto scale and so on is a thing worth learning and if we have to do a toy application that mode that is a good experience that is so we'll learn these things gradually see at this moment i will give you guys pointers because there are so many ways to do it. I'll point you to the resources to read and follow the examples. There are a lot of examples. Follow the examples and do it. So because now we are just following, you mentioned about Streamlit. I followed the basic examples there and put it here. That's it. Very good, yes well you're not far see ultimately streamlit just a python script isn't it it's a python script that you run with the streamlit app it brings up a web server that is it now the whole thing you have to put it into a docker into a docker all you have to do it is scale out in kubernetes that's all okay there isn't much other than what we've already seen in terms of a design pattern this is the same design pattern that we showed last time uh there hasn't been anything else added to it yeah so the same thing applies but next time please show it with theming proper theming yeah i think uh this time we added punctuation for um youtube oh how did you do that show me that oh there was a package basically which is it punctuator can you send me see there are many packages i wanted to know which one did you guys like okay awesome the quality of the punctuation that's not very good not very good right yeah actually you should try because there are many people who have created the punctuations i want you guys to collectively try out different and tell me which is the best. Let me just throw in a URL there. Students learn from their past experience. In fact, Dennis, I'll give you a project as an internship project, you and Harini. I want you guys, and Kate, I want you guys to find the best punctuator package on the internet. Try it once out and come to me with the best punctuator. OK. Do a translate into Hindi. Yeah, what we haven't done, Asif, is we haven't using the same text. So that can be added in so that we can look at the comparison for it actually the effect of the punctuation is seen only post translation right now that is right yeah what you have done is you have taken a youtube video and automatically have taken the transcript and converted it into hindi yeah so that's an implicit pipeline here right the conversion from video to text is implicit because subsequently it's also translated the output is only the translated text okay good yeah this is very good thanks for this another thing guys this sunday like tomorrow i would like to sit and carefully put some review comments in your code so i don't't think you have shared with me your GitHub projects, or maybe members of your GitHub projects is important. Because a lot of the improvement that you you can make or maturity you can get is through the code review. So share your code with me, I would like to do it and give you the I won't be able to review every part of it, but the crucial parts I'll review and I'll give you the AI part, I'll review and give you feedback on that. So on our project, you're already there, Azif. So, already there. And that's the same repo where we're checking in the code. Okay. Okay. We'll add you in into our github thing oh she go do me a favor now slack i create a document i think there is a way to create a document or a page in which all these github links can be put can each team put the links there so that you know i have a common place to go look at i stay very busy and i don't remember where even if you have sent it to me i've lost it so can we have a central page for everybody's GitHub link? Where is central? What is it? It's like in Slack create the page. In Slack there is a feature that you can add in a project or sort of in a channel, you can add a document somehow. Do you remember how? There is a way. Send it to our team channel. No, so when you go into our team Slack, when yesterday Abhishek put in the Git thing again, right, that time it gave that option. What was the option that it gave? To create something for Git or use Git with Slack directly or something like that. No, no, no, not like that. He just wants a link to the Git location, right? A simple page. It's a way to add a page. Oh, you see shortcuts? No, not shortcuts. Okay, pins. Yeah, under files. You see the files, guys? Let's do one thing. One of you upload a file and in the file, put everybody's link who would like to gather the get links from everyone. Dennis, can you please do that? Please gather get links from all of everybody. Now, and just and make sure that in each of your good projects, I have just the read privilege. I don't need write privilege. I just have the read privilege. And I will give you the feedback. Okay. I pasted ours right into the chat for the Zoom just for now. Right. Dennis, he's conceived there. The reason is I'll get very busy, but tomorrow I have time to just look through some of your code. All right. Which is the next team who would like to nobody is volunteering i have to call people out okay there are three cakes who is the second kate uh of us, it's me. So that's not me. That's not you. Okay. Abhishek is done. How about Patrick and Supal? How about, actually you guys need help at the end. Okay. Sanjay and Premjeet, you have already covered it. So I believe that, oh yes, Pra believe that oh yes Praveen how about you hello Praveen are you you're on mute okay yeah go ahead yeah no I have just a. Actually, I'm still need to complete the functionality. It's more similar to what Kate or Premjit has shown. Nice. I can share and show you that it's almost the same thing. Yeah, show it to us. Just give a preview of it. Just a second. SHYAM GOLLAKOTA- And Saurabh, you are working with who? Sanjay, Patrick, and . SHYAM GOLLAKOTA- Oh, right. So you are working together. OK. Okay. So guys, take that project, computer vision project seriously. Come up with a spec on Monday evening. Now remember that there is no more theory being covered. I will explain some things for one part of the session, but the other part, I'd like to see the function. So, Asif, are you seeing now? Yes, I'm seeing it now. Yeah, it's pretty much what these guys have done. So, transfer from YADD, so you have a text inputs, different text inputs and a sample. I need to add this functionality. it's in a separate methods. You'll have to do that, so I will do that later. But I wanted to get the first, the UI part and get familiar with the streamlet. So that's why I thought I will just put the skeleton of these things and functionality I can add it. Okay, wonderful. What is the top right hamburger? Click on that. Which one? The top right hamburger? Click on that. Which one? The top right hamburger. You know, the three lines, three horizontal lines. No, no, in your page, in your application. Yeah, yeah. Top right here. Click on that. Just a second. Top right. Deploy. Okay. Reportable. Yeah. Okay, good. Yeah, the good thing, right, with the Streamlet, I found out that you can keep doing the work and run in real time. Yes, the beauty of Python is it's a scripted language. Yeah, see if I make a change, right, so it automatically you can see, like, once I save this right so yeah yes it's very nice excellent i don't know most of them know this or so that's the one good feature uh from this one no thanks for pointing that out thanks because people don't have to restart again and again yeah just uh save that oh respect to auto typing streamlit actually is excellent right man you could literally keep writing your code on one side and keep seeing what is happening with it on a separate screen yeah yeah that's what i was doing actually uh see for me uh uh data visualization was the biggest bottleneck see i have a lot of ideas and I can bring in data from various places, but building HTML page and all those stuff, it was painful. So I wanted to get familiarized with this Streamlit. So this was really actually a boon, Streamlit. Okay. Very good. So guys, I remember one enhancement that I asked you to do is now when you do for example sentiment analysis explain put the explanation why did it pick up or what words did it pay attention to for the sentiment right likewise for topic detection and for things like that I hate speech make explain itself. And if you explain the text, believe me, you are way ahead of the crowd at this moment. Most people, most applications don't explain themselves. All right guys, good. Good. So I found a visual studio is also pretty good that's it so yeah i noticed you're using that that's what i was going to comment visual studio actually i i am so used to pie charm i've stayed with my charm but i hear that oh by the way if you're using pie charm guys or whatever you're using there is a plug-in which is very popular these days kite k-i-t-e plugin which is very popular these days kite k-i-t-e make sure that you're using it a kind of just guess what you want to type and it will auto complete your code it is much smarter auto completion than what you would find in the typical ids so if you see here as if it says kite ready here at the bottom oh you are using kite yeah i'm using kite ready and the good part of this is i can switch between my different environment if you see here yes so i can easily but in five term i find it difficult here i have a couple of uh virtual environment like island mp5 torch pie torch is space etria and tensorflow so i can easily switch between all of those. You know, Microsoft has invested a huge amount of money in Visual Studio Code. And when you know the predictive, the auto completions here, they are being run, literally it's a call back to the server to one of the largest AI models. Yes. Is there. And they have this plugin, right? So this is pretty good actually. They have tons of plug-ins available. Right. Oh, Jupiter. It's very lightweight and pretty fast compared to your PyCharm. So are you suggesting Praveen that I should start taking it more seriously than PyCharm? Like move away from PyCharm to to this is it time to do that you can take a look into it because this is built on atom so it's very lightweight actually another concern about pie charm is that it's from jet brains which apparently is a russian company yeah there's security issues with that now ah that's right yeah the recent the hacks they're saying that uh most of that company they are using a jet jet brain products and that's what the doorway to hacking really yeah oh because for their development work yeah so when you create your binary they quietly sneak in their back doors. Yeah. Wow. This is quite good as if Visual Studio you should consider seriously and with the amount of and the GitHub integration because Microsoft owns now this one, right? Yes. GitHub, so you can easily integrate it with GitHub. Sure, I'll do that. Ravindra, this is an executable that you install or are you running this on a browser based application? It's executable. Okay. So see what happens is with years of practice and has gotten so accustomed to Eclipse and PyCharm, the only resistance I have to switching is that all your keyboard shortcut and your muscle memory goes away yeah you have to start all over again and also i have this uh oh i don't know we use a gsh asset so this is the oh gsh i've never used this yeah framegit you can try this they have oh my gsx so that is pretty good actually what does it give you what does the gsg give you no the the mac they have switched to gsh you know default gsh shell and there are quite a bit plug-in like oh my gsh where you can know where you are in the git and all those themes as it so oh okay so it's a very mac specific thing no it's v v z for zebra yeah z for zebra yeah no i understand it is a z see zsh has been there in the unix world for a long time yeah so it's a plug-in to zsh itself or to the Mac version of ZSH? No, they have something called Oh My ZSH. So that's the one I... Okay. So it is a ZSH plugin. Okay. I got that. So if you... I'll quickly look into it. That is a good thing to learn. See, this is again, I guess I'm beginning to fall behind the times i am so used to bash i know that you can install on because max default has a jsh so you can install on top of this this one okay there are hundreds of plugins, community themes, and all this stuff. Ramin, what does this plugin provide? Is it a source code management environment, or are we talking about some utilities for just managing the computer? No, this is just on your terminal. If you see here, you have a GSS shell default. So what this does is it will more uh kind of makes it more user friendly you can see here gate and all this stuff if you see here so it's just the console it doesn't give you anything else okay so this is skinning in terms of when that when you open a terminal there is some color coding and all that that's what yes yeah it's because plain uh gsh is not really that uh yeah attractive so if you install this it will add all this stuff on top of your gs okay it's uh quite a good actually i'm uh using it with all the git repositories and all the color coding and you can get any kinds of themes you want and all this stuff so so that's a thing with this okay so i i realized something very interesting uh there is a project called oh my bash yeah this is oh my zsh okay nice i think it brought some color into the terminal environment yes yeah it brings color and if you are in a git especially it automatically shows you you are in the master branch or which branch you are hey guys if you use ubuntu the terminal is just awesome then the terminal that i use i like ubuntu yes beautiful very colorful terminal and very very powerful it has a full emacs capability like you know all the emacs commands they literally work and i'll see yeah i guess the question is um but it certainly helps to add more things to it. Yeah, like Unix, as if Linux, especially one, two, but it's only for pure development, you should use that machine. For Mac uses most other, like I do video editing and pictures and all those stuff, especially not possible in Linux. It's only for a pure development, it's good. Yes, that is true. Like in my case, right? I'm talking to you now through a Windows machine. This is the only thing I use this Windows machine for, for video conferencing and for basic video editing and so on and so forth. Whereas I do pretty much live the rest of my life on Ubuntu. For us, it's a zoom calling the video calling everything goes through the mac and as well as development yeah but ubuntu has its own video i mean linux has its own video editors but nothing compared to the adobe suite yeah Yeah, that's true. All right, guys, it was a fun session. Let's meet again. I'm hoping that some Monday guys will have a presentation. I would like to see the functional specs. I will also be explaining to you one thing that I didn't do is how do you create a Java project and take it to production? So I'll get you guys started with that. It is important because when you work in companies, you'll often see that the most of the engineers, data engineers are Java people, Java slash Scala and so forth. Kotlin in that family, JVM family, and you are in the Python. These are the two dominant language families. I mean, three actually. JavaScript these days is number one, but it's a lot about UI. People are beginning to write even the backend microservices in JavaScript, Node.js. And the performance gaps are still there. The reliable industrial strength code is still in the Java family or CC++. And the data science is almost all Python. And it is important to be familiar with both these families. You guys have all picked up R and Python, the dominant teams in the data science world. If you are not familiar with Java, it's a good time to. And I will start introducing you to some java ecosystem libraries so we will create a native java application in next week and one of the things i don't know if have the virtual machine anymore. Yeah. You're using that Praveen, the native binary? Yeah. How do you like the performance of the native binary? Yeah, initial boot up is quite fast, right? Because in JVM, the initial load time was consuming, right? So this is pretty fast. fast yeah and how about the run time there at execution time do you see a difference yeah we find a few milliseconds or seconds difference yeah quite quite nice actually you can create very optimized binaries in pure native you lose something like for example, reflection gets compromised. So I noticed that when you do dependency injection, you can't mark your injected properties as private anymore. Yes. Yes. So minor changes. But other than that, it's a way. So it's something I'll introduce you guys to. It will be code heavy, guys. And so that will be important thing is to be code heavy heavy we'll go through that process okay guys and then i'll see you i suppose on monday