 Good evening, everyone, and good morning for those of you who are joining from India. I believe we have just one person, Vishal. Vishal, welcome. So, today is a short session. It is nowhere as complex as what we were doing on Saturday, where we went through, to recap, a lot of territory. We did line graphs and we ended up with the famous stripe visualizations. We did it using multiple libraries, Matplotlib, Plotly, Altair and so forth, Seaborn. Then we did a geolocation data visualization, maps in short. We did some evocative maps. We did choroplex and so forth. And then we also did network visualizations. We created some. We looked at the structure of complex networks. For example, we visualized a Facebook social graph. And we could see the communities present when you visualize that. Obviously, there's a tip of an iceberg as we progress through the year, through the weeks and through the rest of the year. We are going to develop on those visualizations and make it far more robust and many more things will come. Today's topic is actually quite simple. I would like to introduce you to the fact that once you have visualizations and there's interactivity, you could actually export, you can make it available to your audience as interactive, something that they can interact with. as interactive, something that they can interact with. And the basic premise is this, and here's my experience. As I was saying a minute ago, when you want to make a point, you could make PowerPoints with big bold letters and some fancy graphics and so forth. As you know, people in the visualization community tend to think rather poorly of most of these PowerPoints. Not all of them. Some slide decks are very communicative. There are ways of doing it well. But there is far more ink and color and far less substance in most slide decks. You could write, you could articulate a Word document or something like that, a textual document, or you could use LaTeX and write it more formally, which is a huge, huge improvement. If you remember, Edward Teft, one of the great gurus of data visualization, says that it's far better to say it in words rather than bullet points. Bullet points should be your section headings or subsection headings, but you must explain so that you don't leave ambiguity there. So we will. So that's an improvement. But sometimes when you want to make a point, a document, a static textual document is not enough. So you embed images, you embed visualizations. To make a point, you show the data and so your arguments or your main point is rather data driven. Again, a good point. Sometimes you want your user base to interact with the data and see what happens when you change certain parameters in the data or much more so when you are doing machine learning, you want to change certain parameters in the model. When you, for example, how does, if you're looking at the hyper parameter, and some of you have taken previous courses would the model that you build and its complexity, its ability to fit the data, responds to two forces, to the degree of the polynomial that you choose and the degree of regularization, let's say that you choose, either rich or lesser regularization, the degree of rich or lesser regularization. And we have done that in the previous class, those of you who attended comprehensive intro to data science, we did that. In fact, this visualization that I'm going to show you today is taken from that particular workshop. Now, if you haven't taken that workshop, of course, then this is a good start. We are starting 2022. If you, we started started with data visualization first, even before we went into anything terribly involved or complicated, even linear machine learning models. We started with data visualization. So one of the topics that we didn't cover is this interactive dashboards. The main point is you could write a document, a so-called document online, which not only has hyperlinks to other documents, good references, and it not only has some images of visualizations and so forth, you could make those visualizations interactive. You could bring about, make it sort of like a dashboard and so forth. And of course, these days it's quite customary. For example, if you run production systems in engineering, you run the Kibana dashboard or Prometheus and so forth. You see a lot of things happening in real time. You see the load on the server that there is the bad, and you can sort of interact with it with a specific time windows and whatnot today because we are focused on data science i will start with a very simple page which illustrates how easy it is to create dashboards or documents i i wouldn't use the word dashboards i would just say a page or a document which has interactivity baked in. So when you look at this page, this page could be any one of the web pages and you can just remove it and then bring it back. But basically it has a little, it has some basic text, it has an instruction, it says select a value for the correlation, row. Now observe that the row is a Greek character, so you can, if you have been taking the visualization workshop, you can can say how do we render greek characters anyone latex using latin exactly using native so we have used latex to render this row and so we'll see that now the whole problem is so let's say that you have this and the end your goal is to teach people how to what correlation means what does it mean for X to be correlated to y. And literally did that in the lecture on correlation I wanted to show what it means so we'll do this visualization but let's play around with it a little bit. If you, this is negative correlation, right? So as x increases, y decreases. And if x decreases, then y increases. You can see that. On the other hand, if you just do that, you can gradually, and you can, of course, put a mouse or play button and so on and so forth. But we'll keep it very simple because we are going to make baby steps today. Right. So we are going to try and reproduce this visualization from scratch and see what it takes. Of course, by now you realize that just as a review of correlation, now the data are completely uncorrelated the y seems to be invariant of x at this particular moment there is neither a positive nor negative correlation and then of course if you go into the positive direction it becomes like this so now let us deconstruct this and see what all things are here. Now there is also, because we dealt with multiple graphing libraries, I put two of them here. We can do this with this. The same thing, and by the way, Matt Plotlove, I didn't bother to color, but I'll leave that as an exercise for you to make it a parity with Altair. So let us deconstruct this UI. What all things are there? First of all, you see this gray sidebar on the side, isn't it? Which you can remove and you can bring back. You also see that there is a title to the page. There is some text. There is a selector. The selector is a slider. And here the selector is a radio button, right, in the language of a web widget. You say, this is a radio button and this is a slider. And then there is a graph that you can interact with. For example, you could interact with this graph right here. And obviously if we haven't added interactivity, you could say in the code, if you had said not interact and so forth, it could have interacted. We have a little bit more happening here. You could go full screen and you could come back from it and so forth basically so if you were doing this let us say as let's take an example as a react page or as an angela page you would realize that you have to do quite a bit of setup to get to this. If you are familiar, if you are a full stack developer or you're familiar with these tools, obviously this is not a very complicated page to put together, but it is still a ton of code. There are now within the data science communities, two or three frameworks for which make it very very easy to create this sort of dashboards or documents or interactive things or web pages without necessarily knowing react at all in fact you can do it just with a few lines of code and we are going to do that but two of them that are quite two three of them that are quite popular one is the blockly dash and the other is streamlit. The streamlit is a more recent entrance its main goal is to make. Anupam Chander, PhD, MPH, Make it so easy for data scientists that they don't have to go and become full-time developers to be able to create their own interactive dashboard or pages and so forth. Now we will, let me go and take this and show you what Streamlit website is. If you go to the Streamlit website the Streamlit website. And I would say, do become familiar. It's not one of the minor projects. This project has gained a tremendous degree of attraction within the data science community. And it is like it says, trusted by over 50% of the Fortune Well, 50 companies. It is a new project, but it's taking off in great ways. It makes creating a web interactions very easy. But one thing, go to the gallery that you have here and see what lovely interactive dashboards people have created. For example, New York City, Uber share writing data, many, many things you can go create. Let's go and click on one of them. I don't know which one, this one. Asif, are you taking questions? Yes, I could take questions. Go ahead. is looking at the library, a lot of tableau books and things like that. And what I noticed is after your workshop class and things like that, I found it to be kind of not where you can use too much of freedom or things like that. It seemed to be like a cookie cutter thing. Compared to now with this piece that what you're talking about, interaction and things like that, where the world is going towards, are those kind of tools like the Tableau way of like closed system kind of thing, are they going to go away? Or should we kind of get more right on this bandwagon and move over here? I completely understand the value here. We talked about this, right, about the streamlet and things like that when we were leaving so i wanted your feel as to whether those are kind of out tools or what does the industry do yeah see um sachin and i have been in the data world i suppose now for 30 years. In 30 years, I've seen two parallel trends. There is a market. The market is made up of people without computer science or programming background, people who can't program. It's a pretty large market. You need tooling for them. For example, Excel gives you basic plotting, right? And there are all sorts of degrees of tooling, which are drag and drop and so forth. That is it. What they address, and I think they serve a very useful purpose, Tableau, is that a lot of the work that people have to do in the business world, the visual, the plots, the visualizations, are within a very limited set of bar plots, and all you need to do is specify the x-axis, the y-axis, and a few other filters, data filters. So it is mapping the gap between data as a CSV as a CSV and a simple visualization. And what these tools do, and some of them do well, like for example, tablet does it very well, which is why it's like, is that they have focused on the aesthetics, out of the box you get a pretty plot. They have addressed the easy things, the cookie cutter stuff, which helps a vast amount of business people who have no background or no aptitude or willingness to get into programming. So that will continue forever. Then on the other track has been, I mean, I would say that the other track, track in which people are willing to write and learn a little bit more. In this track, there is again a wide spectrum. See if you really want to do graphics from first principles, guys, could you please mute your thing? I'm hearing cats and music and everything so um if you at one end of the spectrum at the what i would say that the really geeky end is pure computer graphics c opengl things like that right and directx and so forth and gaming engines a lot of gaming engines which require heavy, heavy programming to do that. And of course you can use those gaming engines to render data in a very evocative way. For example, at this particular moment, well, I wasn't going to bring that in. I'm actually creating a virtual reality framework of my own, a library of my own for data visualization. So the, so you know, that 3D data on 2D screen is not very useful. But in a subsequent iteration of the course, and I assume very few of you would be interested, there is one of the themes there is, you visualize data in such a way that people can wear virtual reality glasses, they can enter into that space of data. And they can look around from inside the data how it looks. And they can wave their hand and compress the data. They can zoom in. They can just say, they do gestures to zoom into specific areas. And it will infill with more details. They could just rotate, turn around, and the world, the data, the world around them turns and so forth. So that is a very, very interesting end of the spectrum. How many lines of code do you need to write before you have a non-trivial project off the ground? We are talking of 10,000, 20,000 lines of code before it gets there. And it will get simpler and simpler because there's a metaverse and augmented reality and virtual reality are the thing of the future. And libraries will make it easier and easier over time. But let's say that that's one end of the spectrum. In fact, my first project in Grantsville was for NASA. It was for Voyager 2. It was looking at exactly that. that sort of visualization used to be by the time i was done with that project we had really put together some 20 30 000 lines of code for that right that's one end of the spectrum that's 90s 1990s when most of these graphic engines weren't there at the other end of the spectrum you you have, let's say, this thing, matplotlib. You just say .plot and you give the xy axis and you hope that the matplot engine will infer whatever it is and create reasonable data for you to get by. And then there is SAS and Matlab and so forth, the closed solutions people, and they try to prettify it, just like Plotly tries to prettify and make money. Plotly expresses free, but Plotly Enterprises paid. In between is the vast spectrum of how deep you want to go. The basic, and that's the journey I took you guys through. If you remember, both the satire. We started with one liners, and yet we evolved through the day to end up with one of the great landmark visualizations in the field. So it's a journey and I took you through the whole journey, but there is a journey beyond that journey. It is a journey of going deeper into this. For example, I'm doing virtual reality and augmented reality visualizations now. And why am I doing it? The reason I'm doing it is I lead research in learning in the company, in the leading learning company in the world. And as a research group, we have to stay at the forefront of learning methodologies. I made a bet that the future of learning has to be sort of in the metaverse. It has to be with augmented reality, right? And you are completely surrounded by what is it, the visualizations that help you learn the main concepts. Right? So therefore I'm doing that, but to go from where I have currently left you to that, it is not that hard actually. It just takes patience. Just as you notice that we took, it takes patience through the day. It took three, four hours for us to get to a landmark visualization. It just takes patience. If there is enough audience here, I would be happy to teach it again in two weeks, two to three weeks, right? And believe me, it's just absolutely awesome. The first time, you know, you write code and you just put on augmented reality, I mean, the virtual reality glasses, and I mean, that's it. And you enter your own dataset, right? And you start seeing things you didn't notice, small perturbations that you missed on a two-dimensional screen. And they begin to surface in front of you and you start seeing patterns, it's just absolutely amazing as a research tool, and both as a teaching tool. They're taking it very, very seriously. Can I teach it? Yes, if there's an audience, I could do that. Right, so anyway, that's how it's there. So there will always be the world of data analysts who will just use one of the many tools, cookie cutter tools. And there will always be the world of people. But they will always hit a wall. See, there's no such thing as a free lunch. If visualization is free, it also means that the tool that's making it free has boxed you in. You can't get out of the box. And if you want to get out of the box, you have to become a programmer of some level, some fluency, depending upon how deep you want to go into it. So that's rather a long answer to your question. But I thought I'd answer it because it keeps coming up over and over again. No, no, no, you answered it beautifully. Because I looked at quite a few visualization books and what I started noticing the last one or two chapters, like when you cross the meat of it and you get towards the end and I found those visualizations to be completely trivial compared to what you had shown us. And that's where that freedom or the way of expressing starts to come in. And I can see that journey that is happening is I didn't even have to read the first three-fourth of that book I mean like it looked very trivial to me and that's when I started questioning is like is this the end of tableau and like when you started we talked about streamlets also right and so that was my question thanks for clarifying that so yes yes those students will forever live because there will be a vast number of data analysts who are not from computer science. Right. They want to. Alright, so I wanted to show you guys that this dashboard if you look at it, this is by the way gravitational wave, why did I put it? This app displays data from LIGO. I was one of the earliest members of LIGO by the way, 20 years ago, more than 20 years ago, 25 years ago, when LIGO was just starting out, I was involved. And actually, I was not that involved, I was tangentially involved. But my colleagues in research were very, very getting into the LIGO thing. And it was a small thing, it didn't, it looked such a futuristic dream that we would one day capture the gravitational waves. And well, lo and behold, we found it. So the very fact that you are seeing these gravitational waves is the result of at least 30 years of research. But be as it is. So you have this gravitational event. You can buy event name, by GPS and so on and so forth. And you see the interactivity, right? So you can play around with it. And as you can see, if you move the sliders, the data keeps changing. Things will keep changing and it will take a little bit of time. So at this moment, you notice that here it says running, it means it's computing. Obviously, it's a lot of data and it is going in computing and it will come back. So that's the concept of Streamlit. Streamlit is a godsend for data scientists. It just means you need not learn deep react and things like that. You should eventually, but not. You can stay within your specialization and get your work done. So today I'm going to do something not as complicated as this. We'll make our baby steps. I will crawl a little bit and walk a bit. So we will create this visualization, which has most of the elements. It has a title, it has some text. It has a couple of controls like a radio control here a slider control here and we have a visualization here so what does it take to do that first thing we need to do and follow along please with me is you need to make sure in a let me bring it up uh make sure that you have this thing done, pip install in your command line in Windows, one way or the other. You can open a Jupyter notebook, empty Jupyter notebook and say, exclamation pip install. But whichever you do this pip install streamlet, why not upgrade mine also? I haven't upgraded in a while. There we go. No matching distribution found for using pip version 21. Oh, I need to first upgrade pip itself. Upgrade pip. Python miners. 10 minutes let's try a look anyway i may not want to upgrade it because my machine's been running for a while i might as well why not oh it still doesn't like versions not found i'll stick with the version that i have before i lose the environment altogether but please do this pip install uh have you all done that pip install streamlet upgrade yes yes Web install, streamlet, upgrade. Yes. Now what we will do is we won't use Jupyter Notebook. We will write, take your favorite code editor, VS Code, or if nothing else, a poor man's editor, just Sublime Text or just a text editor. In the text editor, what we will do is, let's go and do something. We will create an empty file. And in this empty file, we will save it as, let us say, I will save it. We should give it a name. Let's call it intro. We'll call it intro. And intro.py, so of course. Give it a Python extension so that you get some color highlighting depending upon what you have. So it's a Python script we are going to create. Now, see what I do. So it's a Python script we are going to create. Now, see what I do, what I will do is, I will put this page that we want to create on the left and we will write code on the right. And so this, give one last look at what we want to do because we will, okay, so we can do that here it's a little here let me open this here and you will see why I'm doing this. So this is our goal. This is what we want to go. I will just decrease the fonts a little bit because now you know what it is. This is really great. So first first thing let's do one thing excuse me we see this title here isn't it and let's do let's do one thing. How do we do the title? We just go here, create a simple Python text area and here, and we will say hash. Do we remember markup? The markup language? Yeah. Correlation. Let's just say correlation. And we are going to save this file which is lovely now what does that mean saving this file uh we are going to save this file and we will do now that we have saved this file we will do streamlet let me clear the screen streamlet run what's the name of the file we gave run, what's the name of the file we gave? Intro.py. Isn't it, guys? We will run this file. And what is it saying? Ah, it is gone to it. Okay. gone to, okay, so intro.py, we are here. One of the things you should do is rerun and etc, etc. We will deploy this app, record this. So first, let's look at the options you can have. Whenever we want to rerun, we can click here. We can set it to auto rerun. Do you see it here? Settings. First thing we'll do is we will say whenever the underlying file is touched, we will auto run it. Let's run it this way. And so it wasn't a good idea. It turns out starting out with a plain text, we will do slightly different, we'll do st.title. The streamlit, so first, oh my goodness, first we need to import streamlit. So there are a few imports that we should do. Import streamlit library that we're going to use, import streamlit as st right what happened the moment we imported the streamlit library and let me make the fonts bigger here please repeat after me just put this into your file and remember all we are doing is streamlit run should i increase the font here also is it visible streamlit.run and you can i mean see i'm used to linux you can do it on your windows shell mac shell whatever whatever is your favorite operating system are we here guys are we able to reach this far Are we here guys? Are we able to reach this far? Anyone? Ah, yes. You did. Right? So you did. So I'll just put the real one here. here so we can keep swapping it so we got this part there now we we have some text here let's copy this text this is just some text we don't want to type it in so i will just put some text here descriptive text remember this is markdown just markdown been converted to a page. So I put this, right? Now, I'm sorry, this, why am I in the gallery page? Let's get rid of everything irrelevant. I am here, I save it. Ah, what happened? Do you see your page has immediately responded? They say, well, you know, what's so special about it? It is just picking up the pages. So now we will bring about the controls what controls do we have do you notice that we have a sidebar here with the image now that image will skip the image part for now right pick your favorite plotting library and matplotlib ltr are we seeing this guys flat layout here. Are we seeing this, guys? Here on the left. This left area is called the sidebar. So let us add a couple of things to the sidebar. We will say sidebar. And what is the control visually that you call this? These are called the radio button controls. Oh, sidebar. It's called the sidebar. And you're saying in the sidebar, go put a radio. Let's go put a radio button there. We can say, pick your favorite plotting library. You did that. And let's give it, how many choices do we want to give? At this moment, I chose to give a matplotlib as one choice and I'll tear. Sorry, actually I tend to use a single code for most of my items, but I was just doing Java today morning, so I'm bringing java here uh let's go single by the way why i'm doing this for no rhyme or reason i like to keep to one convention in python i stick to single quotes in java of course i need double quotes so now of course i need double quotes so now what's it saying it is saying something is off and what is art the choices need to be as a list of choices i need to give the choices as a list to give the choices as a list. In fact, since they are a list, let's put it, the documentation says, give it as a list. So you give it the title and then you give it the list of choices. So far so good, guys? Are we here? Yeah. And I hope you would agree that staying within the Python world, this is all looking quite familiar. You're just calling a function with a title as the first argument and a list of values as the second argument. Now, you might have chosen not to put it in the sidebar. You might have chosen to put it in the main body. To put it in the main body, all you would do is you would do like this. You would just do ST radio and just save it. And this thing, you notice that the moment you save, this immediately picked it up and put it here. But we don't want to put it here, so I'll just go back to putting it on the sidebar. Now, what else do I need? I need this radio, select a value of the correlation. How do I do that? Let's try that. First of all, we need a message, right? This message, you notice that it has a row here. So surely we need to create, this is a message for the user. So let me just say, this is a message for the user so let me just say this puts a this puts a radio button now this create helps the user understand the purpose of the slider. Now let's do that. How would we do that? We can say message is equal to, now remember, what is the LaTeX way of doing it? You do like this, right? Text and you can do a text and let's see what happens select a value of the correlation select a value of the correlation and then we want uh let's say a bit of a math uh symbol here because correlations are typically written as a row. Now, what happened? I created this text. Let me just decrease the font a little bit. Here it is. So far, so good. Now, let's see what happens if I do. I take this message. Whenever you want to put a text which is formatted, you have to be a bit explicit. You have to say that this is a latex text. Did you guys notice this change? Yes. Anyone here? Yes. Anyone here? Yes. And we noticed that this is bad. Row and correlation are touching. So let's go add a bit of space here. So now we add a bit of space. And now comes a thing. What will happen? The user will pick a correlation and say, show me how does this correlation look? So we have two tasks to do. We need to create data that exactly matches that correlation. And this is a little bit complex. I'll just give you the code. You can do that. We need to first create the data and part two, we need to visualize it. Isn't it? So imagine that you have a data frame. So I'll just write it down. We need two functions, let's say. One will return a data frame, let's say. It will return dev and something like create a data. Right? What will it take? It will take row as a argument. Now, by the way, you cannot do what you can do in Jupyter Notebook. This doesn't do, Sublime Text, at least the version that I have, doesn't support the Greek letters directly. So you have to write it. So suppose you take rho, right, which is a float right and we can say we can give it a default value. Let's give it a default value of what would you like to give it 0.0 right you give it a 0.0 and then what should it produce? It should produce a pandas data. Let's produce a pandas data frame, a very basic one. Import pandas as pd. So let's go do the pandas import and we say that it will produce a pandas data frame. It will produce a pandas data frame now what is this thing called why am i doing i do i need to say all of that in the function i don't need to say all of that right so um but it's a good idea to do to do that and to give comments this method generates a data method, generate data, congruent. You can write whatever you want, congruent, specific, specific, correlation, correlation, row, correlation, row. Now, how would we do that? This is a little bit tricky, so I didn't want you to go into the spend time. I'm going to just give you the code. So first of all, we will take rho as argument, and we will create the zero- values so on and so forth right um i will just give you the code and i'll explain what i'm trying to do so when you create the data so actually why do that are you guys so far here with me yes so suppose we want to do that first what do we want to do to create data we need to put a slider and ask the user to give us the value right so let us remove the row let's take row from the uh we could do it outside inside doesn't matter uh where should we do it okay i don't know it's just a minor minor choice so we'll do it here suppose we do row is now what do we do it? Okay, I don't know. It's just a minor choice, so we'll do it here. Suppose we do row is, now what do we do? We need a control, right? That control would be slider. We need a slider, right? In which, we don't want to give it a title because we gave a nice LaTeX title, formatted title. So the first argument is title. We can leave it empty. Let it not have yet another title. We need to give it a min value and a max value. What is the minimum value that correlation can take? Rho can take? Anyone? Minus one. Minus one, right? So, but that was Kaya, you speaking up, isn't it? Yeah, sorry. but that was kyle you speaking up isn't it yeah sorry okay so max value would be of course one all right and what is the default value that we wanted to have let's uh do that um what is the default value that you would like to see it to have? Guys, what is the default value that you would like it to have? Doesn't matter. You can start with zero. You can start with anything. Doesn't matter. I am just writing this code, guys. What is the next value? I'm just breaking it up into lines because I like to put it out in lines. Oh, it went there. That's okay. This. And well, my formatting is off. I usually do it in PyCharm, which takes care of these things. But for what it is worth, we're doing it in an editor because many of you may not have. So let's, value here is the default value, right? So you can say, let's start with zero. Zero is pretty good value. Why start with any arbitrary values? Symmetrically, it's in the center. We do that. And then when you slide, how smoothly do you want the values to change? Like when the user slides the slider, how carefully do you want the values to slide? It matters, right? So, well, okay, I'll forget the formatting part for now. Let's say, let's say that 0.01 is a pretty good slider would you agree yeah i was going to say 0.1 or 0.01 so you do that you are going to increase the value by just this now let's see we are feeling pretty good about ourselves let's see what happens if all we do is after this definition, and obviously we'll move this definition into another file because we don. Let's see what happens. Now what we want to do is, we want to just call create data and see if we screwed up. Ah, here is a lovely slider, right? And the slider moves back and forth. So far so good. But what are we doing with this value? Let's go do something with this value. but what are we doing with this value? Let's go do something with this value. What happens is that this correlation, now it gets into a little bit of a NumPy stuff. As you know, we need to create data. So let's go and get a NumPy as part of our story. Import NumPy as mp. Once you import numpy, what do we do? We say, all right, let's go in. This bit of magic. So please import numpy. And this bit, I will just give it to you. What first you do is you say, what is the mean of this data? So obviously, when you're talking about correlation, what is the mean when you're looking at the correlation in the data? What is the mean that you want to do it with while visualizing it? You want to set the mean to the center to zero, isn't it? So let's try and center the data, create a NumPy array, right? A simple one-dimensional array with zeros zero and zero so x is zero y zero is the central part um is the center right that's where the mu is if you're looking at bell curves this is the center of the bell curve right now remember guys we're creating a bell curve a two-dimensional bell curve it makes sense we will um do it look at this if i do this let's go to zero right do you notice that if you were to just focus on one dimension do you notice that the frequency does look like the plot marginal plots would be a bell curve we leave that. Now, what about sigma? Sigma is what? The covariance matrix? Right? Do you remember your data science, the mu and sigma that defines the bell curve? Anyway, you might have forgotten this. So sigma is now, this is a matrix. It's a 2 by 2 matrix because we are looking at two dimensions. The way the 2 by 2 matrix would be, actually, let me put it in the covariance matrix. Let me put it in common. Sigma looks like this. One, the principal diagonal, which is the correlation of the data with itself, x with itself and y with itself, it will be 1 because this data is normalized data, because we are deliberately creating a normalized covariance matrix. And what is the off diagonal? It will be the row row that we just asked the user to produce right so this is our matrix so how do we produce this matrix let's do that np dot array of course we are going to make it into a two-dimensional matrix right inside it is the first row which is one row and the second row which is row one now this is a bit of mathematics just assume that it is true in case it's from you are not familiar with our sessions they have forgotten our sessions with that so now we create data. Let's go create the data. How do we do that? We say create data. Data is equal to, and obviously we'll use the numpy library to generate multivariate. This you may not know that this library has the ability to produce data has the ability to produce data specific to a Gaussian, multidimensional Gaussian, right? So long as you give it the mu and sigma. So mu we give, sigma also we give. And how many data points we need? Let's take 1,000. Size is equal to 1000. So now generate the data. Let me put a comment here. Data. Oh, there is an indentation error somewhere. Where is the... It looks like mu or mu. The mu or mu. It looks like you have nu sigma size equal to mu. Oh, yes, you're right. I should say mu. Right. So I still do have an indentation error somewhere. Mu is equal to, what is the indentation error? Because I'm not using the NP array. I think, oh, oops. Right. Somewhere or the other, I might have screwed up my indentation. Remember, in Python, indentation matters quite a bit. What did I do to screw it up? Mu is NP array. So what does it say? An indent does not match any outer indentation level. So this starts with this. It ends with this level so this starts with this it ends with this it starts with this it ends with this and ping me the function i will uh remove it go again you can copy the function bring it to me message it to me and then i will remove that and spring it back yes it may be worth doing it your pie charm that's right so uh let me copy it and do that or you know what i have a working so let me try my luck again and see i'll just copy it from uh let me redo the inventory i completed it and so if you give space in between do you need to give space between comma and the other yeah yeah space np array the comma and space it seems to have solved itself all right it seems to have i'll just make sure that rerun is produces the value oh it still produces a indentation indentation so you are placing space everywhere after comma but in sigma equal to np array you don't have you did not put space one comma row yes that should not no no do one thing delete line number 40. delete line number 40. okay all right Let me try and bring in, okay, let me try this. Once again, create zero center. Yeah, it's very hard to be real, very, very hard to code without. Oh, the problem may be here rather than somewhere else. Yeah, the problem is not with that, but most likely this. indentation, unindent does not match. All right, I'll just try my luck again. Data, this quarter. Since I have it guys, so I will, what I'll do is I, that little bit is the problem. This there, there's mu, Sigma, row slider, unindent does not match an outer indentation, row. So now we have a problem in this line. Okay, let's try to... I'm beginning to see that it's almost impossible to code outside white jump. All right, it is there. Some hidden white space issue it has gotten resolved right so guys what do we have we have data all right this data let us convert it's a matrix right it will generate lots of xy values and thousand rows and two columns right if for example we just do print print or data dot shape let's see what happens it will run it should run and print it somewhere uh st dot okay st dot nothing write a data dot shape ah which is thousand rows and two columns did we expect it guys thousand rows why because we said thousand here and two columns the x and y column so far so good right and now let's convert this data into a data frame because we are so used to and we like pandas so much so let's go and create a data frame that is easy if data frame is equal to pd dot data do we remember the syntax all we have to do is say data is equal to and we give it a map right map what is the map saying x is at this moment in column form. And y is data.transpose . And why did we annotate? Because we are computing the delta. What is the difference between, see when you compute the row do you remember that anyway take it as a fact the computation of the row requires x minus y delta and you'll square the delta right you'll sort of multiply the delta as in so much but at this particular moment i will just am i even using this okay yes we're, delta I'm going to use to color it. Like how different is X from Y? It is not needed for correlation, but just humanly, we'll create a column. And you'll see why, you can just add aesthetics to the data. So you could say absolute value of data.t, of our data dot t zero, which is x minus dot t y. And you could do it the other way around. It doesn't matter. It doesn't matter whether it is x minus y or y minus x. This delta is just for aesthetic purposes to make our plot so beautiful. Do you notice that here I've color coded the plots? The reason I wanted to do it is, I wanted the far off points to stand out from the nearby points. That's all it takes, and there's nothing. So now we have the data, but what should we do? Timing something? Very good. Oh, okay. Return data frame. We're going to return data frame. So let's put a comment here, say we are creating a data frame. And let's see what happens. Suppose our code here, before it returned it, it said sp.avide df. What do you think would happen? Ah, do you notice how beautiful streamlet is? If inside the function we say st.write, do you see that the data frame got written here? At least some rows, all the rows of the data frame? Not in a very pretty way, but good enough way. But we don't want to write this data frame because it's not the code but at least it's a confirmation that we are able to produce the data so there we go we now have created the data what do we do next we need to visualize it right so let me just say dev using matplotlib, matplotlib, rather verbose function, but for whatever it is word, we will give it a data frame. It will take a data frame and it will return you nothing. This is by the way, this is called type hinting in Python. And as you know, I believe you should always do that whenever you're writing more formal code. So visualize the plot, the data using matplotlib. So we visualize it, or we can say scatterplot, or give it whatever function name that you want to do. So let's do that. Let's go and say visualize. Of course, we haven't implemented visualize. We'll do the data frame, and we'll see a return df. Yeah, here it is, d haven't implemented visualize. We'll do the data frame and we'll see a return DF. Yeah, here it is, DF is equal to. Better, but we haven't visualized it. So we need to write code to start visualizing it. How would we do that? If you remember, you can go to access. So we need to create a figure. So you could have just said a plt.figure, but for reasons that I will explain to you later. And towards the end, I had said that it's always good to work with axes rather than the figure directly or the plot directly. It follows a principle principle which is called, if you know exactly what you're working with, go down to that in visualization. In Python itself, the rule is, the Pepe rule that says is, for Python, explicit is better than implicit. So when you do plt.scatter, you're doing implicit because plt dot scatter is going down to the actual axes you know those elements of the graph and calling scatter on that so now we'll be a little bit more explicit so far so good guys let's do that let's see what happens are we here a x dot scatter what What is our x-axis? Do we remember x is equal to? Well, this data frame.x would do. y here is equal to data from dot y. And remember, guys, that we don't need to do this we could have just uh implicit values are the first and the second arguments are x and y so we have done that let's see what happens plt not define ah you didn't have import so why is this error because because we forgot to do import what did we forget to do anyone matplot as um yeah and so let's do that and then we still at least the error message went away uh but uh what have we ended up with? We have a figure, we have this axis. This is important. Unlike Jupyter, you must tell Streamlit, that okay, now add it to this page. And so you have to say, pi plot the figure. We got our thing. When we look at it, it doesn't look... Look at the beauty here and this. So we seem to have some bit of work left to do, isn't it? How do we make this nice, lovely circles instead of this big, ugly solid dots? Anyone of you remember this? Probably a chain. Opaque. The alpha transparency. Opaque to the alpha, exactly. So let's decrease the alpha a little bit and see if that helps. Ah, that's better, isn't it? But we noticed that the axis would be better if it went through the center rather than on the side would you agree so let's look at the bottom and the left axis where would we want to bring them the center and through this so let's do that the the trick to that is those axes are called splines you know these lines these are called bottom spline left spline right spline and top spline so first let's get rid of the tops top and the right splines we don't need them right so let's let's try another we say axis dot splines right and we can give it an array. What is the array we give? We say, write top splines. And we just say, set visible. This may be, this just happens to be the way matplotlib function works. So let's take out those things. Oops, what did we write? And set visible says a splines so not splines sorry spines we remove the spines right and when we do remove the spines now why is it unhappy right tab keyword right and tab top five innings and type back what is it saying it is saying so right and top should be single quotes like quotes right quotes comma yes they are strings i should not you can't make it here absolutely right so now it's beginning to well that's some improvement isn't it now what do i do it's still not there these axes would look better in the center isn't it so let's move it to the center axe spines uh let's see and once again let me not forget to get my uh codes right so let me just get this in this format and then I'll say I left and the left one we need to bring to the center and the bottom one we need to bring to the center isn't it so I would say the set position and it is a word ah we seem to have gotten there, isn't it? So this is what we wanted. This is what we got. But let's move around and see if it works. Does it seem to work guys? Yes. Right. And so we have an interactive dashboard in which this is working. It's very basic. I deliberately took matplotlib because we could have, we achieved the entire thing in, well, give or take, five lines, right? What about the fact that I also want to do it in Altair? Right? Do you notice that here we have Altair, like, well, Altair doesn't do anything at this moment. It's the same visualization. That's cheating. Whereas if we go here, look at this. Altair, here we have Altair. So let's go and implement a radio button just to show that we can do radio buttons. What do we do? We have, where did we put the radio button at the top sidebar radio. Let's let's store the value plotter or chart, whichever library we use. We will do that so we can say we need a function now visualize. This is the visualization with and so these are functions, by the way, we should move it to a separate file and I will just put a. Just for neatness for the time being i'll just box it in for the time being that we need three functions, one is to create data you don't have to you can you could have done the whole thing without needing functions but functions are neat. what functions are need. So we say here, just as we have visualize using matplotlib, let's create visualize using Altair, right? Df, data. Now Altair code, we didn't, I mean, it's a little bit harder, but let's try a luck and see what happens. So remember that Altair has a thinking Raja Ayyanar?l What do we do next? The next thing we do is we say- As the parameter, I think we've given df.dataframe, should be df. Yes, my goodness. Oh yeah, thank you, thank you. df colon pd, thank you. Right, that's much better, isn't it? Much better. So in other words, we are passing it a data frame. Then we can say, all right. And by the way way when you do it in code you don't have to put all these backslashes and so on and so forth i'm doing it because we're doing it in a text editor realizing that many of you by the way why do we are active guys go install either use vs code of pycharm pycharm is generally friendlier a lot of support, go install PyCharm Community Edition, it's free. And it's a de facto standard. And I didn't bring it in because I didn't want to create a cognitive overload by bringing in one whole topic and discussing it and using up the proper... So remember, how did we do scatterplots? Like this, right? Mark circle, right? That's better. Mark circle. Let's see what happens. Diff visualization. So it is still here, but now we have done something and we are going to keep on doing this thing, but let's do this. The way to do an Altair chart is literally, this is the way a Streamlit wants you to give. It wants you to give you the chart. And then one of the things is, so we'll leave it as that. And let's see what happens. Now what happens is we are creating the data. You're not going to visualize it. You're based on the plot element but you have put a radio button here wait based on the radio button value you are going to do this visualize matplotlib if plotter is equal to matplotlib else what do you want to do visualize altair right so let's try a look ah altair missing one required argument so we did a coding error let's improve upon that now what happens oh altair is not defined let's go to the top and import it import and then let's try a lot now what happens let's see chart is not defined so where did the chart come from let's go and see alt dot alt dot uh chart should is defined oh did my libraries get into a twist i think my libraries have gotten into a twist now just saying this is me you have to specify x and y no no sorry. It's my fault here. See? There, better. Well, would you all agree that this Altaire scatterplot so far looks rather unimpressive? A tiny dot. What did we miss in this dot? Well, we missed quite a few things. First of all, we see one little circle. Let's make this circle a little bit bigger for what it is worth. And again, in alpha is not called, Altair doesn't use the word alpha, but it uses this. And, ah, a dot became bigger. Opacity is done. but we might want to see more dots, not just one circle. And if you remember what we have to do is encode, we need to give what the x-axis is and what the y-axis is. Isn't it guys? So we have to say x is equal to x in this data set y is equal to y what are the x and y axis for circles to be drawn and we surely have screwed something up beginning to get there right so far so good guys but let's use color now let's try a liquid colors so we say all right that part is good maybe are goodish let's try to do a little bit better and let's try to do color color is and for color you have to specify two things color is being picked from which column of your data frame the data frame is x y and delta so so then you have to and this is again the syntax of altair you have to give the delta we are using delta as the thing and in this scale the color goes from what to what just saying color is not enough you can see it let's see me do this what does it see it's terrible colors isn't it it's using blue white deep blue means a blue means a strong correlation oh i don't know what even these numbers mean let's do oh sorry this is the distance distance between x and y when the distance is significant then you have delta is significant. You have blue color, if it is close to zero, it's white. Terrible. So we need to give it a what? How do you decide colors in Python? What's the best way to specify colors? A color map. And so we will give it a color map. I will just give you the syntax. This is a, you might have forgotten the syntax for this. Pick a color map, guys. Should I pick where it is? The most popular color map. Let's try a luck with this and see what happens. Ah, by the way, you don't like so, by the way, guys, are you able to reach this far or should I wait? So should I wait? Anyone. Yeah, I'm still having issues with the previous matplotlib one. And I'm kind of baffled. So, oh, I wish you had stopped me there. We would have waited. See, look at the matplotlib that I have here. But for now, should I just give you the code on Slack? Sure, because I think it's like a space error or something like that. Yeah, you have to do it. I can't see it. It's like, actually, you have to do it in a profile. You're doing it in a notebook. Using it in a, I'm using the Atom editor. Sorry, I gave the code without putting it in the formatted block yeah this is a this code i should delete and delete the message okay look at this you can copy the server and so so so far guys do you see how we are gradually constructing we gave it a color this look this looks but you know what at this moment isn't it a bit too small we need to expand it out a little bit that would be the next thing to do would you agree this particular thing color it would be worth expanding out a little bit no So let's do that. Let's give it a bit of a property. Remember that those are properties of a graph and there are lots of key values. Let's say height is equal to, I'll take a value 600. Height became 600, right? But it's still rather odd. So what we can do, what can we do? We can say, whenever we create this container, we can say that, you know, expand out, don't waste horizontal space. And this is a stream-led thing. We can give this argument. container, we can say that, you know, expand out, don't waste horizontal space. And there is a this, this is a streamlit thing, you can give this argument, you wouldn't know about it. So you can just go and give this argument that is equal to true. Let's see what happens now. Ah, it expanded out, looking better. Would you agree this looks a little bit better guys? It's beginning to take shape now. And by the way, you don't have to take very days. Let's try something else. Let's try jet. Oh, this one doesn't know jet. Let's try plasma. Yeah. So we can try different color maps. And remember, the reason we try different color maps. And remember, the reason we try different color maps is it is never a good idea to handpick colors of your own. There are people with disabilities, people with... And there are a lot of perceptual consideration on which colors are easy to distinguish from others. So you should pick a standardized color map because a lot of research goes in creating those color maps. So anyway, I'll go back to where it is because we are trying to reproduce the graph at the bottom there. Now, what is missing guys? What remains? When you compare the top and the bottom, let's see if it's a response, if it is- Access. Right, yeah. Ah, right, the center axis here, right? When you compare the top and the bottom, let's see if it's a response, if it is- Axis. Yeah. Ah, right, the center axis here, right? It is sort of missing. Let's go and add that. We have this. What do we do? We need to add a line in the center, right? A couple of line, vertical line and a horizontal line. So let's do that. We say, well, let's create an x line is equal to, and again, alt chart. So remember, it is a chart. But at this moment, that line should represent what data? It should represent the data nothing, basically, literally nothing. So what I will do is you just fake a data frame, right? We are going to just fake a data frame. Here's my way of doing it. It's a hack way, it's not a great way because a chart was expecting a data frame. I literally created a data frame, which has nothing in it. I'm saying it has only one column and that column has only one value y is equal to zero. So it will be plotted here, right? That is that. And now it doesn't know that it is a line yet. We have to tell it that it's a line. So we have to tell it that it is encode as uh and co so it is a it's first of all you have to mark mark it so mark as a what a ruler a line so we mark it as a line and this you wouldn't know unless you become familiar with the opacity and again let's not okay let me just see size two and see what happens oh well nothing happened could you guess why nothing happened we are plotting only the chart we are not plotting the x line so let's go and plot the x line also oops something waiting shape something terrible happened here uh x Something terrible happened here. X, Y, something. Oh, yeah. Dot, mark, size. Somewhere I have missed the indentation. Actually, so far, let me just put it in one place. Now, this goes to this chart. Now, let's see what will happen. Cannot read properties of undefined reading shape. Let's look at the error. Chung, Jers, array, et cetera, et cetera. What could possibly be causing it? So far so good. X line. Let me just be explicit. I will be explicit here. Is equal to C plus X line. Let's see. And here, let me just say, but it's not, somewhere again is the indentation issue that is bothering me. So I will do one thing, guys. Encode. Oh, yeah, I forgot something. Encode. I didn't say how to encode it. Remember, you need to mark and you need to tell the encoding. You have to say y is equal to y. You need to tell it. I think that's what I was missing. I need to do both mark and encode. Does that seem to be a little bit better? Let's see. Read on. No, it doesn't. So let me just bring in, because I tested the sound before doing it. So again, there's some indentation, something weirdness with the indentation when I'm doing it at this place. weirdness with the indentation when I'm doing it at this place. Saved. And I will put, actually I'll put- There are too many parentheses on the X line, on the right parentheses. This one? On the, yeah, on the X line equal alt dot chart. Yeah, one, two. on the yeah on the x line equal alt art chart yeah one two there's three right parentheses should there only be two or am i also seeing a curly brace no one two no this looks okay anyway okay that's a curly brace yeah okay right it's a curly bit something so what what sorry what i will do is i will because this is i've done it in pie charm uh all of these things i will just uh part of copy it over let's try it okay now we're just complaining about something it is complaining about something. It's complaining all chart Y line. X line, unindent does not match an outer indentation. That's the problem we have already. Let me remove all indentations, save it, and then hit tab. And hopefully, cannot read properties of undefined chart data frame. Undefined. use container.prop height to 600. So anyway, let me just remove this part and see whether it likes it or not. So guys, for the next session, remember just get yourself into the pie charm. Take this as an exercise. Get yourself familiar with the pie charm stuff. I will, for the time being, try my luck and give you this. Let's try our luck here and visualize. Cannot read properties of undefined shape, undefined reading shape at blah, blah. It's hard to tell. And this is one of the problems with Altair because the errors are in JavaScript, it becomes a little, because we don't get a stack trace very easily. So something is still off, but I don't know what it is off. It's some minor indentation error, white space error, this being Python. The code is correct, but something is off somewhere, guys. So well, we don't know where it is, but it is there. Let's try to remove. I will take this much out and go back and see if we can reproduce what we have now. df else visualize df cannot read properties of undefined reading my feeling is that it is not so much it is clear cache sometimes rerun What we will do is I'm just going to stop it and restart. So stopping and restart. Matplotlib itself has started failing now. Oh, behold. So something in this function is not quite good. So what we will do is let me remove this entire function for now and see what happens. And now we don't have this function visualize else visualize. Close. ifplot is equal to visualize ifplot. All right. Always read. We have screwed something up here. I can't tell what we screwed up here. So let me try this bring import def and define create okay let me do one thing i'll bring this code in here and show you because this is working uh i don't know which indentation space is getting us out so create data we have altair chart we have to draw the x and y lines and bring it in okay that's all it is that was the last step missing but somewhere an extra space and we'll see it when we take it into pi by charm we'll see where it is and this part we understand guys this is simple so far so good guys so i'm going to take this and let's try to bring it in here and see if our luck is good. We need two functions. Yes, we do need two functions. Visualize. If anybody can spot the obvious error, please let me know. Some minor indentation error is ruining us. I don't believe it's a problem with code. It's something with streamlit clear cache deploy this. Now something has happened. Let me do one thing. Soaping. Run until 2.5. Visualize matplotlib is not defined. Oh yeah, we have to change the name of this. matplotlib chart. No, cancel. Create visualize matplotlib. create visualize my plot lab and oh what is happening here save save and give me a moment i have this is an environmental issue not a code issue there we go so it was some a caching issue that was bothering us so let's go and do this visualize alt here visualize alt here in this space and those of you who are doing it is there anyone who is doing it in pie chart i'm doing it yeah so did you spot the error? Is it working for you? It should be working for you. The code is correct. I'm getting this encoding data types on transpose problem, I think. I don't know how you're not getting it. Right. So when I do it to this, it is still the same thing. But what I will do um plotter is equal to what is the plotter equal to plotter equal to matplotlib else visual lies alter data frame all right let's try a luck now data frame. Alright. Let's try a luck now. And now this should have if plot ter if plot ter is equal to mat plot lib else visualize alter. Did we have the visualize altair in place? Yes it is here. And let's rerun. We haven't set to rerun. Settings, always rerun. Rerun and save. So we did a save here. Let's go here. And we need to explicitly rerun. Oh, we are doing intro. Hang on, hang on. streamlet run intro.py There we go. Let's rerun. There we go. So it wasn't a code issue. It was just some caching issue, environmental caching issue. So we are there. Do you see? We moved the center of the axis to 0, 0. And we are now playing with this. As we go here, we can make it. I wonder what was the environment issue, but it's hard to tell in a visual, I mean, in a text editor, you have to look at it. So guys, let's review what we did. First of all, you notice that to create a dashboard, we created it in one and now what should we have done these things should go into a separate file isn't it uh they should go into a separate file uh separate script the real code for this is assuming these libraries exist it's very easy you have the imports etc you just have a sidebar for plotter. Do you see the plotter here? It picks which plotter to take. We have a message, select the correlation, which is here. What about this part? What is this part doing, this string? It is creating this, right? This here is coming from this in the code in the script. After that, we have three functions to generate data, visualize using Altair or visualize using matplotlib. We create the data and then this code I hope is simple. Let me now maximize this code. Yeah. Does it look simple? Visualize using the matplotlib if plotter is matplotlib. Else visualize it. Else I'll tear. Give us just a moment to look at the full code to make sure we're not missing anything. Yes. And of course, this code is, I'll post it right on Slack so you guys can play with it. In fact, not post it if. Let me do so right now. So you have it. it if let me do so right now so you have it how about the idea so this is the full code guys you can run it as it is clean it out of course now one thing in jupiter which is quite forgiving and so forth we can do a lot right of mischief with white spaces and so forth. And then we click on the PEP8 and then on this code cleaner and it cleans the code. Likewise, when you use ID like PyCharm or VS Code or whatever it is that you use, it will clean the code for you. It'll make sure that all the spaces are right. When you do it in a text editor, you're completely in trouble. Now, Sublime Text, I don't use it for doing code. I instead use PyCharm. We have a simple, when you create a PyCharm project, it will helpfully create a very basic skeleton for you, which you can then just run if you if you so wish you could just click here and save that right and when you run it will say hi pi chart which is what the sentence here is we're not going to do that we are instead now going to replace this thing with a different file we are going to let's just actually let me just create another file intro we created a file called intro so python file and we are going to do that again there we go and then what we do everything that we created here see what happens when we do it through PyCharm. Paste. Yeah. So this becomes code. Yeah. And it's going about it. And we have to do a few things. It's still indexing it and so on and so forth. But in this code, if you create indentation errors, see what happens if you do it like this. It will tell you that there are problems in your code. When you try to run this code,, the way to run this would be Okay, I will skip that for the timing because I have to set up the streamlit to pick it up and give the run command and so on and so forth. But if you screw up the indentation, it becomes more easily obvious because things are not aligned. And there are settings that will help you set up. All the white spaces become visible. I don't know where it is. I have to keep remembering it because this is a new environment on this new machine. Somewhere in all my environments, I do and set up the white spaces to show it is a setting somewhere okay we'll figure it out quick switch schemes and so forth anyway on this machine i haven't done the setup but usually what i do is when i do python i tend to be a little paranoid so i'll set up all the white spaces to show because white space is indentation and when it shows you easily catch mistakes very very quickly okay so that is that that's what that's that's that so this code you can run once again go into that directory run a streamlit run and it will be there any questions guys was it useful I don't know was this whole session useful um will you be able to paste the code in full because i i think there's like little small things i missed here and there no no look into the slack channel you'll see the whole code is pasted has it been okay i think i can't find even on comprehensive intro to my data science I think I can't find. Oh, my God. Even on comprehensive intro to data science. The enter button. I hit enter now. Are you seeing the code? Yes. Yeah. Just copy the code into your notebook and run it and make sure it runs. Let's end the session verifying that it runs for all of you. So guys, this was a very elementary exercise. We did have hiccups with our editor, figuring out where the white space and indentation went off because we're doing it in the editor. But I hope you agree that if we systematically build the code as we did, it was a pretty straightforward code. And what we have ended up creating is a dashboard, which for an illustrative purpose, it gets the job done. It helps explain what correlation is. In fact, if you remember, I used this to do that. Any questions? Oh, I'm running the code. So let you know unhashable type list. type list. Weird. It ran for me. It ran fine for you. Okay, good. The Altair looks good. Altair looks good. My plotlib is even simpler. I wanted one simple plot and one more common plot. 77. seven All right, guys. So just verify that all of you can run and then we'll end the session. Kate, are you succeeding? The Altair looks fine. But the Matplotlib says on line 77, let's see, the type error on hashable type list. Strange. That's for line 39. That's a very simple statement. That's a very elementary 9 plotlet statement, 77. Just hand type it in, in case there's some, in slack transfer something got lost it's working that's working huh okay good yeah anybody else it's not working for abhishek it's working for you and uh kate is a bit of a type did it in i copied into a new file intro 2.pi and i'm doing streamlit run on intro 2.pi double check that's the case. Yes. Karan, it works for you? Yes, it works for me. Okay, Sachin. I wish it works for you. Vishal? Vishal, it worked for you? Or you didn't try? No, sir. It didn't work for me. I need to import some of the libraries. Struggling to do that. Okay. You'll get it. Actually, today's was supposed to be one of the more basic labs. So you'll get the... So guys, the point is that Streamlit is extremely, at this moment, popular within the data science community. Because see, everything everything if you look at the source you react you'll realize that there's react behind it the react code behind it which is a leading JavaScript library for doing websites and view source why is this so slow paid service if you look at well it's terribly hard to look at this code because they have compacted it to one line, but somewhere in there, you'll realize that it is complete nonsense that has made it in the code. You can't make out anything, I apologize, but it is based on React and what it does is it is far more efficient than writing React code. That's the point. Anytime you wish to, you can always go create new React components and add it, integrate it into the stream. And you see a foundation and it's very popular. Go ahead. Question. Go ahead. Yeah. So it worked. And can I share my screen? Yes, yes. Do? Go ahead. Yeah, so it worked. And can I share my screen? Yes, yes, do that. Okay. So you had this piece of code right over here. Are you able to see my intelligence? I am able to see it. Okay. So here you had, earlier you had x equal to x. It doesn't matter and so it gave me the encoding thing which is the transpose of the wide versus these columns so when we were typing it was x equal to x versus the one that what you have is all dot x x like this we haven't done anything in there you can just set x is equal to x it should work i think it should there, you can just set access to access should work. I. It should complain, but you can try that. The error that like folks door was like related to this encoding things or the try kind of okay so. Maybe I was facing the area that I realized I should do all. The yeah that's that's what I was thinking it might have been that you may have uh that yes yeah see here it said uh has no error uh value error see here yeah this was the error i was getting and it said that this wide versus does not match any of the column yeah and then he talks about basically this wide thing says then how wide versus uh wide versus long data okay i got it i got it this is that what you have done over there that's what i was asking see the thing is that they remember our talk on tidy data right right long format that is that is so this alt dot x x is is that what what it is doing the all dot capital x that what you're doing yeah we have all that x right it is a x axis as an object i see to give it in quotes x right it will interpret it properly i see okay okay okay that makes sense okay perfect thanks they're very useful i mean you showed it like how easy it is to i don't know how many people actually code in react and things like that this is a lot of code to just get like and most of the time we just need these basic things from java right we're not doing javascript right that is wrong see what happens is once you become fluent with all this, you can create like dashboards and these documents rapidly. React, it's a project, you need to, you know, have a process, have to do the whole deployment, and you need to run a server. Right. So does it mean that all that shiny r and all is gone no no the r world still has shiny eyes this is the world so think of it what shiny r is to r trimmed it is to python okay that's all sorry guys okay cool thank you actually um Kyle, just in the interest of being careful. Yes. I think it's all right. Make sure that you work with Joel and remove that bit of video. Sure. Definitely have it removed. Unless you have verified, don't let him upload it. Okay. You have to respect people's IP. Good guys. Bye then.