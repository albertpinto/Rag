 We learned about four libraries. We learned about Matplotlib, we learned about Altair, we learned about Plotly, and we learned about C1. Matplotlib is foundational. C1 layers upon it with some quite rich functionality. Then we have the top, the bottom. And then we have plotly, which is based upon D3, gives some interesting interactive functionality. Then we have Altair, which is based on Vega-Lite, which itself has been layered upon D3 visualizations. So that's quite a rich library, I mean set of visualizations. The world of visualization is very, very rich, and I thought I would start today with one particular graph, which is worth talking about. If you look at the landscape, and I'll just go in and make this graph bigger. See there are two, when you look at it as a data scientist, and I'm here excluding R, if you just look at the Python world, at the core of the Python world is matplotlib. Things that are related to matplotlib is, Altia is indirectly related to matplotlib, but not, I mean, it sort of works well with it, but it's sort of separated from it. It is based on Vega-Lite, which is based on Vega, Raja Ayyanar?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam what it does, so I'll just give you a general sense. What it does is it says, can you just use matplotlib itself, but make it interactive by changing the underlying layer and bringing in, making it use D3. So implicit through all of this is this big sort of a gorilla in the data visualization space, which is D3.js in the plotting and graphing plots and so forth, which is really very well done. It is, as I said, the grammar of graphics writ large. So there has been a lot of effort, as you can see, within D3, you can find different links going up to Mac.let. I'm trying to do that. So this is one set of journey. Then when it comes to graph visualization, network visualization, you find that there is NetworkX. NetworkX, which is a core library to deal with networks at the algorithmic layer to find communities or degree i mean do all sorts of interesting stuff with our networks right or graphs the visualization support in network x is should we say work in progress it works but it's not lightly fast and the layout engine one of the problems that happens is that you deal with a lot of nodes which are connected to each other through edges and they're non-planar and so forth. Finding a good layout becomes itself a subfield of work. How do you find the best layout of those nodes on a two-dimensional surface or two dimension two dimensions and one of the layout that has been there especially in the linux world is called graph base now i believe it's there for all operating systems graph ways so network x sometimes uses graph this for its layout then you also have graph tools. Graph tools, and there's many more that has been missed. For example, iGraph has been missed and so on and so forth. So there are many tools in this space for network visualization. Today, we will be playing with network X and we will be playing with a little bit of an interactive network visualization called PyViz. Don't confuse it with PyVis, it would be P-Y-V-I-S. That is there. And then there are many, like Seaborn is something we are taking very seriously. The ggplot of art, those of you who know ggplot, that has been ported over almost as is into the world of python and it is called plotman then if you are doing machine learning some of you may be familiar when we did linear regression and all of these things clustering this that when you build a model how do you visualize the model itself not the data but but the model. So for model visualization, there are two pretty good libraries. One of them is yellow brick. The other one of them is scikit-plot. We used, if there's a few, if you remember, if you're taking other workshops here, you would recall that we have used yellow brick extensively. We haven't used scikit-plot as much much but it also can be used okay so and i won't talk about all of the office bundles we all know si von bior we can talk a lot about many many libraries that are there in this space uh color view we just did one example now look at the world of the in the javascript world obviously there are many libraries which are foundational and that are related to this big line to D3. Other than that, there are a few pretty important libraries that people have put on top of it. The first thing you notice is Plotly. Plotly in in Python. What it does is it sits upon JavaScript and D3 uses underneath. It generates JavaScript code that creates D3 code and so on and so forth. At these book a and there are some other libraries we tried. I don't know which I didn't do that. There are a few quite a few other libraries. And I'll talk a little bit about a pi 3gs what is pi 3gs if you want to do three-dimensional visualization especially with shadings and color and camera locations and so forth those of you who are familiar with computer graphics a 3js is your friend it uses the full power of OpenGL and WebGL. Now there is an effort to make it accessible from the Python world. So py3.js is your friend there. Then there is something called Leaflet. Leaflet is for map visualization. So there is Folium. I don't see it mentioned here. There's Folium and then there's ipyleaflets and so forth. So there are many such libraries, I won't go through all of them. But then if you look at the granddaddy of all of them, in the world of data and computer graphics, to the extent, like if you go deeper into visualization, soon you find yourself in the territory of computer graphics for example when you do uh games and animations related to computer graphics and so forth and you're using full graphic engines like you must have heard of video cards claiming that they have support for a physics engine and whatnot and a scene rendering extremely fast shaders and whatnot so that's the world that's going pretty deep into the into that space and we're getting a little bit far from the pure data visualization you can actually start from opengl itself and visualize it but it's almost like for most common situations you don't want to do it because it's almost like starting with first building the spare parts assembling them on a bicycle and then going for a ride right becomes a bit of an overkill but sometimes you have to go down and you have to make it possible so around it you can see again a whole slew of libraries that leverage opengl directly yes gl directly yes oh that is right zoom gives a pencil support you are able to see like here I think it's not for them. On the monitor you can't see it. Monitor. Okay. Okay, I'll try to make it bigger. Is that better now the mouse more visible? So this is it. Okay, yeah, that would be a good thing. This is it. Zoom to make . Okay, yeah, that would be a good thing. Actually, I would like to learn that trick also. All right, guys, so for now, this is the landscape. It's a bewildering landscape of lots of libraries. One of the first things that happens is when people come to data visualization in Python, they just get lost, what should we do and the reaction often is just to stick with matplotlib which is very powerful now you have to find a middle ground based on what you're doing so we we we learned four libraries of course ponders we know we learned matplotlib seaborn uh we learned plotly and we learned alte, which implicitly sits upon Makers. Now for networks today, we will learn one more library, NetworkX, and for maps, we'll learn about a library. We'll do maps using a couple of libraries, Plotly and Folium, which sits upon Miflet. So you will get acquainted with a few more libraries. Generally, I would say that take this approach, take matplotlib as your base and reach out to other libraries as you see value for your potential visualizations. So with that there, now I will go back and recap what we did last time. Last time we did... we did last last time we did you mentioned that sometimes you may have to go back to open gl and do things under the power yes so but i don't see a what you call connected things from open gl into any of these ecosystem how does that work see there is a there's a catch to it this diagram is not quite i would say this three j's uses webg which is essentially and webgl will be driven at the graphic layer on your operating system by either opengl or by directx windows so there is a standard it's called webg for browsers and they all leverage that and it is just evocative you know when you go to see google app right and you see this beautiful for browsers and they will leverage that. And it is just evocative. You know, when you go to see Google Earth and you see this beautiful visualizations popping up and so forth, you see all of those, you see the power of 3D, high performance 3D animations and visualizations. Now you're getting more and more into the territory of direct computer graphics and layering upon it. And if you have ever layered data or visualization upon Google Earth and its APIs, you do realize how very powerful it becomes. So that is it. And so, I mean, see a workshop like this, which is two days. Its main purpose is to get you running. But the moment you run, you realize that all you have done is touch the tip of the iceberg. Doesn't it? Data visualization is essentially a world in itself. Data scientists tend to underestimate it until they get into it. And it is a testament today, people who do good data visualization, frankly, and I'm not exaggerating, I'm saying from the limited experience that I have with some great data visualizers, a typical data scientist will earn in the order of 200 plus minus 100, the typical one, the very good ones, half a million or something like that, machine learning engineers, 600 years, and the exceptional students. In the data visualization world, people who do data visualization very well, they are so few and far between because they need to be mathematical, they need to be ingenious, but they need to have a deep sense of art and aesthetics and to have this dual skill is relatively rare because of which the ones that i know typically when you hire them uh their starting price will be around two to three million for a project right and they will give you the visualization and And sometimes, you know that they are experts, they will do it actually in three, four months, later five months or a year. But even for that, they will charge you something close to seven figures sometimes. So data visualization gurus, like the ones who are really good with it at the art of the community, who can think through the aesthetics and tell a story, they are very, very sought after. They are the bridge between engineering and art. And you know, this whole interplay between engineering and art has been, it's an interesting topic in its own right. If you, for example, ask, what is it that Apple did differently compared to all the laptop makers or computer makers, the Dells and the Compacts of the world, that piece of the world. If you think deeply about it, and so Apple, for example, is pretty, they don't give you a hardware, which is the best. Even today, a Samsung smartphone is way, way more powerful than Apple, even the latest Apple iPhone. It's a given. It will be. And so again, I mean, obviously I'm oversimplifying. Apple has been very clear from the beginning. They are into industrial design, right? They bring together the hardware technology and they bring art together, design and art and aesthetics, and they merge the two. And the whole operating system also has the same throughout the product cycle whether they are building hardware products or they're building software products usability is front and center for them and beauty and aesthetics is front and central and so you can see the effect what is it today it's is it fair to say that it's one of the the most uh the highest what is it called a market cap trillion it's a trillion dollar company right but almost two trillion dollar companies three trillion three trillion dollar company right so think about that they reached three trillion so so guys think about it. They reached 3 trillion. So guys, think about it. 3 trillion is more than the wealth of many nations. Isn't it? And what is true for big companies like Apple, etc. I happen to know, and if you just look around in five minutes, you can find out that's true. People who are deep visualization gurus, it's true for them too. There is a huge career out here in data visualization, but you have to become good at it, very good at it. And so it's a journey. And I hope that's some motivation to go back and read and review the old notebooks. So today I'll start by reviewing what did we do last time? We did bar plots and we did scatter plots. The main thing we learned is and you take a systematic approach somewhat like or resonating with the grammar of graphics you live it's like building a house you lay the foundation right and then layer by layer you put pieces together and you slowly build a house whenever you see a visualization think of it like a house. Or if you're used to Photoshop as a final graphics that will be sitting upon many, many layers that you have put in Photoshop. So that's how it is. Build it slowly. And so we went from Bartcottodes of one liner to the, to really, for example, we end with the landmark, Nightingale's two roses visualization. And at each part of the journey, we just added one stake most of the time, one or two stakes, right, or simple things. So you gradually built it up. Then we did scatter plots and we saw scatter plots using different lighters. Again, we started with one lighters, and I hope you would agree that by the time we ended our scatter plots were looking very, very good. But to cap it off, I would like to end that scatter plot discussion itself with a landmark visualization. In the world of visualization, and this is a visualization that many of you may have seen, it is called the health and wealth of nations. It is one of those visualizations that captures so much of the history of the world in an objective, non-biased perspective. The moment we talk about history, the moment we talk about how the wealth of nations or how nations have done well or not, you ask this question, was for example colonialism good? For example, India has been colonized and China has colonized and Asia, much of Asia was colonized for almost 200 years. In this time, there are two perspectives. If you go and ask the Asians, they will say, oh, a bunch of really cruel barbarians came and took over all that. It was decimated. It was plundered. That's one perspective. There's another perspective. If you look at it from the Eurocentric perspective, there the perspective is, you know, we were the people who took, well, depending upon, we took Christianity, the light of Christianity, we took the light of knowledge, to these people who had gotten, really fallen behind. We took steam engines, we took train and railways, we took this and, and modern systems. And we essentially created a scientific, you know, brought them into the modern world, all of these countries. So these are entirely different perspectives. But if you ask this question, okay, so these are two perspectives, but if you look at some very basic, let's look at the, for example, the longevity. If you say that longevity is some very rough single measure of how well people in a country are doing. Right? Because you can't live too long if you're starving. Right? You can't live too long if the whole nation doesn't have a medical infrastructure of a reasonable kind. Basic medical infrastructure. At the other hand, what is the wealth of these nations? How well are they doing? Are people able to save money, earn enough and so forth? So health and wealth, you can think of it as two axes by which you can see the evolution of nations over a period of a couple of hundred years. So that was a visualization that was the famous gapminder of health wealth of nation visualization. And let us go to that particular vision. This has been a celebrated visualization that has been talked about many, many times. So and it was created, well, there's a bit of history to that, we'll come to the history to that it was created by a Swedish professor and something I remember his name, Rosling, I believe, and so on. So his son, if I remember, isn't Google. So anyway, he created this visualization. What it shows you is we will start with a year, which is, let's go to the year 1799. Let's go back more than 200 years and see how the countries have been doing around the world see how the countries have been doing around the world with respect to life expectancy and income. So on the y-axis is life expectancy. It's a linear scale from zero to let's say 90 or 100 years, then income. Now you notice that income is strange which is a little bit 50, 100, 2000, 4000. It is on an exponential scale. Do you see this? The y-axis is not linear. It keeps doubling every unit interval. It keeps doubling. So we will see the wealth of nations and you see it carefully. i will play this visualization and just pay attention to what happens by the way just to give you a clue uh let's go and look at some of the major nations this is china this big circle that you see is china and this circle that 1799. Right? What is the life expectancy in India? 25 years, right? 25 years is a literally shows that and the wealth is very low. And what it shows is that per person, what is the GDP of the nation per capita, is pretty low. The country was in shambles. That was the time, I mean, obviously the Indian history guys will remember, all of those, the East India Company had just come and they started toppling over all the kings and taking over the country at that time. So this is about that time. China was slightly better, not by far. What about countries that were doing well? Look at this. This is Germany, this France, Russia, Italy, and this, United Kingdom. So United Kingdom had a 50% higher practical So United Kingdom had a 50% higher practically longevity and wealth. It was doing pretty good. And there were other nations that were doing good. Germany was a power, mighty power. France was a power. These countries were doing pretty well. And then there were countries which were doing very much like India and China pretty bad. So if you look at the history of the nations, these were all the yellow countries were the countries that had already started benefiting from the scientific revolution right and from the renaissance and all of that but the other nations weren't. So let's play this visualization and I ask you to pay attention to what happens around 1945 to 1950 right that's the period in which more or less colonialism in Asia ended and see what happens at that time I'll try to stop it at that time so you realize that for the longest time not much is happening you notice that India and China actually getting a little poorer right and their life expectancy is falling for example if i stop here what happens under 1876 life expectancy in india has dipped to some 19 years right isn't it unbelievable? This is how it went. And then you gradually see that this is about the post Second, post First World War, let's go back to the time of the first just before the First World War, you realize that it's still pretty bad but what happens to these nations they have been rapidly progressing they keep growing they keep growing rapidly so you could literally see the gap between european progress and the progress of the rest of the world isn't it they were benefiting fully from the industrial revolution. And the effects were obvious. If anybody has a question, for example, people actually even today debate, did industrial revolution lead to any progress or any benefit? Well, it will forever remain debatable depending upon which lens you look at it from but if you look at it from the lens of expectancy and income this this has a story to tell just by zooming going from here let's say here to here what do you notice countries where which had industrial revolution had a rapid increase of health and wealth had a rapid increase of health and wealth. What do you mean by green? This is the United States. Right? Green side of America. So here's the legend at the top here. The greens are that, the blues are Africa, pinks are Asia, yellows are Europe. So you could literally see that countries benefiting from that. Now let's see what happens here. By now, like all of these countries are doing pretty poorly, Asia and Africa. And now see, gradually, it stays more or less the same. See, 39, things are improving a little bit China India is beginning to improve then comes World War II yeah World War II and around World War II what you notice is you notice surprisingly that some countries they took a dip Russia took quite a beating in the 1930s, which in the two world wars. Remember that was the time in which the rule of Stalin and whatnot, other dictators, many of the factors were involved that was happening. It was taking a dip. I don't know how accurate it is. But yes, these East European countries were doing pretty good. Then comes, if you just move forward a little bit and look at the end of the Second World War. By end of the Second World War, do you realize that the healthiest and the wealthiest nation, the nation with pretty leading except for my minor other countries like sweden and norway scandinavian countries always tend to have those findings i guess pretty good uh life expectancy what you notice is united states has already become amongst the wealthiest nations except for switzerland switzerland of course also tremendously benefited from the war because guess where all the dictators hide their money yes what war i mean it's always been a statement for better or for i don't know how fair it is that a wars benefits switzerland so it is very convenient for them to say we are neutral So it is very convenient for them to say we are neutral. That's good. So there's something interesting you can do. You search a country. That's for the thing of the search Afghanistan. And it's pretty nicely done, the visualization. Right. You can limit it to just a . Yes, you could do that. This is Afghanistan. And when you run the visualization, you can literally see this little... It actually goes backwards. Yes, you'll notice that. This is where the Afghan war, the Russians invading Afghanistan and so forth. And then at one point in 1993, it again goes back huge in the wealth of nations. But yes, you could see the life of these people. Such a great visualization. It is. So guys, what I wanted to say is when this visualization came, it was a gift. Like people were fascinated. I remember playing with it for just endlessly, right? Once it comes about, because there is so much of storytelling, so much of history captured in one visualization. And at the end of it, what is it guys? It's a scatter plot. Do you see that? So never underestimate, never say, oh, scatter plot, it's just one line code. It's not. You have to think how to tell a story using the simplest means and so you look at this what has been happening it has a very peculiar now because since you picked up Afghanistan I'll just tell you a bit of a fact Afghanistan is a strange land every single power in the world that has deemed itself to be a superpower, every single power in history, starting with Alexander, it has been their fate to go and conquer Afghanistan at some point or the other. It's a very interesting part of history. It's a land that always is invaded because of its location or for whatever reason. But there is another side. So for example, if you go to Afghanistan, you will actually still find the Greeks who came with Alexander and attacked and then never went back, settled down there. You'll actually find people of Greek descent in Buats. They are still living there and so you can see waves and waves of invaders come to this land, think that they will invade it and say, but here is the second part of that. It has never successfully ever been conquered and the reason for that is the mountain regions of Afghanistan, they're tribals. I mean, they just, you go there, a lot of people by modern standards, they would be considered backward and they're brutal to women and whatnot. But the other fact of that, they're almost impossible to conquer. They are very fierce warriors. And so far, the history of the world has nobody responded constantly so anyway so like like that we can talk about the history of anything let's look at the history of india in the same strength india i take this and let me also put the history of something else our whenever you have india we always have this other thing, China, that the comparison is often done. So let's look at 1799. These countries were not at war in those times. If you go back and look at it, there was a huge cultural propagation for 2000 years, the southern parts of and the eastern parts of China has been de facto Buddhist lands. And great scholars from China and from these lands have come to India that you would remember Hume Sartre, one of the greatest travelers coming to India and learn from. So there was a huge, large degree of cultural exchange and mutual respect between these two great nations of the East. Look at their fate and how their fate goes with time. Well, India is a little bit, life expectancy is a bit lower because it's the tropics. There are more germs, etc. This is more temperate climate. But let's see, let's progress it from there. What do you notice? As colonialism comes, do you see the life expectancy go up or go down in these nations? More or less the same right now. Going down. Now? Now going down. Going down, right? Going down and going down, bouncing further. And you realize that it keeps reaching below of 19.4 in these places. And now see what happens when these nations finally, so these nations were asked to contribute to the Allied forces in the first and the second world war which they did. And so they became more understood and science began to come. Now see, I will just roll it back to 1945, 44 and see from here, if you see a rapid change from this, these countries become free and what happens? do you see that the trajectories. what's happening to this trajectories now. Life expectancy is increasing. And the wealth of nation is rapidly increase so does it answer the question was colonialism, of course, for the good or not. As far as these countries are concerned it's a strong argument that uh getting rid of colonialism was a good thing right these nations extractive taking the resources they're exactly so that's exactly what colonialism was huge That's right. I mean, even today, I get people who keep assuring me that if only these countries had not been conquered, they would be living in abject poverty, dying like flies. But so, things like that. So this is, so guys, here's the thing. What is it? It is objective reality, but it tells a story, compelling story. Would you agree? And that is the value of good data visualization. Obviously, this data visualization became a landmark visualization in the world of visualizations. We did scatter plots. Now, I will let Kyle take you through and make you do. It depends upon whether you want to do it or not, there'll be a space of time, but I can walk you through the code of reproducing it. Now, something so powerful, do you think we can reproduce? From what you have learned, do you think you guys can reproduce? Yes. Yes, you have learned everything needed last week to be able to deconstruct this and reproduce it. So let's look at some. Can we make the x-axis on a logarithmic scale? Yes. Matplotlib, everything gives you the ability to make the scales like that. Could we draw the grid lines? Of course a no-grader. Could we put this 2020, the year that is there, do you see that it exists as this? What do you think we can use to write this? It is just text. Matplotlib gives you a text construct. Each of these libraries give you a text construct. Or you can think of it as some sort of just an annotation or something, text or annotation in the background. You can put, do we know how to change the size of the bubbles? Yeah. Yes. Of course we do. Do we know how to color the bubbles? We do. So if you take any one fixed here, you know all the elements here. Would you agree? You can draw it and then all you have to do is do it over a time series over the years. Now in the public space, this entire full data set is not easily available. If one of you can get hold of that certain piece contributed to us. We have data for more limited number of years. So this data, right? attributed to us uh we have data for a more limited number of years in the public domain this data right it's in a very sort of complicated form so to put it in a simple form that uh country uh year life expectancy and wealth in gdp just four column date right the way we would want it i wasn't able to find it. Maybe you can. If you can Sachin. I'm sitting on the website. Yeah, yeah, try that. Try that. Do you think that all data should be available to people should be able to Yes. Yeah, yeah. No, no, poke around it. I didn't succeed in pulling it through. But if you can Sachin, you would really, I would love to, in the next iteration of this workshop, when we implement it, I would love to implement it on the full range of 220%. So please help us out with that. All right, guys, so now I'll hand over to Tayil, who has done wonderful work on this and created this. And by the way, this gentleman that you see here, Hans Rosling, he is a professor in Sweden. And he created this visualization. It has been obviously presented everywhere now. And what I'm saying is, guys, you already have the tools now to create powerful visualizations. Kyle, please take over. He passed away. Oh, Hans Rosling. Oh, he passed away, sorry to hear that. So he published a book, him, his son and the daughter-in-law. Really? Yeah. So the foundation basically says that people should, they quote quite a lot of schools and all, saying that you should look at data in a completely unbiased way right exactly no definitely i would love to buy the book in fact it's the first thing i'll do i'll go buy a book could you oh kyle could you share the information on the book that was just mentioned that was just mentioned yes please put it on our staff thank you okay so like as i said we will be recreating the gap minder wealth of nations visualization with what we've learned so far so let us start with the matplotlib we'll also learn it uh learn you learn to create the visualization using altair and plotly so let's first start with the imports so here um we import we run visualization imports notebook which you already have so you just run this uh run this line of code then we also import import altair which we use it later on. You don't need it here anyway. Then here is the plot style dictionary which instead of updating each individual font separately, we create a dictionary with all the font styles that we want. So including axis, x axis x sticks uh figure title size everything put together and then one second guys so this is it you know remember we have been using the resource control rc and then giving it in a map like you know key value pairs uh which we have done everywhere but uh i think this is a superior way, the way Kyle has done, this is a different way of configuring all of it at one go. It is, as you can see, it is like a JSON, and in one go, you can set all of it, and then do plot style use ggplot. So I would encourage you to use this way now but but this is like a hard coding thing right um what happens right is that see if you notice we have a style everybody has some base style you put your base style somewhere so that all your visualizations look like imagine that you're writing a book would you like each of your visualizations to be in a different style or look different you would like them to be standardized isn't it just as when you write text you you standardize the spacing between the lines and the width of the lines think of it like that whenever you do visualizations take a standard and then change the standardized because you can always do rc parancy those rc way on a case-by-case basis you can still do that but you can start with a baseline yes instead of using numbers there is another option where you can set like small large medium and then in terms of the size of your plot you can set those code words instead so that is also possible but here i've like you said hard coded with numbers so that you can do it as well okay so now we are going to load this data set Okay, so now we are going to load this data set. So in this data set, like Asif said, we are using a limited number of observations. So we start from the year 1952 to 2007 and we take five years gap instead of individual years. So it's 19522 1957 and so on so let's load this data set and i'll just post this source on slack. All right. yeah. So you can run this uh load this um data and uh say uh create a pandas data frame out of it like so can i move forward oh yes this is standardized i hope this is all very familiar to all of you by now we should move rapidly okay so then here i'm describing this uh data frame so we see that we have two uh categorical variables one is the country the other is the continent um and then the rest are all quant quantitative variables so here uh we see that year starts from 1952 and the max is 2007. so now guys are you typing it in are you guys doing it on your machines Are you guys doing it on your machines? No. Do that. At least one basic portion is worth. Could you please do it from the beginning? Maybe I'll take them from the top. I can do at least one portion. It's a little difficult to watch and do it at the same time. No, you can paste the code. Harini, if you can keep pasting the code, Harini can do that. Okay. Okay. Okay. Okay. and do it at the same time no you can paste the code uh honey if you can keep pasting the code okay or take one of these i think kate would be better because i am having internet issues to log in so i'm doing it for my phone sure okay i'll start pasting that into the into the slack channel so guys let's take a minute to patch up it is worth doing this let's do this and only paste the hard parts of the code don't make everything like when you see it's more than four five minutes others we should like this okay the long chunks. Okay, I'll do that. Okay. So now, before we move forward, it's a good idea to, so first of all, continent is a categorical variable. And we would like to label encoded into numerical codes, say from Africa, zero, Asia one and so on so that later on we could use this information in our scatter plots so how we do that is we first of all convert the continent data into a categorical type then we do call data continent.cat.codes, which automatically converts each unique category into numbers for us. Is that for one second, Kyle, like is this code available online to is available online for us? Which one is that? Which one I think? The notebook. We don't want to give you the notebook till you finish the exercise. See, just like last week, we made notebooks available after you have done the exercise. The point is, if we give it to you, there is no reason for you to type in that note. You just read it and say, okay, now or not. Yeah, but last time also we had issues that long uh what is that lines of code right so we got to copy it somewhere so can you just putting it on slack okay okay thank you you're putting it there right yes yes i'm putting in the So for now the the first scatter plot that we make is very simple. It's in viz. I think i've got it in general. Yes, it's not showing up in the channel. Yeah, yeah, sorry wrong channel. Let me put in the correct channel. Yeah. Wait a minute. Yeah. And I'm also getting echoes, guys. Can you please mute yourself if you are not speaking? Let's wait for those codes to show up. So after we do that, we also just filter the data frame by year. So before we plot it for each individual year we have, we do it for one single year. So then we can improve upon it later on. First data frame. For some reason, I'm not seeing any code in the Slack channel. I have so many other Slack channels and my video is like, should I start doing this? Yeah. Yeah, let me click on that. There we go. OK. Let's wait a minute, guys, till you get over. OK, let me just start. Yeah, I'm in the right channel now. Yeah. Yes, so that is right. So Kate, please put it in a code block. You know, the Slack gives you this little icon for code block and if we could use the code block to put yes all right guys so let's start with this the code that we have can we go from the beginning so people don't feel lost okay sorry it's getting very confused so we are going to start from the very beginning so okay this style the first part is there plot style etc have we given this code yes so we have that yes what it can also do is just edit the same block and add the phone just the exact thing so that we just have one thing other than one just like okay yeah let's see how much we can do okay so let's go back just make it sell by sell I'm putting it in it won't take that long and the cells are in order order and of course guys the the reason i'm not releasing the notebook is it's good that you do it if you don't do it you would you have to see the process of slow construction you're building a house little piece by piece you're not doing anything very hard at any one step, adding little pieces. All right guys, should we start now? This is your, uh, yeah. So the source part, let's stop here. Are we all done with this part? Have we reached this far? Let's talk here. The second step. Yeah, you can raise your hand. I have not reached here yet. So who has not reached? Speak up and we'll wait okay so let's wait for everyone to reach a baseline and then we should guys together move fast if you are stuck you can post it on slack and i can help you okay i'm sorry i think it was who said yeah not yet when you get there say that you are there anyone else who is not yet there do we have to run the visualization imports in every notebook or do you just do it once like i was yeah that's the jupiter spirit you know slowly you built it up cell by cell slowly you build it up cell by cell. So could we say that cell number one is done? That's taken from just the Slack message and cell number two. Cell number two is quite literally just loading the data as a Pandas data, which you all are used to by now. Yeah, code's been pasted up to the ad legend should i wait until everyone's caught up i'm sorry can you say that again i have pasted the code to the point of uh 1.3.1 the ad legend okay no no yeah so yeah let's wait a little bit for people to just i want a confirmation that we have all reached at least cell number three anyone who has not reached that number three all right sachin will wait uh let me know when you have hold on guys oops some people are missing the visualization imports notebook i had i had um i just uploaded imports notebook. I had I had just uploaded. I yeah, put it in. I whatever you're posting I'm not able to see the code. You see 100 the slack channel. Yeah, we can see it. what is the easy 100 so are you? Are you there now? Prashant Gupta, how far are you? You're on mute. Okay, we are not hearing from Prashant. This will assume he's making progress. Guys, we need to quickly reach cell number three. Stay on cell number three, please. Have we reached this place? We are able to just see the description of the data. If you have not, let me know. If nobody speaks up, I'll assume we are here. I'll take it as a baseline now we'll move faster so yeah i just joined the channel uh yeah i i got an error it's saying that plt is not defined uh the very first one the import alt there as alt and i don't know if i forgot to import something else you have to run this visualization yes so take that file it's not running for somebody it was giving me errors i copy pasted everything that was in that uh particular yeah that is it and ran it but still i'm getting an error uh that runs but afterwards it's um it's giving me error that the plt is not defined maybe i need to say match.com yeah i i didn't write the import matplotlib let me let me just import you can just copy that yeah yeah import my thought and you'd also have to do import. If you don't have the notebook yet, you can just do this. Yeah, import. All right, perfect. Let me run this. Yeah. Okay. I'll wait. Yeah, it ran. Okay, good. Thank you. I'm there. Okay. Guys, visualization inputs, you'll see in your slide channel. Just put it in your data. So are we all at number three, cell number three? Okay, please stay at cell number three. I want to baseline everyone before we make progress anyone who is not yet here prashan avanti anybody about it we all got to this one all right guys so if we are here i think people have started taking a bio break it's uh let me ring the bell it's taking us quite some time to baseline okay all right guys so let's do cell number four which is a little bit of data manipulation to create some uh some new columns and kyle uh explained what those are. Two new, three new columns. One of them is continent, continent codes, and year, I mean, a new data frame by a particular year. If you want to limit it to a particular year, you could do it like this, right? All right, guys, are we here at this point? Cell number four, have we copied into the slack for for people to play with. So go back to the previous one this one level higher. Yes cell number two. Is that really that line. That is I mean it's only just for you to get a sense of the data, this is the statistics of. R. Vijay Mohanaraman, Ph.D.: That is. R. Vijay Mohanaraman, Ph.D.: All right guys so let's move forward at this one, have you already said number four and then it. R. Vijay Mohanaraman, Ph.D.: yeah visualization yet now we will get to it so now let's pay attention to this cell what we are doing is we are what is the x-axis it it was the gdp per capita and the y-axis was the life expectancy isn't it and so kyle has just plotted it out and given some labels this code i want you all to type it in let's not give it to you because by now this should have become very familiar to you. We are looking at a particular year's data, which is 1982. Let's take a couple of minutes to finish it off. So I have a question. How did, where does it say that we have picked a particular year? Cause Oh, just one line. She decided to do the random year and continue to do the reference. All right. Let's create another data frame limited to only that and we'll visualize only one here so at this moment we won't do the animation one frame of a video if you think of video and frames one frame of a video so once you run this code your plot should look something like this. It's a very basic. So guys, make sure we won't make progress. Just keep it at the code. Please a little bit. Yeah, that's it. That's wonderful. Please type it in and you have a couple of more minutes a minute to do it is important guys that the basic of plotting by now you are very comfortable with Guys come by and let's start doing it in the coffee room. Shall we move forward? Is everybody done? Can I assume? Raise your hand if you are not done. So if you're getting problem with latex just disable it set latex falls somewhere up there all right at the top yes you can set latex as port and remove all these latex just mark it as false all right guys at this moment can i assume that this is we have all reached this level if you haven't now is the time to speak up because it's a foundation will build on gopal you're still working on it yes i'm my it's working in the back and i don't know what it's doing maybe latex is taking time i don't know just disable latex just go to use use text and set it to false oh no yes i got it let's look at this and see first thing we notice in the previous graph to go to the previous. R. Vijay Mohanaraman, Ph.D.: Look at this graph this what have we not done. R. Vijay Mohanaraman, Ph.D.: We have not exploited color and we have not exploited size remember in two dimensions, we can actually show four dimensions of data. can actually show four dimensions of data. X and Y are taken, income, life expectancy, but we can still exploit the size and the color of the points or the bubbles to show two more things. And you see that, so the only code change we make now are the two, color S and C. Do you notice that, S and C? And then we have added some color map. Color map just adds to the beauty. Remember I told that there are many color maps available. Kyle has selected set one, which is a well-known color map. So Kyle, could you please highlight only those three lines with your mouse? Yes. So guys, let's add, yeah, an edge color, some things for aesthetics. So we are adding only this much. Could you please add these three lines, all of you? It is not something we want to share simply because we want you to type it in. We linearly scale the population because population is, if we make the marker size as the population, they become very large. So we shrink it down a bit and then. Yes. How do you choose that value? Like 300? I chose it randomly. First I plotted it, it was very large. So it was a trial and error method yeah so this is the art part of it you have to play and figure it out so this is how your plot is supposed to look so guys at this moment I will assume that all of you are looking at this plot on your laptops. You are? Yes. Very good. But Sanjeev, you got here? Where are you? Oh, you're getting too many errors. Maybe you can work with Harin. She can help you catch up. Okay, guys. Those of you who are... Are there anyone else in the zoom who has not reached this place raise your hand roshan are you there roshan parton roshan anybody who's not there okay wonderful so i'll assume that all of you have joined. So let's make progress. Do you notice that all we did is we exploited the fact that we can use color and size to do it. Now let's move forward. So we noticed that this plot is not very good as a linear because the income has an exponential sort of a distribution. Poor countries make orders of magnitude less than wealthy countries. So the x scale we can change to a logarithmic scale. And how do we do that? We just add one line of code. This is one of the beauty of Matt Kotlin. And how do we do that? We just add one line of code. This is one of the beauty of Matplotlib. And all these libraries, they will give you the scaling, log scaling of axes automatically. So let's add this one line to your code in which you scale the axis. scale the axis and when you do that you should see it now like this it looks a little bit more linear and more along the lines of what the gap minder visualization is do you see that we are getting closer to it now one frame just one frame and we're getting a bit closer to it closer to it now one frame just one frame and we're getting a bit closer to it are we if you are not here let me know add that log line just show that plot that x scale log don't you have to put all the entire thing below oh yes yes all you do see guys all you do is take your previous cell copied over and then add this one or in the same cell go and add this and see how it how it reacts don't have to create more cells you can just if you want put it there itself but if you create new cells then you will see the evolution of your graph throughout the GPT-NR. Are we there now? Albert, are we there? Yeah. OK, let's go forward. Now we add legends. Do we remember that legends, all these colors and all of these, we need to say what those colors are. So how do we do yes with matplotlib there are two ways to create legends as in uh we either first group our data based on con so we want the colors we want to show um the legend of the colors so either we first group the data based on different continents and then plot them separately and mark the labels each time so that is one method but here what we are doing is we make use of legend elements so plt.scatter returns a path collection object and this path collection object has something called legend elements which returns two things handles and labels. So we manipulate them to get our legend and that is what is plotted over there. So the handles refer to each of the continents so they'll be the markers and labels are the text that comes with the markers so we keep the handles the same but our labels are usually since we used continent codes they would be 0 1, 4. But here we want the names of the continents. And therefore, we use this data continent.cat.categories, which will return all the unique categories of this column. This bit of code, guys, is very useful. You don't easily find it. But this question keeps coming up over and over again you know what i color coded it by a number some code but each code has a text associated with it what i want to show on legend in the text how would i do it so this bit of code does not for you it helps you just map a code to a legend to text in the legend helps you map a code to a legend, to a text in the legend. So guys, take a minute to type this in. It's a little bit, two, three, four lines of code. Please type it in. We'll make progress after that. And make sure that legends show up. Let's take another 30 seconds and we'll move on. Let's take another 30 seconds. Are we all there? You're there, Abhishek and Sanjeev, you are taking help from Harini. Anybody online who is not yet there or wants us to wait? All right, let's make progress then. So now it looks like this you know you see an improvement legends have come so you see that little steps by little steps we are making progress now let's go ahead now we're going to take a huge step actually so here now we're going to animate it so now we've just created one frame uh next we're going to uh create it for each year we have in our data set so before that it's uh useful to know what how we do it we use funk animation to do it and funk animation if you want to use funk animation you you have to follow these three tasks and if you do these three tasks it's simple so first you need to have a setup the base plot and a setup so this is uh so the base plot is what you want to modify every time you and uh in each frame this is what you want to modify and the setup is uh what remains constant throughout your animation for example your x your X labels, Y labels, titles, all that is static in your animation, you put it under setup. Then you create an update function. So this update function updates the base plot. So this is what gets updated every time for each frame. And in the last is you create animation using function. So you put all of them together and pass it on to function animation, and it creates your animation for you. So one second, just stop at element nine, cell nine nine and let's have people type that so guys please take a moment to type that in After that, Kyle, could you please highlight the sections, which is just a copy from before? Okay. Just with your mouse, highlight from all the way. Even that fig style used in Ggplot, etc. is additions, right? Okay. Yes. use gg plot etc is additions right okay so yes so first we are going to give it some styles in the figure size and style etc etc you may want to do this it is time to do this apply the styles and then copy over your previous cell right after that and this is an import error for animation i'm sorry say that i'm getting error on the animation importing animation punk animation which is not there is anyone else getting that maybe we need to install a library it's uh do we did you need to install a library. Did you need to install a library from calibration? I didn't. I want to get an error. You don't get an error? I don't get an error. Oh. So in your case, right, just do, if you're getting an error, just do go to your shell or in one cell, just do exclamation pip install matplotlib hyphen hyphen upgrade just upgrade your map see what happens gopal is that this is you yes so what i'm going to do is reinstall matplotlib to the upgrade option hyphen hyphen upgrade option hyphen hyphen upgrade so guys are we all here have we done this other than gopal have we matplotlib funk animation and display and have we done this little bit of a setting the figure size the style and so forth so i'll assume it is yes, unless you guys say no. Are we all there? Everybody in the class, are we there? Yeah, just the bubble, the scatterplot and the legend, right? We have not done the setup that does not. Okay, yes. Copy paste. And now we do some extra stuff just to make sure that these things don't change kyle will explain yes yes so um we know that uh the income ranges from 100 to you know 10 power 2 to 10 to the power 5. so uh since i i looked it up manually i'm putting it up here then similarly the age life expectancy ranges from 25 to 90 so we put it up so that for each frame we don't want the limits to keep changing so we'll have a jittering sort of an effect if we don't set the limits prior so we do that now then we also we do the same thing similar to what we did earlier this is the same code from before and so is this so we just add these two lines here so this is the setup and this doesn't change the subtitle the that one is new right yeah yes yes you, yes, you have to write subtitle. So subtitle is basically a super title. Since in our animation, we will keep changing the year. So the title will keep changing, but subtitle remains the same. So after that, yeah, super tired. So next is the update function. This is what we want to change for every frame. So for every frame, we would like to update the year by five. So we start with 1952. And every year, we want to update it by five. and every year we want to update it by five so that then uh we select from data that particular uh all um all observations with year um equals to the year that we just found so then we do the same thing so next what we do. Is we set offsets to set offsets chain changes the position of the points so. If the position was for 19 to do it was something now it will get updated by updated when we use this set of six and similarly we said set sizes, so we change the set of sets. And similarly, we set set sizes. So we change the size of the points as well. Then we change the title to the year that, to the current year. And we do a plot type layout at the end. This is our update function. This part, could you please paste it? Yeah. Because this is new code. It will take you folks to get used to this code. All it is doing is saying, okay, each bubble, where should it belong and how big should it be? Those are the two main changes if you look at it. For a given year, what is the bubble? Where does each bubble need to be and what size should it be? Those are the two main changes, if you look at it. For a given year, what is the bubble? Where does each bubble need to be? And what size they should be? There's a section of that cell or the whole cell you want me to copy in the Slack at some point. The update function, the update function part. The update function. And even this, even this. Even this, animate part. The animate part also, please paste it. So from update function all the way to the end, let's paste it. And then we will talk through it. Okay. Go ahead, Sarath. So the last part, the third part is creating the animation. So here we use the func animation method and we pass in the figure that we are creating. So here we set figure equals PLT and we set this figure and this particular bubble plot is plotted in this figure. So we pass in the figure, then we pass in our update function, and we pass in the number of frames. So this basically means how many times we want to call the update function. So that is 12 times and the interval. So in between each frame, how many seconds do we want? So here we set it to 2000 milliseconds. So essentially one second yes one second and this is just standard code you convert it into a video you convert this animation to video then you display the html and once you do this part you should see this animation show up. It gives me an error that requested movie writer not available. Oh, okay. I got the same error. to HTML5. Are you... See, update your matplotlib. All of you who are having errors, most likely you have an older version of matplotlib. So if you just do pip install matplotlib with the hyphen hyphen upgrade option, upgrade your matplotlib because these are actually recent additions to matplotlib because these are actually recent additions to matplotlib. What did you say? Can I just create a new cell somewhere in a new notebook or whatever? Yeah, just above it. Exclamation. yeah yeah just above it yeah explanation pip install matplotlib upgrade yeah so please try and maybe you can paste it to slack let's do this for all of you actually this is something we're doing for all of us. Let's do that. Because Matplotlib is a fast evolving, I agree, and it's let's let people reach that place. So folks, I want you to all be able to, now that this whole code has been pasted, are we all able to get that moving visualization? Anyone who is not able to? I'm getting the name fig is not defined. Okay, you have to do that. You've got to clear the task. Okay, okay. This code, type it in. Type it in please. Okay. Because these things, you have to develop muscle memory you should become familiar to you now So while we are doing that, guys, do you realize that we are already coming rather close to the visualization, isn't it? So now are you all able to reach here, this visualization it's still giving me um requested movie writers ffmpeg not available oh yes i'm so sorry you'll have to install ffm pg for this okay why don't you give that command right here so that everybody can do that no no in the notebook itself in a notebook this should be sure to type in right i don't remember how i did it so kyle can just do the task if i'm update what is that you put in there df dot something and just one second yeah two pounds what a great a little plot style. Okay. Okay. Thank you. FFMG not available. Yeah. Just install pip install that. Yeah, FFMG. On your machine, just go and install it. It's an MPEG, it will create an MPEG. So whichever is your operating system, please install it. If you have Ubuntu, you can do sudo apt install this thing. If you have Windows, the instructions are likewise for Mac. So I did that pip install ffmpg python the one that but it's it says the requirement already satisfied and when I run that. You have to go to the shell operating system level you have to install ffmpeg the reason is that that is a library not in python. Python uses that library. I don't know how to do that okay uh for each so mac sachin where is sachin hey sachin could you please guide all the people using mac on how to install ffmpeg yeah so uh avanti here and anybody else using mac was struggling so i apologize guys i'm not a mac person in the linux course so let's take help from somebody So I want the here and anybody else using Mac was struggling. So I apologize, guys. I'm not a Mac person, a Linux person. So let's take help from somebody who's good with Mac. I can post me the full file. Then I can run it and make sure it works. Okay. So all right, you can do that one of you or maybe kate could you please give only to such in the whole library the whole jupyter note okay i can do that i can also um yeah let's see i just looked up some information on a Yeah, let's see. I just looked up some information on installing FFmpeg map. I'll just maybe this will be helpful. I'll also copy this. So, Asif, is it ffmpeg-python or ffmpeg? Albert here says that you use something called brew which is a functionality to or a utility to install things on max so brew install ff and then and he's putting the command onto the slack I'm sorry I could not hear you properly yeah there is the library there is a utility in mac called view we are in and it will automatically get integrated you don't have to do that no no pip install is not enough. At the operating system level, you have to install ffmpeg and there are instructions for Google of the instructions and get instructions like for Mac for Linux, I can tell you all you have to do is apt install ffmpeg for Mac Albert is saying it breu install ffmpeg. You need to have breu install the breu package itself. Oh, breu itself. Okay. How do you do that? Would it be supposed? No, it's such an easy just Google it. Okay. So if you don't have breu itself, then first you need to start by installing breu. So guys, I apologize. Mac is an area of ignorance for me but take take help from each other on swag see um okay satchin you have the notebook help the mac people stop the mac people i mean if you have a link on how to install so guys this is taking us rather long to do this visualization but it is worth it i want us to get here but don't go down yet all right stay with that yeah you stay with that we need to all baseline to this guys even if it takes us till lunchtime to do it. This is a very important visualization in the field of visualizations, and it is important that you reach this milestone. In fact, those of you who look for jobs in data visualization are quite likely to find this particular assignment to be your job interview question. How many of you are struggling the speaker. I'm on Windows and if I can be done by this. Like how to find the right exe to install. Oh goodness. For Windows, there is two options exe file one it says Windows will build from gyan.dev and there there's windows built by btbn i just post yeah i saw that but inside those you don't get the exe files both of them they get source code and then the zip files i don't see any exes in them i need to figure out which one has it is it blue no this is for windows anybody has success with windows um i did but i did it so long ago that i don't remember yeah guys i apologize you know you stay in this field you forget all the setup instructions you assume that these things are there so it it's a good exercise. We are going through this struggle. So we will all learn collectively. Oh, okay. Thank you. So please look for ravine's instructions on slack. And while we are waiting for the rest of people guys so i i have to bring up an administrative thing we are still missing the tuition from quite a few people if you did you receive my email instructions on how to if you received an email from me yesterday it means that we believe we haven't received your tuition if that belief is wrong you can tell us otherwise please follow the instructions and please pay off the tuition All right. Albert, Abhishek, did you have success? I think it was successful. You had success? I kept it in my cupboard. would you like to just give it to everyone that entire directory zipped up? Yeah, zip up the entire directory and put it on the slack. you can do center just go down to center okay center and compressed folder So there is some instructions online that I found I posted for Windows. Okay. okay we got the three exes but it looks like they are directly running executables i don't know how to integrate into python then okay all right see here's the thing if you guys are struggling with the animation let's do one a thing if you guys are struggling with the animation let's do one let's keep the animation as a separate session for monday yeah we will all sit together and fix the animation would that be would that be reasonable okay let's do that and for those of you who have this installed let's move forward so there is a problem with the animation it's very jittery if you go back and look at the animation i will keep you sure you look at this animation it jumps it's not smooth can you guys see it jumping around for those of you who got it if you look on the screen zoom um right it's lacking aesthetics it's sort of jumping around so the question is how do you make it have a more aesthetically pleased smooth transition how do you make it flow yeah so she yeah she will talk what you do is and explain that. Go ahead, Karan. So in between each frame, we add, so we have 12 frames, but that is too less for us. We want to add more frames so that we don't have that jittery effect. So in between each of the 12 frames, we add another 15 frames. So and for those frames, we slowly transition know we we offset it just by a little bit so uh that's what this code does um we can just copy and paste it it's just um this just takes care of it um instead of jumping directly to uh year to year plus five, we divide the GDP and the life expectancy by 15 and then add it slowly to the offset. So that way we don't have this effect and we have- Guys, it is basic interpolation. You have to go from A to B. All you do is long x-axis and y-axis you just linearly divide it into pieces into small changes and so you end up simulating a smooth transition the human eye looks at what there's a certain number of frames per second so that if you have that many frames per second, then the human eye will perceive it as continuous motion. So all you need to do for smooth transition is pack a lot more frames. And what is it? I think 30 frames per second or 15 frames per second, there are certain limits per second. 12 frames, yeah. Anything over 12 frames in the human eye will perceive it as smooth motion so movies are like that and if you get a video camera these days typically they go at 30 frames per second and for slow motion they can capture it at 60 frames per second and play it at 30. we get slow motion and all that so this is a little bit about videography we get slow motion so this is a little bit about videography people have to think with four thousand things per second and then they show like bullets yes yes high speed photography explodes and goes yeah definitely or a drop of drop of milk falls into your milk so this is that this code will look a little bit complicated we'll give it to you but if you study it you'll realize that all all it is doing is interpolating the frame creating in between frames through interpolation linear interpolation so okay could you please paste the whole thing or what can you paste could you please paste the whole thing or what okay okay i think you can just paste this whole the entire thing yeah since you're running it but i'll do the copy paste since you're okay let's do that and we also set the title the center of the um to the center of the plot so that it looks similar to the gap minder um you know the visualization we saw and we increase the size to 200 and set the opacity to 0.1 so that it has the watermark effect and the 19 the 1982 you know the year is being shown in the center of the graphic so so folks i know it's been a journey and this is the first simulation we are doing so you're struggling with your environment sooner or later you'll get your environment fixed so the first visualization of of any kind like this is a struggle with the machine and the software. This is the reality of open source. Once you get it right, I hope you realize that now the next animation you create will be much easier. Would you agree? And we haven't exactly reproduced the gap minder, but we have come pretty close would you agree guys we have captured the essence of that visualization yeah anyone any feedback any comments oh very nice yes yes yeah in the space of an hour or so we have done that the one thing it's lacking is interactivity and now kyle is going to help you with that yes so far we've created a video so this we we cannot actually pause anywhere or get more information uh like how we get with interactive charts with altar and and Plotty. So that would be more informative and useful to add to Jupyter Notebook. So now we will learn how to create that with Altair. So if you already played with the scatterplot with Altair Notebook, we've already covered most of what is covered here so we start with. Alt dot chart and we pass in the. We pass in the data set to the chart object and then we use the mark circle method, because we want to plot. mark circle method because we want to plot, we want a scatter plot. Then next, we encode. So we want the x values to be GDP per gap and y values to be life expectancy. And similar to what we did with matplotlib, we make sure that the scale is of logarithmic logarithm type and of base 10. You can even use base 2 like how it is in the gap minder data set but here we use 10 then yes alt dot y we set y to life expectancy and scale this way next size we use population we make sure that the legend is also shown and make the title to population instead of just pop then we set the color to continent and to dip to country so uh and then here are some properties that we adjust. We want the height of the chart, width of the chart, and the title of the chart, and the year. So once we do all that, we should see a chart like this. It is interactive. Of course, there's so much we can improve upon this a lot more. But for now, you should see something like this once you run this cell let's all do that please and guys remember this is the scatter plot that we are absolutely nothing new this is exactly the Altair scatter plot we did last except that of course the data underlying data has changed but absolutely nothing new the only new thing is the scale x axis has developed a logarithm scale other than that everything else is what you should by now if you have reviewed the notebooks jupiter notebooks this whole thing should look very familiar to you now and we said zero to false because um otherwise the y scale starts from zero you don't want that you want it to start from say somewhere from 35 to 80 it chooses by itself so we said how to set any specific life expectancy instead of like a 10 years sorry a life expectancy instead of like a 10 years or 10 years. Sorry? How to set a life expectancy to a specific limit. Now, it picks the minimum. See, when you set the scale 0 spot, it basically starts with, for this is 1982 data, one particular year's data. What it has done is picked the minima in that and it found out that the smallest life expectancy of a country was 25, right? Or something like that. And so it picked that judiciously. If you make zero is equal to two, then it will start it. Oh, thanks. Yeah, because the original plot, it is showing like some of the areas, like if you go back, it was going below 20. Yes, yes. That was for, remember, that for the 1700s, 1800s, right? That is true. But in the gap mind. But by the time you come to 1982, most of the countries are exposed to modern medicine. So the life expectancies have climbed up. So is the year basically increased the life expectancy? Yeah, in this case now we just arbitrarily took a year because the way the approach we are doing is let's first draw one frame of one year and then bring in this year dimension by doing an animation. Okay, thanks. bring in this gear dimension by doing an animation. Okay. Can you move forward? Yes. So guys, are we all here? This is just running a cell that we copied. Still typing. Oh, she already gave it. I was just copying it from here. No, you can just copy it. All right, just move forward forward do you want me to copy yes yes could you please okay i just want to thank you before i do that yes so we see that with altar um the legends are already there we don't have to work too much for it um we have two legends one for the colors and one for the sizes so it's pretty informative so next what uh what we could do is first of all increase the size of these points because they are too small uh the default scaling for for size is not appropriate. So we will change that. So now what we do is we find out the minimum of population minimum and population maximum. We find that, and we just add this one line of all precise, we just add this part, we add a scale to the size so we we have we set the domain to minim pop minimum and pop max and we set the range to something arbitrarily this was like this is also a trial and error method um so once we set that we there's nothing else that I've changed in this cell so you can just type this out one second what you basically domain and range words that are mathematical see whenever you have a function y is function of x the range of values the of x is called the domain of the function. The range of values that you want y to take in response as an f after that is called the range. Now, when it is linear, you are basically saying let's say that I have a domain. I'll take an example from 1 to 100, but you want the value to scale out and go from let's say 50 to 10,000 so what will you do one should map to 50 and 100 should map to 10,000 right and unless you have a reason to you will do a linear scaling that the linear mapping from a domain to range which is what this function does yes no no no the population minimum is not two the population minimum is whatever it is in thousands of people but and population maximum is whatever it is but uh it will be in hundred thousands or something like that but what you have done is you have compressed the range of bubble sizes otherwise you know tiny bubbles disappear Raja Ayyanar?nilavakshmiasurabhashriyapuram.sgbhashriyapuram.sgbhashriyapuram.sgbhashriyapuram.sgbhashriyapuram.sgbhashriyapuram.sgbhashriyapuram.sgbhashriyapuram.sgbhashriyapuram.sgbhashriyapuram.sgb and then 8000 is becoming too big right after that it would figure out how to assign the sizes no domain is of course from the data the range is actually your count right but the thing is how does it in the scale of it yeah how does it decide like so this problem i had quite a lot by area by square root so uh see what happens is that the bubbles size is area right right and so if you Raja Ayyanar?nilro?nilro?nilro?nilro?nilro?nilro?nilro?nilro?nilro?nilro?nilro?nilro?nilro?nilro?nilro?nilro?nilro?nilro?nilro?nilro?nilro?nilro?nilro?nilro?nilro?nilro?nilro?nilro?nilro?nilro square root of 8,000 approximately 90 okay right 81,090 right so you're saying that my scale is from 1.4 to 90 which looks reasonable because it is still within an order of magnitude correct and you should always see if you want to visually compare things try to keep it within an order of magnitude right so the radius now goes from 1.4 to approximately 90. we could have made it 100 or something right for example she could have made it 10 000 it would still work now so that is the way that is the way to go about it when you make visualizations don't go beyond an order of magnitude but an order of magnitude to to our eyes we easily compare and contrast we easily compare and contrast right so that is one sort of a heuristics you can carry so is there another way we convert that to logs if the range is quite good not the range the actual value that might be yeah convert it into a log and say it is not but show this you know the trouble with log you see if you look at the anyway i don't know log function goes like this so what it will mean is that small values will be very small uh in fact a log of uh yeah so anything right i tried that like what sachin said i did try that set the type to log if you do try that what happens is all the all the sizes become very similar all the i see it's a compressive yeah yeah see if you look at a log function it goes like this what is it doing it's squashing it's squashing the thing so log is somewhat like a squashing function you don't want to use that yeah this was very hard for me to get a balance of people, but you are like either it was could be or now I kind of play with it. So this is Kyle's choice and I think it's a good choice. She has made a very good choice just by trial and error. But if you want to remember the use that I have, I say that the ratio of radiuses should be one order of magnitude. Raja Ayyanar?n that's it. And there is a error. I am seeing an error over there. I hope others will also get it. Expression cannot contain assignment perhaps you mean equal to for domain equal to. No. Should be. I am also getting an error on the first plot of Altair. It's, you know, the very first trying to encode it as code and it's doing strange things in slack. Oh, it's just like, please wrap it up in a code segment. Is the way it was pasted. So we can fix that so did you paste both the cells together kate the first time the well it looks like um you know when i click on the you know code thing and then i paste i'm concerned that it looks like it's only encoding the top line and I want to try to wrap the whole thing but Right, but it worked the first the way you had it before it was still working even though just first line looks I went back to how I did it before I clicked on the slack thing for code then pasted and then just sent And this is just the first cell of all the first Altair cell yeah I haven't done the ones for scale or tooltips yet okay yeah all right guys are we over there is that fixed now no for me so they cut the actual pipe from okay you have questions and it works right no it doesn't work no no not partly this is altair go run the installation again the you know visualization install run that file again you may not have updated the labels all right guys are we all here now does it begin to look closer to the visualization forget the legend part yes is it beginning to now we will yeah we will clean up the legend right now so this this information is actually overpowering what we want to show this population is just uh we can visually see it so we don't need this legend here instead we could show it as a two dip so that's what we do next but can we first can you can you paste the code for the one above we were still on the very first plot plotting with all the very first give you the i'll give you the one scale yes yes let me give you the one for scale thank you all right and now let's uh run it guys so we are giving actually i didn't plan for it to take up all morning but it seems to be, this is a landmark visualization. We need to get it done. It's important. And I hope you'll feel good about it once you finish. Okay, the scale cell is now in Slack. Can we move forward guys? Yeah, it works. Thank you. Good. So now let's see how she adds tooltips and subtracts. So here we don't want the legend for the size. So what we say is that legend equals not. Then we remove the legend that way. Then we add tooltips. So here here we want to we want to show two things we want to show the country as well as the population so we create two tooltips one is the country and we set its title to country and two tip population and we use this format so this format i've also uh there is a link here. You can look up the three formats. There's a comma missing after pop min. On that scale equal alt dot scale domain equal pop min pop max is about the middle of the cell. Gita Gopinath, Cool all that scale domain equal pop min pop Max about middle of the cell. Gita Gopinath, Go like three lines above the moon move love it legend. Gita Gopinath, No yeah. Gita Gopinath, Okay okay yeah. Gita Gopinath, pop man does not have a comma after it. Gita Gopinath, I think that's. Gita Gopinath, Oh yeah that's right yeah. Thank you. Okay, so I did get an error. Yeah, now it's good. So the copy of the formatting. You can learn more about formatting, you can format it with percentages and different methods here we want this comma so that we get an idea get a sense of the population so you can you can see the format in action here so that's that and we set the title to population and the rest is the same so we remove the legend and add two tips in this cell. The code is in Slack. So the format is for putting it like... Just number formatting. Yeah. It's basic number formatting for readability. Okay. So can we move forward? Yes, let's move forward. Okay. So then we just add titles. So here we haven't formatted anything. So we change the title, we change the x-axis labeling, y-axis labeling, and also change the legend, legend title. So yeah, so small improvements, small improvements to make it make it better just small small changes and so now it looksplot notebook, we're going to use something called a selector. And we're going to bind that selector to our chart. So first thing we do is we first we create a slider we want the slider to show years between 1952 and 2007 and we want it to um have a step of five? Why not one? So that people can clock to any given time. But the data has only 1952 and 1957. It doesn't have that. Oh, that's right. For every five years. It's every five years. Yeah. Nice. So once we do that, we bind this slider to our selector so as altar has different types of selections where one is single select selection single selection multi and selection interval so here we use selection single selection interval selects a particular range selection multi select multiple things but here we want just to select one item and that is we want to select the year from the slider right so that is stored in in this selector object and what we do is we don't change anything anything from the code we we already formatted everything we want from the from the previous cells we just copy and paste the whole thing the only thing we add are these two lines in the end one is add selection and transform filter so add selection first of all binds this selector object to our chart so now the selector object is available in our chart and secondly we do this transform filter. There are many methods, transform, calculate, transform, window, and many more. But transform filter, it basically filters the data based on the selector. So we've already specified in the selector that we are going to select from from whatever data set is available in the in our chart we want to filter based on this particular column here and initially we set it to 1982 so our chart will initially show us show us the data of 1982, but then we can change it later on. So all we do is we add these two lines at the end and we add a slider and we add a selector. So and once we do that, now our chart has become interactive. So here we have a slider. Now our chart has become interactive. So here we have a slider. So we can change, we can slide back and forth. And we can pause anywhere we want. We can get more information on each bubble, just like in the Gapminder dataset. You can even play with it even more so that when you, just like in Gapminder, we could, once we clicked on a particular bubble, everything else was grayed out and just that particular bubble was alone. It had its color. So similarly, that is also possible. So you can try that out as an exercise can improve on this code. And I hope you all reach this point for now. Yes, let's move forward. Okay. And finally, we're just going to customize a little bit more. We see that as we move here, our y-axis limit keeps changing and our x-axis limit also keeps changing here. So we don't want that. We want it to be quite stationary. So you just change yeah so we just set the x-axis limit in in our scales um so we said we we said we fixed the domain right so we fixed the domain for both x and y. And once that is done, we just add a little bit of more styling. We add some strokes so that when bubbles overlap, we know exactly how they overlap. So once that is done, let's run this. OK, it's running. So now we don't have that effect. We don't see the bubbles flipping around. And it's a good place to stop with that. Yep, yep. Nice. All right, guys. So in the lunch break, I want you, we'll upload the notebook right after this. In the lunch break, take some time and read the code carefully and run it on your machines. You will by now realize that if you have done all the scatterplot notebooks carefully, you are in familiar territory. Everything will look new, but at least if you go back and compare what you have learned in scatterplot, you'll see that all the elements are taken from there we are not bringing in too many new things to make this happen just a little bit here there cosmetic changes and in slow steps we are building this visualization nice let's move forward so and finally um we could do all this in a single step with Plotly. So Plotly makes it very simple for us. So we just have one cell for Plotly. And this is all we do. This is pretty much basically the same code as before. Probably you don't need it again. You don't have to add this. So with Plotly, if you better import plot express it's already there in the imports notebook visualization imports if not you can import it separately that is import plot import plot the dot express as tx so that should work then so here we do a scatter plot we pass in the data everything is similar so it's just the syntax is very simple here x equals and then log x we want uh the scale to be log x so we just say log x equals true uh what uh and then our y and what should be uh the domain here here they call it range um in alter it was called domain so but then we set the range of x and y and then we set the size we set what our maximum size should be we don't manipulate too much and set the color and then we set a particular color map we set what what do we want as our tool tips and so this is the only thing so now here with alt add we didn't have any animation we couldn't play anything but we could move around with the slider with plotly animation is just very simple and comes just in two lines so we want the animation frame to be based on year as in for each each frame we want to group the data frame by year right so that's how we do this second is animation group so we want each country to look very continuous so from each from the previous previous year to the next year we want the country to move very smoothly so the bubble of each country to move very smoothly so the bubble of each country should move very smoothly smoothly so very nice so guys here's the thing do you notice that plotly here excels in this thing and obviously uh if you look at the documentation we use animation group and set that to country. So country is... Thank you. So guys, you notice that plot makes it very easy. So the people who are making the plotty library, they actually paid attention because obviously that library was created after the wealth of nations visualization, that point the visualization was there and so they asked this question what is missing what can make it very simple to create such a visualization and they literally made them as arguments to this scatter function itself because ultimately it's a scattered part and that's the beauty of it so and that's it so it's very simple um you like to write a few lines of code and let's run this okay it's going to take a little bit of time oh it's done so it's very neat we have everything well made and we can run this as an animation and also use it as a slider just as we saw in our gapminder on the gapminder website it's possible and we get all the information from the tooltips So very well done, Kyle. Thank you. Yeah, that's true. That's very well done. So, guys, we're going to take a small break, then we're going to do line plots. But before we do that, guys, I hope by now you realize never underestimate the power of simple visualization elements like bar charts or scatter blocks. People, whether they think of bar plots, they will just do a plot bar, right, or something like that. underestimate the power of simple visualization elements like bar charts or scatter blocks. People, whether they think of bar plots, they will just do a plot bar, right, or something like that, one-liner, a basic visualization. The whole point of visualization is to tell stories with data. Find what's hidden there in the data, what the real story the data is trying to tell and tell that story create very compelling visualizations right and that has to be the goal and if you notice it these things when you go and look at it you realize that these simple elements they have sort of hidden superpowers in them where there's a bar bars or the scattered knots and so forth. And I hope you'll you will harness them to the maximum. Now, what we will do is we're going to upload this, I'm going to upload this visualization library to the web to the course website, you can download it, you can play around with it, don't do it. At this moment, we'll move on to the line. Would you like to do the line?