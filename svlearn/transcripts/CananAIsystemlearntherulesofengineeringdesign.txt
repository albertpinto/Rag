 ðŸŽµ All right guys, I'll start. I'd like to introduce Professor Kannan here. He has been not just an erudite scholar, he has an unusual life, a very interesting life. He was one of the rank holders in IIT JEE, joined IIT Chennai. Like any other person, you would imagine that he would just take the next flight to US to some graduate school and settle down to a cushy job, or he would take, join IAS or do one of the many things do cat and do management instead he actually left engineering as we know it in the traditional sense and he said engineering must be at the service of the common man India is a land where the opportunities of engineering at the grassroot we should do something at the grassroot level he has given his entire life to that mission in that process he has done a lot of innovations that make tremendous difference to the lives of people he has done things with textiles he has done he has created an atm machine that was solar powered and that would actually be taken to remote villages on bullet cards and be effective. It could work with dirty currencies and soil currencies and so forth. So all these grassroots innovations have made quite a difference to the country, to what he has done. He has been called to give advice to different prime ministers, he has been an advisor to universities and currently he is a professor at IIT Madras. So I'll yield now to Professor Kannan to talk about his topic. Thank you, Asif, for the kind introduction. It it's my pleasure I have been seeing quite a few of the videos on this channel and I must say very impressive though I follow very little of the intricate math and I know I'm talking to a very maths heavy audience today, but my presentation will not have too much math. I am here to talk about engineering design, which is what I do and in engineering design, thanks to my interactions and conversations with Asif and Chandan, I have picked up some feel for it, more than feel for AI. It's more like I have a feel for how I can apply it in what I do and those are the things that I hope to share with you today. So are we ready to go? Yes, Kanan please go ahead. So I will just bring up my deck. Are you all able to see the screen? Yes. Yeah. Okay. So I'm only going to explore this question throughout my talk. I'll go over three or four case studies. And hopefully towards the end, I have some questions which people who are listening in on the talk will be able to give me some insights too. So the question that we will explore today is can artificial intelligence learn engineering design? So before going deeper into the question first we should ask what is engineering design really? And the broadest and the simplest way of addressing that is that when somebody comes to an engineer with a practical problem, then that needs to be solved by the engineer and all the activities that the engineer would do would come under the domain of engineering design and for the solution to be a good solution it has to be not only effective in the sense that it solves the problem it must also be cost effective. And at the next sort of meta level, designer himself or herself should do the work in reasonable time at reasonable cost. So the designer also works under time and budget constraints. So how does a designer really go about the job? I'll take you through some of the steps using, say, a problem that we all understand. You need to build a house and you go to an architect. And you are describing your requirements about what kind of a house you want. And maybe if there's an extra room you will like it and of course the garage would be great but then the yard would be a lovely thing to have. But with all within all these requirements all of these requirements have to be met within some constraints too. There is only so much land area available and you have a certain budget you cannot exceed that and there are a lot of compliance issues water should not stagnate the building should be structurally stable there could be local laws that you have to be compliant with in terms of how much offset from the periphery you have to have and things like that all of these are the different constraints within which the architect has to see how to best fulfill your requirements. So what are the steps involved in addressing a problem like this. So the first step, which is probably the most mysterious. of them all is to come up with concepts and what sets a good engineer apart from a bad engineer or an experienced engineer from a very raw engineer is the kind of concepts that they can come up with very quickly and it's often a mystery when you see good practitioners and you wonder how they thought of this, how did it come about and we will be exploring these in some more detail and see whether an artificial intelligence can do something as good. But once the concept has been sort of fleshed out in some detail, then a lot of standard sequence of activities can follow after that. The first thing is we can do quick calculations to see whether it is compliant with the physics of the domain that we are dealing with. Is it transgressing any natural laws? What is the kind of efficiency? How heavy will the product be? A lot of things can be, a lot of questions can be easily answered once the concept is clear. is often not simple. What you see here are very complex equations. They are more than 200 years old, but in general they are unsolvable and they are called the Navier-Strokes equation. It is just a fanciful way of saying that mass is conserved, momentum is conserved, energy is conserved, but to solve it is fiendishly difficult. And so you can't entirely use the analytical equations to answer most of the questions that are uppermost in your mind when it comes to evaluating a design concept. So what is the next alternative? Well you set up a schema where a computer can plot through a lot of calculations iteratively and tell you whether the solution works or not. This is a attractive option because somebody else is waiting it out for you and the computer can do millions of calculations every second and but still the complexity of many practical problems is such that the computer would take hours to come to a final answer and finally you do get an answer but you don't get an insight. So for example you may get what you see in the picture you get some contour plots you get a heat map and things like that but if you are if you don't like what you see and you want to change it there is very little that you can know from the computer about what you should do to change it that that what still remains in the domain of the first step we talked about of generating a concept and that's not something that the computer can very usefully tell you and after all of this is done then you have a number of data points with which you can compare what did you set out to do what were the problems you wanted to address what were the metrics that you had set for yourself and check whether the results are okay and normally this is the heartbreak moment because many things will seem right but a few things won't be right and finally you will not be happy with the outcome at all and you already invested a lot of effort you're quite tired and you don't know what to do next and what you really have to do is you don't have too much options you have to again go back to step one and start all over again so whatever you did till now is just one more learning curve and you see you can add it to the repertoire of experience that you have acquired in life and then start again from step one so this is a very tiresome and exhausting process and all the time your customer is now breathing on your back saying you missed the deadlines I have to get started already I have taken funding from the bank and I'm incurring interest on it and you're still not out with your solution so it this is a stage when things can get very stressful so most practicing engineers don't try to avoid doing this sequence of steps and try to take the easy way out which is copy and paste normally whatever problem you are trying to address something similar to it has been addressed by somebody somewhere so you look at what somebody has done which is close to what you want to do and pick the ideas that have worked and of course your requirements are not exactly the same so you may have to make a few changes so you customize that design and this is the commonest way of doing engineering design and in most problems that engineers deal with this works rather well it's economical it takes little time there's no problem unless it's some what you're copying from is protected by patent or something like that. For most problems, that's not the case. Otherwise, this is a good and pretty effective practical method. There is also another formal, more rigorous way of copying, which is called similitude and it's a very interesting concept you design any one thing and study it very thoroughly characterize it and then use the knowledge of the physics of the domain to quickly generalize it and in this way you can actually generate a class of designs rather than just one design that you have built and an example of that is the fan that you're seeing on the screen it was just built to some arbitrary dimension with an arbitrary number of veins veins are those wing-like things that you see there there are seven vanes in the fan and it was run at some arbitrary chosen convenient rpm and when it comes to fan as a engineering product there are only two things that we care about one is how much air flow meter cube per second is it giving and the second thing is uh how much of pressure difference can it develop these These are the only two things that you are interested about and you care about when you design. Now the text on the right hand side may seem forbidding, but all I want to draw attention to are a couple of lines there. Based on the physics of the fan, which is actually a special case of the forbidding Navier-Stokes equation that you earlier saw you can actually develop a number of relationships between one fan and another and normally these relationships are expressed as dimensionless constants why dimensionless because then you can scale them no matter how you scale the design the dimensionless constants don't scale they remain the same um so what you see on the top is the flow coefficient phi which is defined as mass flow rate i'm sorry volume flow rate q dot divided by n d cube n is the speed which is revolutions per second and d is the diameter now what this convenient number one thing I want you to notice about this is the numerator mass volume flow rate is meter cubed per second and the denominator n is one by second in dimension and d cubed is meter cubed. So it is meter cubed per second divided by meter cubed per second, it's dimensionless. The second thing I want you to see about it is you can actually draw a lot of insight. If I were to make n three times which means I rotate it three times as fast then this relationship tells me that I will get three times the q dot which means three times as much air I will get on the other hand if i were to double the diameter i will actually get eight times the volume of air and that's about the volume flow rate likewise there is another line below which is xi called the head coefficient that is the pressure difference divided by n squared b squared uh if you are quick with with dimensional analysis you will notice that this is not dimensionless it is actually kg per meter cube but actually in the physics there should be a density in the denominator which is the density of air but since this is a in this particular application we are dealing with air at normal atmospheric pressure that has been dropped so it's not a dimension dimension less constant but still it is usable useful and what this tells us is that if i double the diameter then the pressure difference becomes four times whereas the volume flow rate would become eight times likewise the impact of changing the speed so with this i can I can get insight into what a change in dimension diameter or the speed which is n will do to the two parameters I'm interested in which is the volume flow rate and pressure and conversely if I'm interested in a volume flow rate and pressure combination which is different from this single fan which has already been studied I can very quickly extrapolate what the dimensions must be. So this is in some sense a copy paste but done with a little more engineering rigor. That's what we call a similitude. So now let's go back to the beginning of where we all came from. I had already pointed out that what really makes a difference is not the tools, techniques and equations, but the intuition which gives birth to an idea. And what is really the root of that intuition? Very broadly, one can say that somebody more experienced has a better intuition. And what does that it experience mean it means I have seen many designs of this kind in this domain which I'm working in I know what things can go wrong what kinds of problems will happen and when I design the solution I can be mindful about avoiding all of them that's experience and I have a lot of rules of thumb which I can quickly apply so that I can quickly converge on my solution. So the moment somebody says, hey, this is the talk, then I say, OK, use a half inch shaft. And if he says, no, no, the kind of use case I'm putting it to, I expect the force to be double of what you're thinking. Then, OK, I know that the strength of the shaft is proportional to the area, which means I must make the diameter root two times. And then the person making the engineering drawings in my office comes back and says, you're given such an odd size, half inch into root two. There is no standard bearing available for this. Then I know, okay, refer to this handbook and it will tell you what's the nearest size and choose that. So I can make quick progress like this. This is what intuition is all about. okay refer to this handbook and it will tell you what's the nearest size and choose that so i can make quick progress like this this is what intuition is all about but when you look at the whole thing what strikes me is this is that this is all some kind of a pattern recognition which is what artificial intelligence is all about so let us look at some instances where people have tried to apply artificial intelligence to engineering problems. The first one I'll talk about is air drag. Before which I'll tell you why air drag is such a big deal. Air drag is the resistance that air offers to any object that's moving in air. And since we all live in the atmosphere, we are all moving in air. And our automobiles are moving in air. Windmills are moving in air. A drone is moving in air. An aircraft is moving in air. Practically everything is moving in air. And the thing about drag is that the faster you move, the more the drag becomes. An intuitive way of understanding this is that if you dip your arm in a tub of water and move it about, you will hardly feel any resistance from the water. But if you try to move it fast, then you immediately know it's a lot more difficult. And if you try to move it really fast, you could injure your shoulder. So air behaves in pretty much the same way. So no matter how powerful an aircraft is, how powerful an automobile is, the upper bound of how fast it can go is finally decided by the air. It can't move faster than that so measuring the air drag and designing a product in such a way that air drag is as low as possible depends on the shape and it's a very complicated and delicate thing to design but in this difficult problem there is a very interesting research paper published by a company called autodesk they are very popular in the engineering domain for different computer-aided design tools drafting tools modeling tools etc that they have commercialized like auto cad autodesk inventor things like that. In 2016 there is this paper, if anybody was interested I can give the full reference to the paper later. They tried to address this problem by building a surrogate model of the physics. What I mean by surrogate model is it doesn't implicitly have the physics of airflow and drag and things like that but it tries to build a neural net that mimics the behavior of the physics and how they went about doing it is the they represented the design the distance of the all the points around the object as a signed distance function which means you define every point by the distance it is away from the boundary of the object and give it a positive sign if it's outside the object negative sign if it is inside and if it is on the boundary it's of course zero that's a sign distance function and the flow of air around it was also modeled at every single point as a field with vector components to it and then they did the convolutional encoding and decoding of the fields and used some very simple problems which are very easy to solve in the conventional methods of solving they just used circles triangles quadrilaterals the most complicated thing that they ever used was a dodeca header which is a 12-sided polygon and these are all fairly simple to solve and they use a number of these simple shapes and in different sizes and generated a reasonable data set and after that they straight away went and applied it to complex shapes like automobiles and the results were amazingly perfect startlingly good in fact what you see on the left hand side is the conventional method of solving the problem using finite element analysis using some techniques that are detailed in a field called computational fluid dynamics lbm stands for lattice Boltzmann method and that is in some sense the ground truth of how the air drag would be and what you see in the column in the middle is the prediction made by the CNN As you can see the difference between the two is very indistinguishable and the error. The difference between them is what is captured, except for a few spots that you see brightly colored the error is almost not there. And following a similar approach a bunch of students from a school of computer science in Switzerland developed the bicycle manually pedaled bicycle which broke all world records and went at 85 miles per hour I will just show you a one- minute video clip of how they went about doing this my program is based on rational system that learns to develop intuition you can then optimize the shape against the best possible performance. In this case, we are provided by engineers with constraints that have to fit inside a shell for a neurodynamic pipe. The standard machine learning algorithms used to work with our lab take images as a result. In this case, they report a text file that is very easy to handle by a machine learning algorithm. However, for engineers working in this domain, they use what we call a mesh. Mesh is a very large graph with lots of dots that's not very convenient to handle for a standard machine learning algorithm. What we had to do is to develop a machine learning algorithm that is able to handle this kind of input and to learn the laws of physics from this. Neural Concepts is clear enough that commercializes this technology. and learn a lot of new stuff. Your concept is to use the that commercializes . Indeed, it can also be applied to utilize the . This technology can also be applied to optimize the process of commercialization . Okay. Okay, by the way, if any of you want to ask any questions, feel free to interrupt. You don't have to wait till the end. If you have any questions so far, you can shoot or I'll move on to the next topic asif shall i move on yes please do move on and this link we can post these links both to youtube and to this zoom towards the end all these links interesting links okay so the next engineering application I want to look at this yeah somebody speaking yeah what was this the concept that you just showed in the in the demo was this product I'd and further bicycle I don't think it will sell if it's made into a product because the way they defined the requirement was it must go as fast as possible and this record breaking I think it's officially there in some Guinness Book or something like that they did the trial in Nevada, but they did not factor in things like user comfort. So really in a very prone kind of position, the rider has to sit. This speed was breached in a 200 meters stretch, but I don't think you can travel for an hour or something in that kind of an uncomfortable position and probably if there is a strongish gust of wind on the side you may topple so a lot of those things were not part of the spec of this model it was just a very one-dimensional focus on achieving maximum speed so I don't think they have commercialized, but I could be wrong. In other words, that concept wasn't used anywhere else. I think it's about the definition of the problem. They defined only one metric and maximized it, but you should have had a combination of metrics for it to be a commercial product. they defined only one metric and maximized it but you should have had a combination of metrics for it to be a commercial product yeah i was going to say that the constraints were not used here properly you know the typical constraints for a bike design was not yes yes uh but again uh when you are trying to be a formula one racer you are not looking for rider comfort you are just trying to reach the speed so they did it in the in that spirit yeah so topology optimization is a very big word which means something very simple whenever we build something in engineering we are trying to get away by using as little material as possible one because it will reduce the cost of manufacturing but actually reducing the weight also has other advantages in the hands of the user for example if i'm making a spacecraft or electric car the lighter it, the less fuel I'll consume, smaller the battery needs to be and things like that. So reducing the weight without compromising on the strength is an important requirement and it's like an eternal holy grail. The conventional way of doing it is that you set up a framework to investigate which parts of the material are not being used in the sense that no stress is being applied there. So it is simply lying there and not doing anything useful and once you get an insight into that you can remove those places and keep material only in places which are subjected to stress so what you see on the right hand side is some kind of a framework like that and then you can give it to a computer it will generate millions of meshes and solve and point out which exactly are the areas where you need the material. And in this way, you can remove material from everywhere else and you get something which is much lighter. As you can see visually, the beam that you have on the right is much lighter. By the way, it's a cantilever beam, which means the red bar on the left hand side is firmly grouted to a wall and on the right side it is subjected to a load. It must not flex or bend or break and the same structure I can construct using the geometry that you see here. I don't know if you can see my mouse cursor and you can thank you. So you will use much less weight if you did that without compromising on the strength. So, Karan, this is Avijit. Just one question, kind of going back a little bit in the things you said before. I was just thinking that the model they designed, in the before they try to test or predict on the actual cards they you said that they use some simple shapes to come up with the model right some simple shapes like triangles quadrilaterals maybe I think maximum they went to dodecahedron that's what you said i guess yeah but the question is that's my that's the fundamental question is how do you know what is what is simple there uh in the sense how do you know that that should i go to dodecahedron or should i just stop till triangle and uh quadrilateral stocked in triangle and quadrilateral how much you can go there for making sure your model will work okay so let me clarify the sense in which i use the word simple if i gave the same set of problems to a conventional cfd solver then i will get a solution in a matter of minutes, not hours. But if I gave the same solver shape like a car, then it would take hours to give me a reasonably good result. So in that sense, the triangle or even a dodecahedron is very simple. For a design engineer. I'm talking about a conventional engineering designer than a shape like a car or an aircraft wing and things like that. But the counterintuitive thing was that the CNN learned from these very simple examples and was able to extrapolate extremely well to very complicated examples. Okay. Okay. So what you're saying is that that's the surprising fact. It was not a priority in the sense they did not thought of solving the problem using that. They just did it for maybe fun or something like that. And it's surprisingly what the explored and saw how it works and they were themselves surprised by how it's working oh we published it as a paper okay i get it all right thank you okay so the same problem of uh cantilever and weight reduction was tried using a convolutional neural network to figure out the optimum geometry. Just two inputs were used. One is a volume fraction, which is the percentage of weight that i want to throw away and the other is the poison ratio which is just a descriptor of the material how stiff the material is and interestingly both of these they figured a way of representing it as an image so that it can be fed into the cnn fed into the CNN and this is the architecture the input that you see the square on top the weight fraction is represented as a represented as a shaded square the yellow square is the weight of the material that I want and the blue square is the weight of the material that I want to remove and likewise the Poisson ratio which is just a number typically going up to 0.5 was shown as subset of the area of a larger blue square. So the yellow represents the Poisson ratio the larger the yellow square inlaid in the blue square is the more the poison ratio now with this as the input they constructed a CNN architecture to get an output image which should hopefully correspond to the shape of the cantilever that you finally want after of course training it using some standard known examples and what they've got is the left hand side column is the ground truth and the right hand column is the prediction by the cnn as you can see again here it's amazingly close for different poison ratios the first row is 45% not the poison ratio volume fraction first row is 45% second row is 55% and the third row is 65% and in all these cases the conventional way of figuring out the right answer and the answer predicted by the CNN are very close. And this is actually work done by IIT Madras, which is the institute I'm associated with developed by a couple of students there working under a very brilliant professor called Balaji Srinivasan and this and a number of probably other related techniques the same Autodesk company that we earlier talked about they have they and many other people have come up with different tools that a practicing engineer can use you don't have to read what you see on the screen but it's just to illustrate what an article from an industry magazine look like and they're talking about this thing called generative design which offers up designs to engineers design engineers when they just take their requirements you just say I want a design which will do ABC and the software with AI will come up with solutions so what they are really talking about is not solving a problem but actually explore all possible solutions to a problem and come up with those that are the best candidates for the design engineer to adopt So this is a very Significant paradigm shift from what is conventionally known as computer-aided engineering and In the website of Autodesk I found that they are working on some such tools. I will let you watch a very short one and a half minute video. Dr. Raghuram G. Kannan, you'll have to share your desktop sound. It's a setting, otherwise the sound won't come through to us. Okay. So if you... What do I need to do? There is a way, if you go into your sound, you know what the audio is, there'll be a thing that says share sound okay do you see that in the zoom window right in the zoom window at the very bottom you'll see some controls audio settings is there yes do you see one of them is share the sound share system sound or desktop sound I'm afraid it's not there in that menu there's select a microphone and same as system what the speakers are test speakers switch to phone audio leave computer audio audio settings so should it bring into audio settings no I don't think that is the one. It's all right. So I'm not able to identify. There is a setting I'm not able to identify. Let me see if I can do something here. Unfortunately, I can't. Okay, there is the share computer sound I found in another place. Yes, that is it. Let me try that now. To raise the level of design to what has not been possible before. Are you able to hear? Yes. What does good design look like to me? Good design should have a very positive impact. It's what makes us better. We have been doing good design. We want to raise the level of design to what has not been possible before. The challenge with the way design has been done so far is that it's limited by outdated rules and assumptions, the designer's past experience, and our imagination. A product designer wants the best possible design solution while not jeopardizing cost. The risk we run in that resource constrained environment is that we don't explore as deeply or as richly as we might want to. We all benefit from good design. Generative design creates the opportunity for us to ensure that we're diving deep and that we're understanding all the available ideas that might lie before us. Because the limitations are gone, the handcuffs are off, it's providing me solutions but not just one solution, a whole multitude of solutions. Generative design has the ability to produce a solution that previously could not be conceived. By integrating artificial intelligence, we can for the first time use the term CAD in its true meaning, having the computer as a partner in the design process. You're not concentrating on mastering a tool any longer, you're just mastering the problem and you're letting the computer do all the work. Imagine being able to design the perfect solution every time. Being able to design without fear of what you didn't come up with. Imagine being able to design with augmented intelligence. Create products, buildings, and cities that are intelligent with a fraction of budget and time. At the speed of creativity and without limitations so if you notice um can you all hear me yes we can hear you yeah beat of creativity is that our intelligence to the next slide so they referring to experience as a limitation in being able to come up with the best possible fresh so this is just a screen from their website I will not go into it it is just to give you a feel of what what kinds of things will possibly be available tomorrow any of you can visit the website of autodesk if you're interested and i'll now move on to the next yeah i have a question here this is a widget again these are like this is very interesting actually this whole topic you're bringing up because i myself i started my career as an electrical engineer, I was a plant engineer and all that. So in the early part of my career, I had these problems basically. But later, unfortunately or fortunately, I moved into the field of software. And the problems do exist there as well. So the possible solutions, right? Computer is generating possible solutions they so when doing that now i understand our experience kind of narrows it a whole lot maybe if computer can generate maybe 50 possible solutions because of our experience that baggage we carry we're probably just looking at two or three options for various reasons because we are lazy that could be one reason right yeah sorry about that Yeah, I'm sorry. Yeah. Yeah. So, sorry about running low and I just wish you don't. Yeah. Yeah, no problem. So, yes. So for various reasons, our options are mainly limited, maybe because of bias or arrogance or laziness, whatever may be the result. Now, computer doesn't have that problem, I think it reports still so that it doesn't generate something entirely nonsense. Does it, is it, are there some rules, some constraints at least fit into the computer when they're generating those 50 different options it is giving us we couldn't can't imagine. So I think the trick will be in setting up a scoring system by which the computer can also evaluate a design before offering it up to you. But are there some rules of physics it is dealing with there? I mean, it's a question of what I wanted to optimize. Like we already saw in the case of the bicycle, they simply gave one metric to it. But I could give a plurality of metrics saying I wanted to be a little more roomy. I don't want the back of the rider to be inclined more than some angle because that will make them uncomfortable. I could set up a more sophisticated cost function and then it will give it accordingly. Okay. Okay. So you there is so so that is also integral part of, you know, designing such solutions, basically, where like how much you want to constraint so that you know you don't waste time going through all those options. Yes, yes. Okay. Thank you. In fact, the topic I'm coming to will probably answer some of the questions you raised. Yeah. So unless anybody has... Kannan, so I have an observation. So I wrote like 1992, I worked for Bajaj Auto after doing my engineering from MIT Chrome Pet. Okay. Yeah. So there, it was just by observation. So that time Bajaj Auto used to manufacture scooters, motorcycles. So for scooter, just an observation that time was like if you go and fill up the petrol, you won't fill up the full tank. You'll go and you'll fill up for like 100 rupees, 200 rupees, but never the full tank. You will go and you will fill up for like 100 rupees, 200 rupees, but never the full tank. So one of the suggestions I gave was, okay, so why don't we reduce the size of the tank? And then like for the scooters, we reduce the size of the tank by a liter and a half. And that has had a saving of like more than 10 crores that time like in 1992 on the raw material cost raw material as well as the manufacturing yeah so but that will be just based on the observation like outside which was not kind of relevant like to the engineering design but yeah it just happened that like company saved a lot of money that's very interesting so you have done a topology optimization yeah I didn't know like that time that that's what it is called but but I use that I may use both like AutoCAD and and cam for the like I initially did the design and then also took it to the manufacturing to do the proof of concept. That's great. Yeah. Okay. So let me go to the next topic, which is about closed loop control. And I'll just quickly explain what the conventional schema is. Many of you are engineers, I realize with actually working experience in engineering. So I'll go a little quickly. So the common way of controlling anything, for example, what the box given here called the plant is the thing that we want to control. And it could be anything. It could be a car. It could be a drone. It could be a robot that is walking or it could just be the air conditioner in the room. Anything is generically described as a plant or a process or something, which is what we want to control and the way it is done is that let us say it's an air conditioner i'm in a room i want the temperature to be 25 degrees celsius uh so i this is the input that i give and that's called the reference i set there that it should be 25 degrees. Of course, if I didn't have all of the setup, I would simply walk up to the air conditioner and turn the knob and set it somewhere. But that's an open loop control. Here what I will do is I will define what the temperature I require is and then I have sensors in the room which will sense what temperature and let's say they find it is 28 degrees and the sensors will give the feedback that the temperature is actually 28 and not 23. so this not 25 so plus 25 minus 28 means that there is an error of minus 3 and that error will go to the controller and the controller will then apply a corrective signal to the plant which is commensurate with the measured error. I'm using the word commensurate. I'll explain in a moment what it means commensurate to the error of minus 3 degrees and the way the controller most commonly does it that it will create a signal which is proportional to that error minus three which is what you see in the first block called p and then there is another block where it adds up the error historically up the error historically that has been happening and the accumulated error proportional to that accumulated error it will generate a signal and that's the integral error if one may call it that and another thing that the controller will do is see whether the error itself is either increasing or decreasing and based on the rate at which the error is changing it will add one more signal. So there are these three signals and we add some weights to each of those signals which are called Kp, Ki and Kd and then the composite signal is given to the plant or the process to correct the course corrected. Now, the trick in this whole thing is how what weights to assign to KP, KI and KD. And that is a very skillful act of tuning. I don't think any of you is old enough to remember. Even I am actually too young. Days before digital electronics, when electronic appliances were all analog, any of you is old enough to remember even I am actually too young in the past days before digital electronics when electronic appliances were all analog they all have to be tuned manually yeah and skilled experienced people were very good at it whereas others will find it impossibly hard plant engineers had to do that I remember controlling many reactors and you know this thing we have to go and change the knobs and all these things. Yeah, frustrating. The P the KPK and KD are really three knobs and tuning them is very very difficult and artful though there is some mathematics to it and all that practically it's very difficult and so in if I want to apply some method in the madness then I try to build a model so using laplace transform KP is a proportional signal the integral is 1 by s and the differential is multiplied by s and the plant itself I have some reasonable internal idea of its internal workings. It's not a perfect idea. If I knew perfectly how the plant is behaving, then I wouldn't need any of this. I can just directly calculate what is the signal to be given. But I have a semi-perfect understanding of how it works, but it is deviating in its actual behavior. So whatever I know about the model, I can model that into this box that you see here with the label called model. And then I can solve this equation and tune in some tool like MATLAB or something to see what is the best value of Kp, Ki and Kd. So all of this is a very tiresome and difficult operation partly also because we don't know enough about lot of the physical details of the inner workings of the plant now there is a way to deal with it using reinforcement learning reinforcement learning is as you all know it's not there's no data to begin with. So it is not supervised learning, nor is it unsupervised learning. You simply give a score that the system has to either maximize or minimize. In the next two, three slides, I'll be using screen grabs from a very brilliant control engineer whose videos I recommend you should see. He is based in Seattle and I follow him on Twitter as well as YouTube. Brian Douglas is his name. So he describes the problem of a walking robot which needs to maintain balance and of course maintaining balance does not mean it is static, it is moving all the time, it is moving according to a defined trajectory which we don't want it to deviate from and in order to maintain its movement along the trajectory in a balanced way. We have to actuate the motors by giving commands to the motors in the robot. And it's again a typical control problem where I have some understanding about all the boxes that you see there, but it's not perfect. And there are a lot of external disturbances. There could be a strong gust of wind blowing. The road may have a gradient there could be undulations in the road etc etc so i will have sensors for the position i may have cameras lidar which sense the position they look for obstacles in the front and i can have accelerometers which will sense vibration and gradient. I can have sensors that measure the wind speed. And using all of that, I set up a complicated feedback loop, which is the conventional way of doing, and then I try to control it and keep it on a balanced path. on a balanced path. But using machine learning I can squeeze all the things that you see in the yellow box into a single neural net to which I only feed the observations which are the sensors coming from the signals the signals coming from the sensors and straight away it will give the motor commands. So this is just an alternate representation of this control problem. The interesting thing about this is that we don't even we stop even making a distinction between the plant which is the robot in this case and the environment which could be the road the wind and a tree on the way and all of that as far as we are concerned anything that is outside the neural net is one box and so there is this agent we have supplied it with a policy and it explores the environment and using that it learns and updates the policy and after some time it gets good at doing this so there is just one box which is practically the whole universe that we want to control. And the interesting thing is that this is model free. Just as we earlier saw that I started off by saying the experience of a design engineer is the source of all the good designs. And later on the video talked about that as being the biggest liability same way because our knowledge of the inner workings is so imperfect when we model in an imperfect model that could become a source of instability itself so when we do totally model free reinforcement learning, we are just letting the AI system figure out how the plant works and how the environment around it works instead of trying to bias it with some model that we are left with is an agent and to that agent we give a reference which means I can say that I want the robot to walk in this path at this speed and the agent knows what commands to give the motor and the robot will walk precisely the way I want it to walk. So there is a project related to this that I did in my company Microspin. Microspin is a company that I founded and we make textile machines. Typically we handle very delicate materials, fibers like cotton and other things and they had to be handled with care otherwise it simply breaks. So one of the problems we have been having is to have precise control. Any machine that we use has multiple motors and they all have to run in sync so for purposes of our experiment we we said we will model the motor and everything else it drives one motor and everything it drives as one system and if you can get that right with one system then i can do that for multiple systems so an entire machine may have three or four motors each of which is uh driving some mechanism and they all have to move in synchronization and the mugshot you see here is of srikant he's a young engineer uh one year ago he did this as an internship project uh at microspin i think srikant is listening in hi shake on your there at my Crispin I think she can't is listening in hi Shagun you're there okay so correct me if I'm saying anything wrong I only copied from your project report and he came up with a very novel he had just completed two years of his undergraduate program in engineering when he did the thing, he had to learn everything from scratch. He came up with doing reinforcement learning through the back door by setting up two RNNs, Recurring Neural Networks in sort of competition with each other. So let me just describe this block diagram for you to understand what we are trying to do. What is described here as a motor is really the motor together with all the mechanisms that it is driving. And what I want to do, what I want to know is what voltage must I apply to the motor so that it runs at my desired speed. The desired speed is what I know. I know nothing about the voltage that I need to give. But in response to the voltage, I know that I want the motor to run at a speed which is exactly equal to my desired speed. And the speed itself is time varying. It is not constant. And so conventionally, I was doing it using the PID control where I tuned the KP and KI parameters. But what we did here is that we first set up something called RNN2 and that's in parallel with the motor and by supplying an arbitrary series of voltages, some voltage waveform and seeing how the motor speed is responding in relation to that, I can train this RNN to mimic the behavior of the motor if I simply set up a cost function that makes the difference between these two, zero, which is the cost function that you see here, omega naught minus V and. By the time I train it actually training using a motor is very difficult because I had to run an entire machine and log the data and then supply it to the RNN. So I can't do it too many times too often. So I think in the course of about two or three hours of running. Srikant was able to capture about 70,000 data points with which he was able to train the RNN2. The more difficult thing is to generate a voltage in response to my target speed. It's as you can see the inverse problem uh but the problem is that the behavior of the motor in response to a voltage depends not only on the voltage but on what speed it's already running at and its own inertia and friction and a whole lot of other things so to be able to figure out the inertia and friction is not easy at all i could take some measurements when the machine is addressed but when the machine is running those values will again change typically so the best way to figure out the inner physics inner physics of the motor is to let an RNN figure that out. So what we did is that we trained the RNN1 by using RNN2 removing the voltage from the loop altogether. There is only RNN1 and RNN2. There is no motor. So this has been removed and this means that at the speed at which a computer can run i can run the training cycles i can give a number of inputs and get outputs and set a cost function to zero which i am doing by setting the difference between v and i to be zero in the second cost function. So once this training is complete, RNN1 has learnt in response to an input which is the reference speed, what voltage to provide so that rnn2 delivers a speed which exactly matches the reference speed now if i take rnn2 out of the picture and directly connect rnn1 to the motor the motor will run at a speed which is exactly matching the reference speed so without using kp ki and tuning and all of that i have achieved my objective of controlling the system a question could be why are you using a recurrent neural network so as i already told you i need to figure out what the inertia and friction and all these things do in control terms all that they affect is the time constant means how responsive the system is to an input like voltage so I need to remember the recent history of its behavior to so to speak figure out its responsiveness and then appropriately apply a voltage so that's where we chose a recurrent RNN because it has this quality of memory and it can be modeled using some simple tan hyperbolic kind of layer so I'll now show you the results of this project that she can't did first I will show you what were the results with the conventional PID which is the before as you can see we were not doing too bad the acceleration and the deceleration are matching very closely. This is a conventional PID tuning where through trial and error we figured that Kp is 0.35 and Ki is 0.45 and Kd we had set it at zero. We never use Kd because Kd is very sensitive to noise because it is responding to rate of change of signal. So we seldom use it. The acceleration is matching pretty well at steady state, which is the horizontal part of the graph. The speed is exactly perfect, but the bothersome thing is that during acceleration, the actual speed is a little bit above what I need and during deceleration is the exact opposite. For me, it's a very serious problem though the error is very small because when I'm handling material, which is very delicate and fragile like cotton If the error that you are seeing in speed, let us say is one and it is constantly one over 10 seconds, let us say. The distance error that it will result in is one every second, which means in 10 seconds I will have an error of 10. So what I'm really dealing with in my practical application is the summation of all the errors or in other words, the integral of the error. So the integral of the error is very high and it will just worsen things over time. And this typically is a problem when I'm starting up my machine. It is starting from rest and trying to reach a steady state before it becomes productive. But because of this error, I can never start the machine. So though I can claim that my machine will run perfectly and very productively when you get it running, the problem is the user can never get it running. So that's not a trivial problem. So when we use the RNN, you can see that again, the match is not perfect. The acceleration overall is good. The deceleration is overall good and at steady state the speed is matching very well. But the nice thing about this is that the errors are a little bit up and then a little bit down and they're cancelling out. So the integral error is actually zero and that's what is important in my particular application. I'm not saying that's true of all application. So in that sense, this method worked first. Is there any unless there any questions I'll move on to the last topic of the day. Okay, yeah, go ahead. I'm saying, let's move on. Okay. So this is about a work that I'm currently involved in. I am building the powertrain for electric vehicles vehicles which includes batteries and chargers and motors and their controllers I'm going to specifically talk about design of motors so typically somebody would come to me and say this is the vehicle that we have gross vehicle weight thousand kilograms it must go up a gradient like this and so on and so forth speed all of this but of course the vehicle runs on gas uh i want to get rid of the engine and go electric so can you build a motor verse and yeah i will start trying to define what kind of a motor the vehicle needs. As far as the motor is concerned, there are only two useful things it does. It delivers torque and it delivers speed. So if I can know what torque and speed I want, I have pretty much defined the motor. Then I have to attend to finer details like efficiency and all that. So from the vehicle specs to get to the motor specs is very simple just some kinematics and nothing more complicated than f is equal to ma and i can do this and if i persist with this calculation a little longer then i can develop what are called performance curves of the motor at different speeds what are the talks i will get how much power it will require and things like that and one other thing about vehicles is that there is what is called continuous operation but then there are situations when i will need the motor to go beyond the spec for short periods of time. And that's also an important requirement. For example, I'm driving on a highway and cruising at a fairly high speed. And then there is one vehicle in front. I just want to get ahead of it. So for a short while, I want to rev up the speed and go ahead after which I can settle back to my own comfortable cruising speed. Then for a few seconds, I want to go past the normal speed limit. Likewise, if I am say parked in a parking lot and I want to get out of it into the road, but there is a steep ramp there. Then for a few seconds, I will need to climb a steep gradient by delivering a torque much higher than normal. But once I'm out, I'm fine. I can just go on a level road. I don't need the torque anymore. So both of these are important and I can define all of this based on whatever the present vehicle specs are. So far so good. No problem. And then I have to now figure out how i should build the motor and so when i try to build a motor there are a whole lot of design specs which i'm free to play with i can change the number of poles number of slots number of magnets thickness of the magnet dimension diameter air gap a lot of things The kind of windings I do. There are many things that I can do in terms of design. So I use my intuition, what we have already discussed, based on past knowledge of what has worked, what has not worked, et cetera, and put what I think are the most likely candidates for the different parameters to get a good motor and when I then supply that design to an FAA solver it will do its calculations and give me a lot of numbers that specify the motor for example what is written here as ke is called the back a less constant KT is the torque constant these are all important parameters that define the how well the motor will perform and the solver can also give me the performance curves and everything now when I look at these curves they look very much like what I showed you just now. So probably I have designed the right motor. I took 10 days to design it. Every day I was trying at least two or three alternatives. Each time the solver will take two or three hours to then give me these results and progressively I have kind of converged on a design which looks like it's matching all my requirements but before we look further I just want to step back and reflect on what I did in the process of design I just used my intuition which means arbitrarily I came up with a design then I modeled it in a solver and generated the performance specs and now we are going to see how well the performance specs match what I originally set out to get. What you see in the dotted lines are the specs generated by my design through the solver as you can see they are not exactly the same there are some places where for example here the talk is falling short of what I want to get but here it's a lot more so on the whole it seems to be doing very well is what you may think so neglecting this small lesser talk which can probably be fixed on which probably the customer will live with you may think that this is all a very good thing. It's delivering a lot more talk at all these speeds, but that's not an unalloyed blessing because the moment it's delivering more talk it means it will draw more current it will consume more power it will generate more heat it will drain the batteries sooner so i will need to put bigger batteries i have to oversize my electronic components and that's going to push up the cost and maybe my motor is heavier than it should be because it is capable of delivering so much more torque than I need. So is there something I can do to right size the motor, then maybe it will become less expensive to manufacture, maybe it will be lighter, maybe it will be smaller. So it's not really optimal. And just because something is surpassing a spec doesn't mean that it's better. It could come with its own set of issues. It could come with its own set of issues. So now what do I do? I have to change something in the design. But already I have worked for 10 days. All the things that were obvious or easy to change, I have done all that. All the low hanging fruits have been picked. Now it's going to get harder and harder to do any improvement. And when I change something, it is likely that I will create some new problems. I may end up solving one problem and I have some other problem. So it's going to be really difficult and I can't see light at the end of the tunnel. Can AI help me? I don't know whether AI can help me or not yet. But what I do know that if somebody can set up an AI solution for this, then I can provide the AI with inputs either as an image or as a vector I can provide it with training data sets I already have a whole lot of simulations some that work well some that don't work well all of that will be useful maybe I have 20 30 simulations I can give more More interestingly, I know enough about motor in the form of similitude. So every design simulation that I have done, I can use that to generate a class of designs. Maybe I can generate hundred designs, which means if I start with 30 simulations and then apply similitude I can end up with a data set of 3000 designs. What is the architecture that I should use for doing motor design? Before we can even talk about it, we should be clear about the problem that we are trying to solve actually there are two kinds of problems that we are talking about problem one is if I give it a design can it predict the performance this is pretty much like what the FEA tools are today doing if it can do that but if you can do that more quickly then it's a saving on my time that's good i can do more iterations but what will be really awesome is if i give the performance requirements which means the original specification curves that i derived from the vehicle if i can give it that and the AI could actually do the design which is the inverse of what the FAA tools are today doing that would be really awesome but probably more difficult so what is really the best architecture for this we don't know artificial neural net convolutional neural net recurrent neural net, convolutional neural net, recurrent neural net, generational adversarial network, which I don't know if all of you have heard of, which is somewhat similar to what Srikanth did. You set up two neural nets in opposition with each other, each trying to outwit the other. And one of them is called the generator and one of the called the generator and the others called the discriminator in our context the generator could be the one which does the job of a design engineer it generates new and new designs and the discriminator is what the solver does which tries to show how good or bad the design is and the discriminator is constantly trying to prove why a design is failing and the generator is constantly trying to come up with a design that will not fail. So that is probably one of the promising architectures, but I really don't know. We are at a very early stage. If any of you have any suggestions to give, I'll be very happy to take them. And if there are any other questions about whatever we have covered, I'll be happy to take that too. And I think one of the people listening in on this is my colleague nitu she and her friend put together this deck of slides at very short notice i want to thank her also and thank you all for your time uh thank you very much i'm open for questions yeah thank you karen for this excellent talk thank you thank you, Asif. And guys, this could be an excellent project for our Deep Neural Network Bootcamp that's coming up. If you can make a contribution, it would be great as a project to take up. Yes, but not on the design part, but another observation, like, so when I was working at Bajaj Auto, so that time, So this was related to a lot of trucks coming into India, like from the Japanese truck, Italian trucks coming into India. So Tata had a truck, a 4-tonner truck called 407. So what happened was, so that time based on the initial design, so Japanese launched similar trucks in India, but it failed. So a lot of like the Nissan launched a truck and then there were a lot of other companies which launched a truck and then there were like a lot of other companies which launched a truck. I still collaborated with someone, I forgot the name, so they launched the Japanese version of the truck and they all failed. And then one of the reasons that came up was even though the requirement was like for the four-turn, like the 407, the four-turn truck, end users that we're using it to like to like more than eight tons or ten tons so they designed the system for four tons and it came in it in the field it failed because then they didn't anticipate the like the usage or the or the what you call the the pattern like how it is going to be used in the rural part of the India or yeah or other places so so that is something like to be thinking to think about like we're designing this but like depending upon where it is going to get used how who is going to use it like so there has to be something uh to be thought about actually there is a lot more to design than yes that's why i captioned my thing as engineering design uh because in the broader sense it's about understanding the customer having empathy for the user and that takes a whole lot of things come but actually talking of aesthetics there is this watch manufacturer called Titan it's part of the Tata group yes you may have heard of it they are using GANs generative adversarial networks to learn from all the watches they have designed in the past and come up with new designs. Yeah. So, and of course it's a kind of soft engineering. It is not very core engineering. It's there is some engineering involved at the level of manufacturability and stuff like that. But it's primarily something that has to look nice. It is aesthetic design design which is most important but in something like watches i was surprised that they are building a solution that will help them come up with a number of designs yeah Guys, any questions? Chanda, are you finding any questions on YouTube live? Nothing. I was monitoring it. I think we have a, you're able to hear me, right? Yes. Yeah. Yeah. No, no, No questions on YouTube live channel. So, yeah, Kannan, you said this data set would be available if we want to use it for running with the problem. So, yeah, I think we should use it. On the motor, you're saying, yeah? Yeah, I can provide that. It's not like I have it in terribly organized form, but I can put it together if anybody's gonna work yeah we could put up a private github into which we cannot trade over the data and clean it out yeah I have a question this is sort of I have a question to you both to Asif and Canon so in in the world of big data and machine learning there is this aspect of the architecture where we ingest the data. There are different topologies, different technologies that we use. Currently, Kafka is pretty hot. Before, there was RabbitMQ, etc. There are a lot of schema issues while ingesting the data that we face, and this is a well-known fact. ingesting the data that we face and this is a well-known fact. My question is can machine learning maybe reinforce learning because at the first site we don't have any data, let's assume that. Can that help to ingest the data with 99% accuracy always and negate those schema issues? 99% accuracy always and they get those schema issues. Kannan, let me field this one. This seems to be engineering specific. So there's an answer to your question actually. It is called the capacity. See, when you take in data, streaming data into Kafka streams or these things. There are multiple aspects. For example, Kafka, it gets a scalability because it uses the operating systems internal cache. So how many number of nodes have you scaled the cache? Have you scaled the Kafka? How much memory you have given? What is the velocity you anticipate and you expect based on early velocities? And what is the consumer cycle, like how fast are the consumers consuming it? These are parameters. Now, one of the things that people have done is created adaptive systems. As close analogy is in the Oracle database, for example, there are hundreds and hundreds of parameters if you have ever played with the Oracle database. So one of the initiatives that was is that can the system auto tune for optimal performance and low error rates that is the whole area of work and it is quite successful actually so we one of the very fertile areas of applying AI so in simple terms the answer to your question is yes it can be done and it is not very hard it is very I've myself done it at the database level, for S-Base and so forth. So it can be done. Okay. Can you show some of the resources if you have research papers or something on this part? You can do it even better. Why don't we make it one of the lab works in our bootcamp? Perfect. Actually, yes. lab works and I boot camp yes any questions guys do am for you and yes fresh and going strong I'm I'm a late sleeper so I'm fine with it yeah yes thank you sir thank you thank you thank you very much thank you all of you thank you thank you thank you