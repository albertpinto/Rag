 Now what we'll do is, we still have a few more basics to cover. We'll start with line plots and univariate data analysis. These things hopefully will be quick because they are simple. At least some part of it you'll repeat after me so that you get practice of the basics. But after that, we will move a lot faster because we have a lot of visualizations to cover if you remember where are we we have done the wealth of nations only we have all of these things yet to be done right so we have a pretty long day so one request guys can we reduce our lunch to well I was thinking somebody suggested because most of us are remote and some of us are going home and so on and so forth. Could we reduce it to half an hour? That will save us time and we could actually try and end the day on time especially that will be helpful especially for people in other time zones in India, East Coast and so forth. Could we reduce our lunch break from one and a half hours to half an especially that will be helpful especially for people in other time zones in the east coast and so forth could we reduce our lunch break from one and a half hours to half an hour guys take it 45 45 minutes okay how about 45 minutes guys any objections to that anybody it's not possible okay so let's agree's agree to have only 45 minutes lunch break. Now we will do the line plots and univariates before we get there. So on we go. We changed and by the way this gapminder will post it to the course in the break, in the lunch break. Let's now, so then now that you have practiced it on your own of course now you can have a point we'll go to visualization line plots using first of all of course the okay so what do we do for line plots? There is a date. Oh, this data you actually didn't post online. You have to give the URL, Kyle. You have hardwired it. Okay. Yes, I know that. You did that. So i could fix it right now one second another visualization partly bar sector the data i don't want to type the whole location um yeah it is available online i mean in the support vectors this yes yes it is available let me make sure that is indeed oh sorry source is equal to well okay and this is... So this is quite a handful to type in. So I'll just paste it. First, let's see if it runs. Oh, no, it's not track because it has a plus csv v is missing oh that's right csv is missing now uh main plus let me just oh there is a double quote here and let me just oh there is a double quote here and there's double quote while scanning literal so let me just put it in the same line all right let's try it oh i'm sorry it's starting out okay it should end with a single card now we are in better shape yes so i'm going to paste this onto the slack channel and the folks can just take it because it's not reasonable to do. All right, so this is data that's been curated by NASA about surface temperatures. Now, what it looks is not in absolute terms of temperature itself, but it's deviation from the norm. So it takes a certain value as what do you expect and then it asks how how much is the surprise how much is the deviation from the norm and it is looking at data from 1882 which is a pretty long history of data and we should see obviously today these days global warming is a universal concern and let's see if we see any patterns remember global warming also means doesn't necessarily mean that the temperatures will keep going up in many places for example those people have um avanti from minnesota should testify that global warming means very very severe vent, for example, right? Unusually severe winters, snowstorms, and so on and so forth. So it manifests itself in strange ways, and we'll see some of them. So we take this data, you see the year, you see the month, in this year, the 12 months, you see. Then you see the variation, January to December, and so on and so forth, the annual things. We look at that. By now, we have all become good at describing the data, it is all numerical data, so we don't have to do include is equal to all. And you can just do dot t instead of transpose, so this is again good synonymous with transpose this is a so if a numpy notation to say dot t then what do we do can we this is data right like let's say that we can see for every year at these values it would be worth plotting these lines for each year in that. So this is the line plot. You can see how the data looks over all of these intervals. It is just default. You take the annual change of temperature, or the deviations in temperature from the norm. And what do you notice? After a certain time, these deviations are all trending to, what was the x scale here? Data, oh, just the values. The x scale is just the values or the deviations. so when you look at this this it is it is projecting it out and drawing it for you and you can see that the temperatures do seem to be going up but obviously this is not fun creating a line plot is as simple as one line data gd dot so i will just wait here guys let us do this line plot we are plotting one column j to d which is essentially the average temperatures and we are saying okay let's go plot it and we are using the default style are we all here guys simple one two line is it you set the style to basic i mean default style in other words if you don't set your style that would happen this is how the problem you're looking at the column j hyphen d which is the average for the year and then your plot you're just calling it on the data dot plot by default it will plot a line can we move forward guys Have we all done this part? It certainly leaves a lot to be assumed and since nobody objected, so then we do all the usual things we do. We apply styles. So what are the things we like to do compared to this very basic? Binary and familiar territory. We would like to do compared to this very basic binomial and familiar territory we would like to resize the figure we would like to apply a ggplot theme good theme apply a bit of transparency for aesthetics add a title the xy labels i don't even see those uh you need to improve or if they were you want to improve on them here you don't see them apply latex formatting it just looks nicer and then use a tight layout and remove clutter so here is it you you created this plot style you put all of those aesthetic elements there right figure size 10 by 5 and so on and so forth so now two is to one ratio you do that let's go do that and see what happens and then here is the well the next element is this part guys we already have i'll just copy paste it to the uh it's like or could somebody kate are you copy pasting these things can Can I just? Yeah, I'll do it. As you, oh okay. Yeah, one of you do that. One of you do that. So this is just the style element, nothing fancy, so we'll just copy paste it into your stuff. It helps you keep awake, Kyle. But while you, while this is a copy paste, now let's plot it. All we do is see guys we are not doing something different it's plotting the same line part but we are being sensitive to the aesthetics what are we doing we are applying this style probably all of our parameters are super and we are saying it is still data dot plot but now we have added some elements. We have chosen a colour and anvil me. Legend, label for legend. And the colour has become royal blue. Interesting, I'm seeing this royal blue for after quite some time actually. In India royal blue is the colour of the ink we buy. I don't know do people still buy ink in india anyone know yes yes yes this was the color of the ink i spent most of my school years temperature please and so then let's do that. And this part I would recommend that you type in. This is word typing in. So let's type it in quickly, please. What is this doing? It is just adding to the plot, adding a little bit more labels and colors. Furthermore, it is also saying do show the legends. It is setting a title and a subtitle. You notice that super title, the overall title and subtitle, two statements. Again nothing unusual. By now these things should have become very familiar to you. So let's type it in, please. Now, would you please just type it in this much? This is just to help you develop muscle. By the way, this internal text, if you want to keep it brief, you can keep it free then you can remove the latex Thank you. do you need anybody needs another minute to type it in yes please Thank you. Kyle, I like your use judicious use of both title and super title now we move forward are we all done albert yeah i'm getting some error maybe maybe invalid syntax, maybe I typed something wrong, but you can go ahead. No, no, just inspect and see which line you're getting and try to fix it. Because this is going to develop further. So it's worth Oh, I missed the equal to sign. Oh, still an error. Inspect it line by line and see where you're at. Yeah, it's saying error is at where I have size 12. Size is equal to 12? Yes, global temperature. You must have forgotten the karma before no i do have those as well okay this part let me give this part then slide just the lower part since you're getting that part wrong wrong oh oh sorry i don't know why it's showing up so bad is that better okay yeah thank you i will. It's working now? No, I have to try. So once again folks, look at this thing. It looks as if it's a vast improvement over the baseline. Anyone else? Albert, are you there? Taking time, but hopefully it will work. Yeah, it works. Thank you. yeah so now what happens is you change the plot and you're looking at the temperature and you have changed the that this the year yeah the year as the x-axis so slight change. So, early on it was plotting with the index alone. That was not very informative because we want to see the year. So instead of having which data point it is because it's sequentially there into the feature it's not very other. Sure, so obviously we change it to here, it gets better, it looks like this. So that is only one small change. Now what do we do? We do multi-series line plot. So let's first see what we are getting at. There are seasonal temperature deviations. So these are the four things. So kyle what are the explanations for the symbols so um this is djf is december january february m a m is yeah march april may yes excellent so we are seeing the temperature variation for all of these. We have essentially grouped it by... So this is what we are going to do. How do we do that? We have these things. You look at the data. You have all the columns. Now what are we going to do? You are going to limit the data to these individual columns. this is one way the other way we could have done it is we could have done a group yes groups you could have grouped by that in the past we used to go by but this is fine so we do it we filter the data down for specific values okay of this and from there season name and from there all we do is we overlay multiple plots so this part multiplot i'm assuming that we are all here we are up to here guys the years yes up to the line the first one yeah so then this needs a little bit of discussion line the first one yeah so then this needs a little bit of discussion this is very simple you're just saying data.columns right and you're looking at because she happens to know that the column she cares about if you look at the data frame way up here yeah look at this um here you start with the first column here two three four five six seven eight nine ten eleven twelve thirteen fourteen and so you're starting from beyond zero this this would be in backstreet starting from a zero this would be here so you're seeing all columns Yeah, so you're seeing all columns here, what are these last four columns, what are their names. So those names, she gets now here. Say look at the 40,000 so you get this last four columns. It's just a way of extracting those four columns. If you wanted you could have just hard coded it or done whatever it is, but you just need the name of those columns, those seasons. Why would we need that? Because we want to, this is the thing, line plot. We want to cycle through each of the seasons and only render one line plot for that particular season limit the data to that particular season and just plot that data right so this in the world of those of you who do data or SQL and so forth this would be projection because you are projecting on the columns you're limiting data to the columns specific columns. So you take this data, now you do that, and now you're plotting it now this part of the code, I think it is good because there's. there's not much visualization aspect but it's about manipulating data and sorting out the four lines, I will just put it in a code block, which I hope, code block. Let's try our best here. Yes. So I can paste it. I can paste it to Slack. OK, if you want. So let's run this code block so that we come to this multi-line thing. So whenever you overlay a lot of lines, remember to play with the transparencies. If you don't play with the transparency, those lines will all start becoming hard to decipher, um season's definition is right there in the code uh do you see this line of columns right you just pick the 15th column on it's 14 minutes beyond like start with the 14 but indexing from zero which is one distinction guys all these languages java c c plus plus python they start counting from zero like it's a unusual thing then languages like fortran starts from one and julia starts from one so when you do julia when you do julia coding I don't know if you have an audience, I would love to do the ML 100 using Julia. You'll see a different form of indexing. So now guys, are we here? Sanjeev, are you able to reach this line? Okay, wonderful. So let's move forward. Then you look at something else. You have changed the temperature and you're looking at it at the granularity of the year. How does it vary by year? Right. The seasonal temperatures, how are they varying by year? Now here is by decade, so by decades, 10 years, I mean, sort of at the 10 year interval, more coarse grain view of this thing. So you're seeing the seasonal temperature far less granular. This is it. The trends are more obvious. Generally, what happens is that data, sometimes more data is less informative. It takes a bit of effort to see that it's rising. It is visible, but sometimes taking averages over this, and here it is values taken over decades. And later on, we will learn, or I give it as an exercise for you to do that you can look at something called moving averages. For example, when data is very fast fluctuating you can look at moving averages, maybe we can keep it for one of the sessions this week, how to render data as moving averages so anyway, this is data as is for that. data as moving averages. So anyway, this is data as is for that. So the code for this is yeah, I posted it on Slack. Yeah, season, you just go right there. Nothing more. This is just a data manipulation. The crucial line is this drop by decades. and then plot it accordingly. And then take the mean per decade. So this is, those of you who do, for example, Spark or anything SQL, you would be very familiar with this. This is literally aggregate by and so on and so forth. aggregate by and so on and so forth. So so far we are here. Are we all here guys? Next, let's go to the area plot. One of the popular visualizations that sometimes helps people get a sense of what's happening compared to the norm because we're looking at temperature deviations deviations can be positive and negative and often we get a much more sort of a visceral sense of it when you spill a bit more ink you make it into an area plot so this is the area plot look at this the x-axis is the year y-axis is the average annual deviation for that year what is the deviation from the norm for that particular year this is royal blue there is no need for stacking here it is there and the rest of it is exactly the same you know the title so let's uh color blue etc so this line of code guys can i expect that you can do it on your own this is easy isn't it yeah it is a minor variation of what you have so what i will do is because there's no new I'll assume that you can do it and we'll give you the count. Notice that because you use LaTeX and the mathematical notation, it was much easier to write decreasing. If you notice on the y-axis, LaTeek has very sort of excellent formatting for scientific mutations inside of it, symbols and math and so forth. So we go there. Next we can also use vertical lines as an alternative to the area of class for a sharper look. So we draw the vertical lines for each year starting from zero to the average. so this is it this is just a variant of the previous one what you do is instead of area you see see here what did you say if you look at it the method that you use is area but you could use v lines now V lines is not directly built into panda's plot yet. So you have to use matplotlib directly to that which is here. And then you do that again a minor variation nothing unusual here. So this code also we'll just give it to you. So you just paste it in your notebook and see if you can draw out the reliance. The only crucial difference is this particular line. So x is data, y minimum is when you show that NP0 is data, so it should, whatever it is, and y max, how many data points you have. You have given your minmax, right? You're just going ahead plotting this data. All right, let's move forward. Now we can customize. So now what do we do? Let's go and look at the results. You notice that when you make a plot like this, it's a little, all that you see is a lot of ink on the page. Maybe we can use color as a way, as a means to convey what is happening. In our minds, we always associate, let's say, a blue with cold, icy, and red with hot. So what if you color this by the value, whatever the temperature value is. Negative is blue and positive is red. And this is, again, what is this? This is a use of a color map you notice that. And so what you do is you take the value data minus this you take the range of the data, what is the range of the data. And then, what you do is you use a color you create a color map. cool to warm, which is perfect for temperatures and you divide it into that the values into that so that all we do is this particular thing this thing is the main change you give it a color map and you make the lines a little bit bolder line width is equal to three will make it bolder this looks a bit too pencil thin you make it a little bit bolder and when you do that everything else remaining the same you will get this and it conveys how temperatures have been changing over the years clearly our temperatures were going down and then suddenly when did the automobiles come when did ford start making those cars somewhere around the 1900s anyone remembers early 1900s is when the yes some somewhere around this do you notice something interesting? Well, maybe may not be the only reason. After that, coincidentally, you see that the deviations are not heading towards the positive territory. They're shrinking from the negative and they are gradually making their way to its positive territory. Now, there are many reasons to it it's also coincides with heavy industrialization uh infrastructure build up and so on and so forth but there are many reasons that could be there and then a lot of people could argue for example that this is the natural rhythm of the earth and so forth so whatever reason this is a reality and this is all about line plots was that simple this is a reality and this is all about line plots was that simple uh kyle where's the strip plot you did you check in the strip plot i i haven't checked it in i think i'll share my screen yeah would you like to finish this discussion with this and check it in then yes so now um we can just visualize this whole plot maybe just with colors instead of using heights so we use v lines and we set them to a constant height. And we use the same colors we used previously. And once we do that, we get the strip plot, which is you might have seen this pretty famously everywhere after the COP26 summit. So this is quite famous from that. Isn't this the main visualization for that conference? The strip plot, COP26. Yeah. If you just do COP26. One question. That's it. Come again. There's a small question here. So I think we can also make animation with this thing also right. Right. Of course, going from left to right and then I can do the annotations during that movie or specific points, this is the point at which we started something like that. Absolutely, absolutely absolutely those are fun projects please do it you realize that you have all the tools to do that now right you can keep annotating it in your visualization and your animation putting landmarks there saying yeah every bar that you put that is significant you can say this is what was happening at the time i think that's the connection to the data to the underlying reality, basically. Exactly. Yeah, you're mapping it to world events. Yeah. Cool warm is a is a color color map. One of the color palettes standard color palettes. See you should look at the color palette. Well, so it is. Do you see this guy's? Okay, it will come to sequence. You'll get cool walk here. Divergent, let's go down. Yeah, diverging comes in and then it goes it's perfect because our human mind through all the colors that have been used we associate blue with cold red with hot so this is a perfect color map to pick yeah no these color maps that are there again as i i'll repeat this thing guys color maps have been created with great thinking and research and so forth, and people spend endless time creating good color maps. The entire papers and presentations, the readers and so forth. Use color maps where possible. Don't arbitrarily pick your colors. Because if you arbitrarily pick your colors, quite likely you'll get it wrong. Some sector, like for example, colorblind people won't be able to see your colors or it will not look sufficiently distinguished or something or the other. There's a high potential to go wrong. So you should this is about the uni. Just the line gear, really is that line itself has case where there is a significant midpoint to our data. Kyle, you're breaking out. Yeah, my internet is poor. It's all right. Could you please check this in? Because I would like to upload this part also. Yes. All right, guys. So we did line plots. Let's go to the next visualization, which I'll take over and do. After line plot, we could so guys, was this fun? Like, are you getting a sense now it's getting easier. We can do the line plots in Altair in Seaborn and it gets better and better. Let's say that you do it in Altair just to just for the sake of completeness, it is done now using this particular one. The same data, by the way, you'll have to make changes to this. Akai, could you please change this line? Yes. Everywhere. And the rest of the code is the same. You start, this is the seaborn plot. Basic looks terrible. Once you apply the dash of style, it begins to look better. Nothing new is contributed if you look at it, except for the word line plot and minor cosmetic changes, it is essentially like matplotlib. Then you improve upon it, it again, more or less stays similar to what matplotlib produced, not a vast difference. Then you can group the data, this is basically the syntax, and we can look at the annual. Again, if you notice, much of the code is the same, the only difference is instead of plot, you're using line plot explicitly, SMS, not that much value. So because it's not adding too much this notebook sort of ends here let's look at the same line plot now using altair so when you do with altair what happens is that this is the explanation of the data we'll go is that this is the explanation of the data we'll go a basic plot is we don't have okay trust it okay so you notice that a very basic lta plot is by now you realize that there's nothing. The only difference from bubbles to lines is this word. You see, instead of marking it as circle, you're marking it as line. In the language of graphics, grammar of graphics, you would say that this is the aesthetics you paint. This language is of course very typical of Altair because Altair itself, coming ultimately through Vegas and through Detroit, has the grammar of graphics thinking built into it. So this is it. It looks better. We can move forward. So we won't do it right here because there's nothing new here except for this one line, Artline, and some minor cosmetic changes. So then we improve the legends, the title, and so forth. We do multi-series. Here we need to understand a concept called transform fold grid soil. And what it does at this moment, it gets complicated because it has to do with this changing the shape of the data and so forth but anyway here we go you change it to be about these things these four things it's an alternative thing it begins to look like this again looks pretty good then how do you do it by decades you do it like this and how do you do area crops nothing see you guys notice that none of this is, other than the transform pool, which you should become familiar with. Nothing else is new, it's just marked lines. Everything else you're familiar with. Area plot, you can make it into area plot. And, okay, let's go finish it. Make it a parity with my plot with this one, the lines and the stripes bring lines and stripes. Okay. Seaborn is not needed because you'll essentially use the same syntax. Yeah, we should do that. At this moment, commit whichever you have with eventually do that and we'll upload it to the website. Yeah, sure. So that is that for the line plot space. We have about 20 minutes to the lunch. What I would like to do in this 20 minutes is I would like to talk about something, another visual, another set of univariate statistics things, things like box and whisker plots and violent nods and so forth. So we will take the same auto dataset that we have been using for so long. By now you're all familiar with the auto data set, mileage, how does mileage respond to weight of the car, the number of cylinders, the horsepower, and so on and so forth. These are the things. Mileage is, think of it as your target variable. It responds, it varies in response to the number of cylinders you have, the displacement, the size of the engine, the horsepower, the weight of the car have the displacement the size of the engine the horsepower the weight of the car etc etc so these are all parameters that affect and mileage of course improves with years yeah by now you're very familiar with this data set so i won't um let's not go over this data set too much so unique, the basic thing you can do is draw a histogram. What is a histogram? Histogram has, what it does is, if some feature, like here, is MPG, miles per gallon. Miles per gallon, you would agree, is a continuous number. But you discretize it, you pin it you say that hey you know what are values that are between this and this from here to here whatever that is let's say from 8 to 12 is this from the next to this you can specify what your bins are number of bits and then you take you you count how many the data, how many data points fall into this bin versus the next bin and the next. So your y axis is the count, right, or the frequency. How many data points fell into that bin? What does it give you? It gives you a sense of what does it give you a sense of where is the data more concentrated than this. sense of what does it give you a sensor where is the data more concentrated so we can clearly see that in those times most cars gave mileage in this so like between about 10 12 between or let's say 14 to about 14 to 20 was rather common for cars to have they had a lot of data and it was fairly common all the way till about 30 I would say after that it's rapidly decreasing there was some car or a couple of cars it's not very clear where those values are which even gave 45 miles a gap so must be tiny little cars in those days pretty much so histogram is essentially a count dot. By first converting it into the X axis or the actual feature by discretizing the feature effectively into small ranges of bins, range of values. Now to this, let's apply a dash of style, the same things that we have been by now used to doing. I hope you don't need to see all of values. Now to this, let's apply a dash of style, the same things that we have been by now used to doing. I hope you don't need to see all of this. This is all the same thing. Again, what is the method we use? Hist. That's it. Just hist. Hist will draw the histogram. So could we please do this little bit? Please humor me before we break out for lunch. I will give you this particular code because this is a bit tedious. Kyle, maybe you can paste this code. Yes, I'll do it. Let's do that and then you can do the describe and so forth which by now you should be familiar with. Write this line of code. Actually actually write so that you can draw the histogram are we all able to do this guys the histogram code oh i have you pasted it earlier. I don't see it. Maybe she lost it. No, for some reason, that that notebook is not opening in my There you go guys, I've pasted it. Maybe Kate or Harini, please help me out. Sure. So let's load this data. And once you load this data, I want you to type this line out. Type this. So you have a histogram. This is your minimal histogram. Now you know the journey we are going to take. We are going to improve upon it. This is not extremely informative. We are going to make it tell the story properly. So what does data MPG do? It just picks the column called mpg in the data and then you call plot list we could have also said plot function kind is equal to this inside but this is perhaps a bit more intuitive are we all there guys can i move forward okay so we do this we get this basic vanilla thing we improve upon it the improvements are exactly what we did before let's add this uh style element we can copy paste it but then the rest of it guys you notice that you're all familiar with this updating the style ggplot and then the rest of it, guys, you notice that you're all familiar with this updating the style, ggplot. And then the crucial lines are here. What do we do? We set the color. We set the edge color. We set the line group of the edges. These are adding aesthetics to the picture, changing the size of the picture. We're giving it a title. We're doing a title. All of these by now, you're very familiar with, so we'll just copy, give you the code. You can just take it or would you like to type it in? No? Okay, we are due for lunch, so I'll keep it. But do you realize guys that just being a little bit careful creates a vast difference in the picture, in the plot. Would you agree that this already looks like a vast difference over this? So it gets better. Then the system has arbitrarily picked the number of bits. Suppose you wanted to pick your own number of bits, say 20, and you can do that. You can specify the bit, no other change. You now have a histogram in which you have specified the bins. And one of the things you could do is, this is frequency. If you ask this question, and this is a notebook we will do, see when you, let's say that birds are there, okay, we'll do that in a little bit. How likely is it to see the value of t? What would you do? You would take in the 15th bin, the bin that contains, you would say, count the number as a numerator, you would take whatever the number count a numerator you would take whatever the number count is there for 15th bin and then or the bin with 15 and then you would divide it by the total right the total total amount of data so that would be the likelihood of data falling into that bin does that make sense so let's say that you have 100 data points and in this particular bin, eight of them fell. So what is the likelihood that data or any random piece of data will fall? Eight percent. That's exactly it. So what you can do is you can divide it by the total and matplotlib gives you that ability. It will do it automatically. all you have to do is set density is equal to true right and then it becomes probability actually we should say probability density but density it is the same look at it it's exactly the same look at this shape right and because all you have done is scale it only the y-axis has changed it's become probabilities densities rather than counts the y-axis is changed does that make sense and so your y level should say that so what you're saying is the sigma of all of that will be like 100 percent or one exactly yeah so that you the way the formal way to say is that the area under the under the density curve probability density curve is one if you integrate it or in the case of discrete values what you say so what happens is that each of these values when you have discrete people use a statisticians tend to use a language called probability mass right what is the probability mass they all have to add up to one anyway right so i i tend not to distinguish it too much within probability density and mass i call all of them probability density which is very common most people nowadays just say even though there are some nuances if you want to be ultra pure careful you want to say a mass function probability mass function but it is that so what you're saying is that people who are looking at data yeah they tend to look more at the shape and things like that and not much at the actual value of it actually they have mentally like done that they can always go back back and look at it but most of the time they just look at this i don't know scale of the density function and why is it that we prefer looking at the density function hold that thought in your mind we literally have another jupiter node problem dealing with why density functions are gold it will come to that so another question for you is say suppose this is very sensitive i don't want to tell somebody what what action i want to like have some situation or somebody concerned yeah then i would just show the shape to him and say that give me your interpretation exactly you would show the shape you wouldn't keep the value so for example if it is dollar value of revenue right you wouldn't show that you would just say okay this is how the revenue is varying across the months and could you and help me understand or something like that something different so now suppose you group by one of the common things you do is you group it by, see, a categorical. One of the categoricals here in the auto data search is, which country is the automobile? What is the country of origin of the automobile? Is it a Japanese car, a European car, American car? That's what those origins are by the Americas, Japan, and Europe. So you could actually group the data. This is again, basic Pandas. You can group the data by origin. And then for each origin, what would you do? You would plot a separate histogram. You could plot a separate histogram and lo and behold, here you have three separate histograms. One after the other, you have three separate histograms one after the other we have plotted it out and you can clearly see that if you are in origin one you tend to have fairly low mind if you tend to be in origin three you tend to be fairly high mileage so if you had to guess within america If you had to guess which in America's Europe and Japan, what does origin tree look like? Japanese. No, Japanese, they tend to have. Sorry, Japanese. So this is it, this is how you get intuition, but we'll have a lot more to say about histograms after lunch. Now let's refine this figure and let's see what are we shooting for? We are giving it three different colors. Can we do that? Yes, we can do that. All we have to do is pretty much a set of little bit more customizations. And here is the color palette based on the index. colour palette is using tab nine. By the way, a tab 10 is short form of the colours that Tableau tends to use. Tableau is a data visualisation dashboarding tool in which you don't have to write much code, you drag and drop and it comes about. So think of it like Excel. In Excel, you don't write code, you just drag. The UI helps you write some code those frameworks exist and they are good for people who are not into programming or data science very seriously because they give you rapid ability to rapidly create some plots and dashboards but of course you are at a slightly you are in a different game okay so this is it give it an index and there we go a plot subplot which particular plot you're doing uh index plus one why because yeah by the way this subplot you remember number of rows number of rows number of columns and then what is the index of your particular plot so if you are making three plots remember indexing and this is where you have to remember panda starts indexing of arrays at zero but matplotlib and the graphics community starts indexing at one which explains why you're adding a plus one to the index right that's all it is then you set some limits and so on and transparencies and you put some label and all of it is very well explained in this uh in the comments here said that transparency so you realize that this is all good uh fairly straightforward work nothing no magic here except that it is the use of subpots so which i believe here also is one second and subplots the same thing sometimes three subplots so you do that now you get your color also now you say this looks beautiful personally i find that this is very informative then you say all right there's another kind of visualization do remember stack the stack bar chart, so this is just a recap redo this, but you stack one on top of the other. This code by now should feel very familiar to you, the only thing is there's a different color palette used. And so we go, so this is for the histogram which is essentially a form of bar chart. and so we go so this is for the histogram which is essentially a form of bar chart so what is the gain over here that origin and then the that is right so if you look at this for example how many cars are giving you 15 miles a gallon it turns out that these low my so look at the low mileage cars 10 bills around 10 miles a gallon that that dubious distinction goes to one cars in the americas right then if you look for example at this other end this green that distinction goes to well it's a Japanese car but now look at something in between what you're seeing is if you look at cars that are giving you around 30 miles a gallon this particular one they are equally distributed more or less the sizes look the same right when you compare their sizes they look the same in all three regions. So if I had revenue, and I was trying to compare the revenue across the different regions and things like that. Yes. In that case, if you take the absolute values of it, some of it will just shrink away, if it is like a gold region. That is right. So then how do you figure out... Remember, we did proportional bars. Use proportional bars. Proportional bar charts, because then you can compare that. So, for example, I can say that the revenue from Japan, let's say that I have my software selling in three regions. I could say that my Japanese revenue, Japan answers for 80% of the revenue, Europe accounts for 20% of the revenue, and let's say US accounts for the remaining, I mean, not 20, and so, I mean, 10%, it adds up to whatever it is. So linear, you can see the comparison. Now, when this happens happens people sometimes say you know what let's use pie chart traditionally people use a pie chart because all these libraries give pie chart the problem with pie chart is so pie chart has become tremendously debated these days right because it violates the ink to data ratio, data integration. Too much ink is spilled, number one, to show the sector. And all you're seeing is the arc widths and area widths. Now, the other thing is human eye as a perceptual sensor or perceptual device, it handles linear comparisons much better than it handles area comparisons. Area comparisons always sort of exaggerate the data. Tends to, right, unless you are careful to take the square roots and so on and so forth. And most people are not right. So that's the main problem. That's the main problem with pie chart. So there has been a huge thing that, for example, I don't usually allow pie chart. Really, sometimes it does make sense. But then what we use is not the pie chart, but the donut chart, in which we just show enough of the circle, fat circle, but not the inside of it. of the circle, fat circle, but not the inside of it. Because you're just wasting ink. You don't let it become any area. You let it just wrap around and be a circle. It's almost like the bar has gone into polar coordinates, which is good. But pie charts, I'm personally not a big fan. It's not me. There's a tremendous amount of debate and scholarship on this topic. It's surprising how much it has been talked about. So you find pie charts fairly unique, especially in the corporate world. Right, that is the instinct of people to just talk about pie charts. And you can't help smiling because, hopefully, if you go from support vectors in training, you will absolutely eschew pie charts and use it sparingly. There are a few good use cases to use it, but generally not much. Pie charts are, for example, good when you want to show, let's say that you're putting things into your shopping basket. So that would be 100%. How much have you filled or how much revenue compared to the target here then you can show circle with that part highlighted the gray circle in that part highlighted even there people would argue that why can't you just show me here because then it would say you are at 80 compared to 100 so a lot of thinking out there but i think that it has a place it's not that it's completely useless it does have a place it does work but use it sparingly that's it all right so now comes the box and this comes what are box in this so let's look at the definition of what a box in this place see in the box and whisker there's a box here right so you first divide the data into quantiles the first third of the data the first half of the data the first three-fourth of the data and then the whole of the data and typically the box represents the central contacts the middle context, the middle context. The reason for that is data often has outliers. The last point I will spill over and go far. So there is a formula that is used and I remember that this was, I think the initial was done by a statistician who formalized it was tiki tuki created the definition of outliers the oldest definition of outliers and then when see this is the up limits of what you consider the boundaries of the outer outliers there is a whole definition of inner outliers and outer outliers real outliers hard outliers soft outliers hard outliers these are the thing and then the anything beyond this fence is there now you circle it out to stand out this is really an amplifier right so what it means is there is a card that's giving you really high amount compared to most cars which are giving you what is this value the average value here 23 or something like that so there is a card that's giving you very high value so this is your box and whiskers these these things are called the whiskers if you think of a how many of you own cats right so you know what whiskers are isn't it yes the box height is the from the upper whisker to the lower whiskers you know the outer fences of outlier right come again is it uh it is the two keys definition it is uh i think it is outer one is three sigma that's how it is. Look it up. I don't want you to see this is very elementary fact. I can't believe that it's not on my fingertips. Just look up Tewke's definition or Box and Biscuit's definition. You'll see what it is. I don't want to be off because sometimes people pad it a little bit. Say this plus this percent of 1.5 times the interquantile range so for example this interquantile range 1.5 times is that people have a bit of it and i'm it is at this moment it's all right it's uh it is 1.5 i just 1.5 times the interquantile isn't it yeah so 1.5 times so that's how you create the limits, but there will be data that will fall outside. And that outside part is of course your real outlands. And now you're saying, okay, no excuses. This is certainly enough, no debate about it. So now you can customize it, make it look better once again. So this is a bit of code. I won't make you do it right now, but Raja Ayyanar?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam?nilam makes the outliers stand out. Isn't it? By putting it like that, it makes it stand out. You're making the box a particular color, you're showing the average in a certain way. It's good. Now notice that the average is not in the center of the box because medium and mean need not agree. In fact, they don't usually. usually now just to point this out you could add a little notch this highlights what has this done it has just made you pay attention to that yes right and Right. So now, and so forth, you could, you could keep going. Actually, is the media is the media. So it makes you pay attention to the media. And now you can keep going and adding a little bit more aesthetics. This also makes it a little bit better, isn't it? Fills it in with color makes the box stand out, then you could group it by the origin, like where is this coming from, here are the origins of the three, automobiles are grouped by origin. What do you see? When it comes to mileage, the biggest outliers are coming from the highest outlier was coming from like japan right from japan like example if you worry where is this guy coming from which region is it coming from and now it is clear it was coming from japan three you could do further customizations we won't go you could color it like for example this is monotonous these are all three why not make them stand out in different colors so you make them stand out in different colors and now we stop in box plot now now now you see that simple box plot has gone through an evolution it's become more informative rather than doing just like this you have evolved it to this right and these are the median values you have evolved it to this level would you agree that this is far more informative Would you agree that this is far more informative? Yes, and pleasant to look at. Then there is another plot which is called the violin plot. It deals with something called a kernel density estimator. I will explain it to you. But it basically hypothesizes how or where data is more prevalent. So this is the violin plot. Obviously, if you look at it, you imagine a violin, there is a vague analogy or similarity to a violin, isn't it? So this shows you the density, the probability density, basically. Yeah, yeah, it's just been symmetrically flipped so in other words so when you look at this you may argue that there is sort of too much ink wasted half only you know half of the violin would have been good isn't it it's basically your histogram smoothed out and flipped it's and the topic is kernel density estimates we'll come to that right after lunch and it's getting time over time for lunch so i'm rushing back so on this horizontal so you could build it while in horizontally okay so there you go uh you can even render your quantiles uh you can even render your quantiles extremers and so on and so forth that you can give all of those arranges type and so forth so we are this is it i will let you read this because we are over lunch time you could do further benefits to this while now you're trying to impose the information of your box and this cup product you see that box and whisker plot information your box and whisker is back if you can notice it right so you can again group it by subject so this is violent with the box in this cup which is quite useful actually okay now this this thing, how did this smooth thing come out of a histogram? We will study that. It's a good topic. We'll study that after lunch when we deal with this important topic of kernel density estimators. It turns out that histograms are good, but there is something better. Histograms have a lot of limitations. There is something better when it comes to getting a gut sense of how the data is distributed. And we'll do that after the exercise.